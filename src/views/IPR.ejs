<%- include('./partials/head') %>
<!-- inline css -->
<!-- Navbar section -->
<%- include('./partials/header') %>
<!-- This is left sidebar  -->
<%- include('./partials/left-sidebar') %>

<main class="main" id="main-content">
    <div class="base-section coustom-section">
        <!--DASHBOARD CONTENT START-->
        <div class="errorHtml"></div>
        <div class="breadcrumbs-container">
            <ul class="breadcrumb">
                <li class="breadcrumb-link">
                    <a href="<%- BASE_URL %>research"> RESEARCH </a>
                </li>
                <li class="breadcrumb-link">IPR</li>
            </ul>
        </div>
        <div >
            <div class="table-card-header text-uppercase d-flex align-items-center justify-content-between">
                <div>
                    <h5 class="pl-2">IPR LIST</h5>
                </div>
                <div >
                    <button id="ipr-add-modal" type="button" class="btn btn-primary add-modal" data-toggle="modal"
                        data-target="#ipr-modal-form">
                        <i class="fas fa-plus plus"></i></button>
                    </button>
                </div>
            </div>
            <div class="card-body table-responsive">
                <div class="d-flex justify-content-between">
                    <div>
                        <label>Show Entries</label>
                        <select class="form-select" id="changeEntry">
                            <option value="5">5</option>
                            <option value="10">10</option>
                            <option value="25">25</option>
                            <option value="50">50</option>
                            <option value="100">100</option>
                            <option value="150">150</option>
                            <option value="200">200</option>
                            <option value="250">250</option>
                            <option value="300">300</option>
                            <option value="350">350</option>
                            <option value="400">400</option>
                            <option value="500">500</option>
                            <option value="800">800</option>
                            <option value="1000">1000</option>
                        </select>
                    </div>
                    <div>
                        <div class="table-searchbar-container">
                            <button type="button" id="searchBtn"><i class="fas fa-search"></i></button>
                            <input type="search" id="searchKeyword" placeholder="Enter keywords" class="table-searchbar">
                        </div>
                    </div>
                </div>
                <table class="table custom-table table-responsive research-pagination" id="ipr-data-list">
                    <thead>
                        <th class="col-lg-1">#</th>
                        <th class="col-lg-1">Type Of Invention(IPR)</th>
                        <th class="col-lg-1">Title OfPatent/Invention</th>
                        <th class="col-lg-1">Patent Status</th>
                        <th class="col-lg-1">Patent Application Number</th>
                        <th class="col-lg-1">Patent Applicant Name</th>
                        <th class="col-lg-1">NMIMS School</th>
                        <th class="col-lg-1">NMIMS Campus</th>
                        <th class="col-lg-1">Action</th>
                    </thead>
                    <% if (IPRDataList) { %>
                        <% IPRDataList.forEach(function(iprData,index) {%>
                            <% const externalEmp = externalEmpList[index]; %>
                            <tr data-ipr-id="<%- iprData.id %>"
                                data-external-id="<%- externalEmp ? externalEmp.id : '' %>" data-external-emp="<%- externalEmp ? externalEmp.external_emp_name : '' %>"
                                data-author-table="<%- iprData.investor_details.table %>" 
                                data-investor-details="<%- iprData.investor_details.investorDetails %>"
                                data-filed-date="<%- iprData.patent_filed_date %>" data-grant-date="<%- iprData.patent_granted_date %>"
                                data-published-date="<%- iprData.patent_published_date %>" data-grant-number="<%- iprData.patent_granted_no %>"
                                data-published-number="<%- iprData.patent_published_num %>" data-institute-affiliation="<%- iprData.institute_affiliation %>"
                                data-supporting-documents="<%- iprData.supporting_documents %>">
                                <td ><%- index+1 %></td>
                                <td class="type-of-invention col-lg-1"><%- iprData.type_of_invention %></td>
                                <td class="title-of-invention col-lg-1"><%- iprData.title_of_invention %></td>
                                <td class="patent-stage col-lg-1"><%- iprData.patent_stage %></td>
                                <td class="application-no col-lg-1"><%- iprData.patent_application_no %></td>
                                <td class="applicant-name col-lg-1"><%- iprData.applicants_name %></td>
                                <td class="nmims-school"><%- iprData.nmims_school %></td>
                                <td class="nmims-campus"><%- iprData.nmims_campus %></td>
                                <td class="col-lg-1">
                                    <label class="view" data-ipr-id="<%- iprData.id %>"><i class="fa-solid fa-eye view text-danger"
                                        data-ipr-id="<%- iprData.id %>"></i></label>
                                    <label class="edit" data-ipr-id="<%- iprData.id %>"><i class="fa fa-edit edit text-danger"
                                        data-ipr-id="<%- iprData.id %>"></i></label>
                                    <label class="delete" data-ipr-id="<%- iprData.id %>"><i class="fa-solid fa-trash delete text-danger"
                                        data-ipr-id="<%- iprData.id %>"></i></label>
                                </td>
                            </tr>
                            <% }); %>
                            <% } else { %>
                                <tr>
                                    <td>Sorry No Data Is Present  </td>
                                </tr>
                              <% } %>
                </table>
                <div class="d-flex justify-content-between">
                    <div>
                        <label >Total entries : <%- rowCount %>
                        </label>
                        <label class="d-none" id="row-count"> <%- rowCount %></label>
                    </div>
                    <div>
                        <button id="prevBtn" class="btn btn-primary">Previous</button>
                        <button id="nextBtn" class="btn btn-primary">Next</button>
                        <p id="pagination" class="pagination-search"></p>
                    </div>
                </div>
        <!--Import Modal -->
        <div class="modal fade" id="open-program-modal" tabindex="-1" aria-labelledby="open-program-modal"
            aria-hidden="true">
        </div>
        <!-- EDIT PROGRAM AND UPDATE -->
        <div class="modal fade" id="edit-program-modal" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="editModalLabel">Update Program</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div id="errorHtml"></div>
                    <div class="modal-body">
                        <div class="mb-3">
                            <label for="exampleInputEmail1" class="form-label">Program Name</label>
                            <input type="text" class="form-control" id="program_name" name="program_name">
                            <input type="hidden" class="form-control" id="hidden_id" name="hidden_id">
                        </div>
                        <div class="mb-3">
                            <label for="exampleInputPassword1" class="form-label">Program Type</label>
                            <select class="form-control" name="program_type_lid" id="program_type_lid">
                                <option value="1">Full Time</option>
                                <option value="2">Part Time</option>
                            </select>
                        </div>
    
                        <div class="mb-3">
                            <label for="abbr" class="form-label">Program Abbr</label>
                            <input type="text" class="form-control" id="abbr" name="abbr">
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        <button type="button" class="btn btn-primary updateProgram">Update</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</main>
<!--IPR   Modal  form -->
<div class="modal fade " id="ipr-modal-form" tabindex="-1" role="dialog" aria-labelledby="ipr-modal-form"
aria-hidden="true">
    <div class="modal-dialog modal-dialog-scrollable modal-lg modal-fullscreen p-5" role="document">
        <div class="modal-content modal-content-data validate-input">
            <div class="modal-header">
                <h5 class="modal-title" id="patent-study">IPR Form </h5>
                <div type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true"><i class="fas fa-times "></i></span>
                </div>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="form-group col-lg-4 col-md-6 col-sm-12 mb-4 ">
                            <label for="type-of-invention" class="form-label fw-bold ">Type of Invention(IPR)</label>
                            <select class="form-control gap-10" id="type-of-invention" data-validate="isEmpty,isExist" data-err-msg="This field is required and select value " required>
                                <option value="" selected>Select option</option>
                                <option  value="Patent" selected>Patent</option>
                                <option  value="Copy Right">Copy Right</option>
                                <option  value="Design Registration">Design Registration</option>
                                <option  value="Trade mark">Trade mark</option>
                                <option  value="Trade Secret">Trade Secret</option>
                            </select>
                    </div>
                    <!-- Title of Invention -->
                    <div class="form-group col-lg-4 col-md-6 col-sm-12 mb-4">
                        <label for="title-of-invention" class="form-label fw-bold">Title of Invention</label>
                        <input type="text" name="titleInvention" id="title-of-invention" data data-err-msg="This field is required and min length > 1." class="form-control fname" data-validate="isEmpty,isAlphabeticWords" required>
                    </div>
                    <!-- Patent Stage -->
                    <div class="form-group col-lg-4 col-md-6 col-sm-12 mb-4">
                        <label for="patent-stage" class="form-label fw-bold">Patent Status</label>
                        <select class="form-control gap-10" id="patent-stage" data-validate="isEmpty,isExist" data-err-msg="This field is required and select a value" required >
                            <option  value="" selected>Select option</option>
                            <option value="Filed">Filed</option>
                            <option value="Published">Published</option>
                            <option value="Granted">Granted</option>
                        </select>
                    </div>

                    <!-- Application Number -->
                    <div class="form-group col-lg-4 col-md-6 col-sm-12 mb-4">
                        <label for="application-no" class="form-label fw-bold">Application
                            Number</label>
                        <input type="number" name="applicationNo" id="application-no" data-validate="isEmpty,isNumber" data-err-msg="Numeric value is required'."  class="form-control number"
                            required>
                    </div>

                       <!-- applicant name -->
                    <div class="form-group col-lg-4 col-md-6 col-sm-12 mb-4">
                        <label for="patent-published-date" class="form-label fw-bold">
                            Applicant Name
                        </label>
                        <input type="text" name="nmims-school" id="applicant-name" data-validate="isEmpty,isExist, isLength:2:255" data-err-msg="This field is required and min length > 1." class="form-control" required>
                    </div>
            
                    <!-- Date of Filed -->
                    <div class="form-group col-lg-4 col-md-6 col-sm-12 mb-4">
                        <label for="patent-filed-date" class="form-label fw-bold">
                            Patent Filed Date
                        </label>
                        <input type="date" name="patent-filed-date" id="patent-filed-date" data-validate="isEmpty,isExist" data-err-msg="Date is required." class="form-control" required>
                    </div>

                      <!-- Date of Grant -->
                      <div class="form-group col-lg-4 col-md-6 col-sm-12 mb-4">
                        <label for="patent-grant-date" class="form-label fw-bold">
                            Patent Grant Date
                        </label>
                        <input type="date" name="patent-grant-date" id="patent-grant-date" data-validate="isEmpty,isExist" data-err-msg="Date is required." class="form-control" required>
                    </div>

                      <!-- Date of Published -->
                      <div class="form-group col-lg-4 col-md-6 col-sm-12 mb-4">
                        <label for="patent-published-date" class="form-label fw-bold">
                            Patent Published Date
                        </label>
                        <input type="date" name="GrantDate" id="patent-published-date" data-validate="isEmpty,isExist" data-err-msg="Date is required." class="form-control" required>
                    </div>
            
                     <!-- Patent Publication Number -->
                     <div class="form-group col-lg-4 col-md-6 col-sm-12 mb-4">
                        <label for="patent-published-number" class="form-label fw-bold">
                            Patent Publication Number
                        </label>
                        <input type="number" name="patent-published-number" id="patent-published-number" data-validate="isEmpty,isNumber" data-err-msg="Numeric Value is required." class="form-control" required>
                    </div>

                      <!-- Patent Granted Number -->
                      <div class="form-group col-lg-4 col-md-6 col-sm-12 mb-4">
                        <label for="patent-granted-number" class="form-label fw-bold">
                            Patent Granted Number
                        </label>
                        <input type="number" name="granted-number" id="patent-granted-number" data-validate="isEmpty,isNumber" data-err-msg="Numeric Value is required." class="form-control" required>
                    </div>

                      <!-- Institite Affiliation -->
                      <div class="form-group col-lg-4 col-md-6 col-sm-12 mb-4">
                        <label for="institute-affiliation" class="form-label fw-bold">
                            Institute Affiliation
                        </label>
                        <input type="text" name="institute-affiliation" id="institute-affiliation" data-validate="isEmpty,isExist" data-err-msg="This field is required and min length > 1." class="form-control" required>
                    </div>

                     <!-- nmims School-->
                     <div class="form-group col-lg-4 col-md-6 col-sm-12 mb-4">
                        <label for="nmims-school" class="form-label fw-bold">
                            NMIMS School
                        </label>
                        <input type="text" name="nmims-school" id="nmims-school" data-validate="isEmpty,isExist" data-err-msg="This field is required and min length > 1." class="form-control" required>
                    </div>

                     <!-- nmims campus -->
                     <div class="form-group col-lg-4 col-md-6 col-sm-12 mb-4">
                        <label for="nmims-campus" class="form-label fw-bold">
                            NMIMS Campus
                        </label>
                        <input type="text" name="nmims-campus" id="nmims-campus" data-validate="isEmpty,isExist" data-err-msg="This field is required and min length > 1." class="form-control" required>
                    </div>
                    <!-- Inventor -->
                    <div class="form-group col-lg-4 col-md-6 col-sm-12 mb-4">
                        <label for="investor-details" class="form-label fw-bold mb-3">Details of Other Inventors
                            ?</label><br>
                        <div class="form-check-inline">
                            <label for="internal" class="form-check-label enter-faculty-type">
                                <input type="radio" class="form-check-input enternal-type" name="investor-details" id="is-internal" value="Internal">
                               <span id="enternal-text">Internal</span>
                            </label>
                            <div class="col-lg-1 p-6 w-100 d-none" id="employee-list">
                                <select id="emp-name" style="width: 200px;" multiple> 
                                    <option value="">select employee name</option>
                                    <% internalEmpList.forEach(function(employee) { %>
                                        <option value="<%= employee.employee_name %>">
                                           <%= employee.employee_name %>
                                        </option>
                                    <% }); %>
                                </select>
                            </div>
                        </div>
                        <div class="form-check-inline">
                            <label for="is-external"   class="form-check-label external-faculty">
                                <input type="radio" class="form-check-input" id="is-external" name="investor-details" value="External" >
                                <span id="external-text">External</span>
                            </label>
                            
                        </div>
                    </div>
                    <div id="author-details" class="form-group col-lg-6 col-md-8 col-sm-12 mb-4 d-none">
                        <div class="author-details-section col-lg-6 col-md-8 col-sm-12">
                          <label for="author-name " class="form-label fw-bold">Author Name:</label>
                          <input type="text" id="author-name" class="col-md-12 form-control" placeholder="Enter author name">
                          <button id="add-more-details" class="btn col-md-12 btn-md btn-primary submit-btn update-btn" type="button">Add More Details</button>
                        </div>
                      </div>
                     <!-- Upload Supporting Documents-->
                     <div class="form-group col-lg-6 col-md-8 col-sm-12 mb-4">
                        <div class="col-lg-6 col-md-8 col-sm-12">
                            <label for="supporting-documents" class="form-label fw-bold ">
                                Upload Supporting Documents
                            </label>
                            <div class="d-flex">
                                <input type="file" name="IPRFile" id="ipr-file"
                                    class="col-md-12 form-control" data-validate="isEmpty,isExist,isFile" data-err-msg="File is required." required multiple>
                                    <button class="download-btn download-file" id="ipr-data-file-edit"><i class="fas fa-download text-danger"></i></button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            
            <!-- Add your modal footer buttons if needed -->
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-md btn-primary submit-btn d-none" id="submit-btn">Submit</button>
                <button class="btn btn-md btn-primary update-btn d-none" id="update-btn">Update</button>
            </div>
        </div>
    </div>
</div>

<!--  IPR Modal form For View -->
<div class="modal fade " id="ipr-data-modal-view" tabindex="-1" role="dialog" aria-labelledby="patent-submission-modal"
    aria-hidden="true">
    <div class="modal-dialog modal-dialog-scrollable modal-lg modal-fullscreen p-5" role="document">
        <div class="modal-content modal-content-data">
            <div class="modal-header">
                <h5 class="modal-title" id="patent-study">IPR Data Form </h5>
                <div type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true"><i class="fas fa-times "></i></span>
                </div>
            </div>
            <div class="modal-body">
                <div class="row">
                    <!-- type of invetion -->
                    <div class="col-lg-4 col-md-6  col-sm-12 p-3">
                        <div class="box">
                            <div class="sub-title-text sub-title">Type Of Invention :</div>
                            <label class="view-content" id="view-type-of-invetion"></label>
                        </div>
                    </div>
                    <!-- title of invention -->
                    <div class="col-lg-4 col-md-6  col-sm-12 p-3">
                        <div class="box">
                            <div class="sub-title-text sub-title">Title Of Invention :</div>
                            <label class="view-content" id="view-title-of-invetion"></label>
                        </div>
                    </div>
                    <!-- PATENT STAGE -->
                    <div class="col-lg-4 col-md-6  col-sm-12 p-3">
                        <div class="box">
                            <div class="sub-title-text sub-title">Patent Stage :</div>
                            <label class="view-content" id="view-patent-stage"></label>
                        </div>
                    </div>
                    <!-- patent Applicant Name -->
                    <div class="col-lg-4 col-md-6  col-sm-12 p-3">
                        <div class="box">
                            <div class="sub-title-text sub-title">Patent Applicaton Name :</div>
                            <label class="view-content" id="view-applicant-name"></label>
                        </div>
                    </div>
                    <!-- APPLICATION NUMBER -->
                    <div class="col-lg-4 col-md-6  col-sm-12 p-3">
                        <div class="box">
                            <div class="sub-title-text sub-title">Patent Applicaton Number :</div>
                            <label class="view-content" id="view-application-number"></label>
                        </div>
                    </div>
                    <!-- Patent  Filed Date -->
                    <div class="col-lg-4 col-md-6  col-sm-12 p-3">
                        <div class="box">
                            <div class="sub-title-text sub-title"> Patent  Filed Date:</div>
                            <label class="view-content" id="view-filed-date"></label>
                        </div>
                    </div>

                    <!-- Patent  Grant Date -->
                    <div class="col-lg-4 col-md-6  col-sm-12 p-3">
                        <div class="box">
                            <div class="sub-title-text sub-title"> Patent  Grant Date:</div>
                            <label class="view-content" id="view-grant-date"></label>
                        </div>
                    </div>

                    <!-- Patent Published Date -->
                    <div class="col-lg-4 col-md-6  col-sm-12 p-3">
                        <div class="box">
                            <div class="sub-title-text sub-title"> Patent Published Date:</div>
                            <label class="view-content" id="view-published-date"></label>
                        </div>
                    </div>
                    <!-- Institute Affiliation -->
                    <div class="col-lg-4 col-md-6  col-sm-12 p-3">
                        <div class="box">
                            <div class="sub-title-text sub-title">Institute Affiliation  :</div>
                            <label class="view-content" id="view-institute-affiliation"></label>
                        </div>
                    </div>

                     <!-- Details of Other Inventors -->
                     <div class="col-lg-4 col-md-6  col-sm-12 p-3">
                        <div class="box">
                            <div class="sub-title-text sub-title">Institute Affiliation  :</div>
                            <label class="view-content" id="view-investors-details"></label>
                        </div>
                    </div>

                    <!-- NMIMS School -->
                    <div class="col-lg-4 col-md-6  col-sm-12 p-3">
                        <div class="box">
                            <div class="sub-title-text sub-title"> NMIMS School :</div>
                            <label class="view-content" id="view-nmims-school"></label>
                        </div>
                    </div>

                     <!-- NMIMS Campus -->
                    <div class="col-lg-4 col-md-6  col-sm-12 p-3">
                        <div class="box">
                            <div class="sub-title-text sub-title"> NMIMS Campus :</div>
                            <label class="view-content" id="view-nmims-campus"></label>
                        </div>
                    </div>

                    <!-- Patent Publication Number -->
                    <div class="col-lg-4 col-md-6  col-sm-12 p-3">
                        <div class="box">
                            <div class="sub-title-text sub-title"> Patent Publication Number :</div>
                            <label class="view-content" id="view-publication-number"></label>
                        </div>
                    </div>

                    <!-- Patent Granted Number -->
                    <div class="col-lg-4 col-md-6  col-sm-12 p-3">
                        <div class="box">
                            <div class="sub-title-text sub-title"> Patent Granted Number :</div>
                            <label class="view-content" id="view-granted-number"></label>
                        </div>
                    </div>
                    <!-- Upload Data -->
                    <div class="col-lg-4 col-md-6  col-sm-12 p-3">
                        <div class="box">
                            <div class="sub-title-text sub-title">
                                <button class="btn btn-primary h-10 w-10 download-file" id="supporting-document">
                                    <i class="fas fa-download text-danger"></i> Download patentDocument
                                </button>
                            </div>
                            <label class="view-content" id="view-patent-file"></label>
                        </div>
                    </div>
                </div>
            </div>
            <!-- Add your modal footer buttons if needed -->
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
<div id="employees-list-data" data-employees='<%- JSON.stringify(internalEmpList) %>' style="display: none;"></div>
<script src="https://cdnjs.cloudflare.com/ajax/libs/tom-select/2.3.1/js/tom-select.complete.min.js" integrity="sha512-zdXqksVc9s0d2eoJGdQ2cEhS4mb62qJueasTG4HjCT9J8f9x5gXCQGSdeilD+C7RqvUi1b4DdD5XaGjJZSlP9Q==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>

<script>
    //   for index icrement
    const rowCount = document.getElementById('row-count');
    let rowIndex = rowCount.innerText;
    let indexValue = parseInt(rowIndex, 10);
    const addIPRModal = document.getElementById('ipr-add-modal');
    const submitBtn = document.getElementById('submit-btn');
    const updateBtn = document.getElementById('update-btn');
    // const fileView = document.getElementById('file-view');
    const downloadLink = document.getElementById('downloadLink');
    const iprDataList = document.getElementById('ipr-data-list');
    const employeeDropdown = document.getElementById("emp-name");
    const addMoreDetailsButton = document.getElementById("add-more-details");
    let iprId, rowToBeUpdated;
    let storedFacultyValue, InternalAuthorValue, externalAuthorValue;

    addIPRModal.addEventListener('click' , function(event){
        if(event.target.tagName === 'BUTTON' && event.target.classList.contains('add-modal') || event.target.classList.contains('plus')){
            submitBtn.classList.remove('d-none');
            updateBtn.classList.add('d-none');
            // fileView.classList.add('d-none');
            // modalImage.classList.add('d-none'); 
            //d-none download button
            InternalAuthorValue = '';
            externalAuthorValue = '';
            storedFacultyValue = '';
            employeeList.classList.add('d-none');
            authorDetails.classList.add('d-none');
            const IPRDataFiles = document.querySelector('#ipr-data-file-edit');
            IPRDataFiles.classList.add('d-none');
    
            // const typeOfInvention = document.getElementById('type-of-invention');
            // const titleOfInvention = document.getElementById('title-of-invention');
            // const patentStage = document.getElementById('patent-stage');
            // const applicationNum = document.getElementById('application-no');
            // const subMissionDate = document.getElementById('date');
            const supportingDocuments = document.querySelector('input[type="file"]');
            const isInternalFaculty = document.getElementById('is-internal');
            const isExternalFaculty = document.getElementById('is-external');
            document.getElementById('type-of-invention').value = '';
            document.getElementById('title-of-invention').value = '';
            document.getElementById('application-no').value = '';
            document.getElementById('patent-filed-date').value = '';
            document.getElementById('patent-grant-date').value = '';
            document.getElementById('patent-published-date').value = '';
            document.getElementById('patent-granted-number').value = '';
            document.getElementById('institute-affiliation').value = '';
            document.getElementById('nmims-school').value = '';
            document.getElementById('nmims-campus').value = '';
            document.getElementById('patent-published-number').value = '';
            document.getElementById('applicant-name').value = '';
            
            isInternalFaculty.checked = false;
            isExternalFaculty.checked = false;

        }
    })
    
    const insertIPRforms = async (url) => {
        const IPRData = new FormData();
        const iprFiles = document.getElementById('ipr-file');
        // patentFile
        const iprFilesData = iprFiles.files;
        console.log('iprFilesData ===>>>', iprFilesData)
        for (let i = 0; i < iprFilesData.length; i++) {
            console.log('file name  ==>>', iprFilesData[i].name);
            IPRData.append('supportingDocuments', iprFilesData[i]);
        }
        // iprFilesData.map(file => IPRData.append('supportingDocuments', file))
    
        const selectedTypeOfInvention = document.getElementById('type-of-invention').value;
        IPRData.append('typeOfInvention', selectedTypeOfInvention);
        
        const titleOfInvention = document.getElementById('title-of-invention').value;
        IPRData.append('titleOfInvention', titleOfInvention);

        const selectPatentStatus = document.getElementById('patent-stage').value;
        IPRData.append('patentStage', selectPatentStatus);

        const applicationNum= document.getElementById('application-no').value;
        IPRData.append('applicationNum', applicationNum);

        const patentFiledDate = document.getElementById('patent-filed-date').value;
        IPRData.append('patentFiledDate', patentFiledDate);

        const patentGrantDate= document.getElementById('patent-grant-date').value;
        IPRData.append('patentGrantDate', patentGrantDate);

        const patentPublishedDate = document.getElementById('patent-published-date').value;
        IPRData.append('patentPublishedDate', patentPublishedDate);

        const patentPublishedNumber= document.getElementById('patent-published-number').value;
        IPRData.append('patentPublishedNumber', patentPublishedNumber);

        const patentGrantedNo = document.getElementById('patent-granted-number').value;
        IPRData.append('patentGrantedNo', patentGrantedNo);


        const instituteAffiliation = document.getElementById('institute-affiliation').value;
        IPRData.append('instituteAffiliation', instituteAffiliation);

        const nmimsSchool = document.getElementById('nmims-school').value;
        IPRData.append('nmimsSchool', nmimsSchool);

        const nmimsCampus = document.getElementById('nmims-campus').value;
        IPRData.append('nmimsCampus', nmimsCampus);
        
        const applicantName = document.getElementById('applicant-name').value;
        console.log('applicantName ===>>>>', applicantName);
        IPRData.append('applicantName', applicantName);
        const investorDetails = document.querySelector('input[name="investor-details"]:checked')
        await insertFacultyNameString(investorDetails, IPRData);


        fetch(url, {
            method: 'POST',
            body: IPRData
        })
        .then((result) => {
           return  result.json()
        })
        .then((data) => {
            if (data.status === 'Done') {
                console.log('data >>>', data);
                iprId = data.iprId;
                const rowCountInteger = parseInt(data.rowCount, 10);
                const IndexEntry = rowCountInteger + indexValue
                console.log('IndexEntry ===>>>', IndexEntry);
                const newIprRow = document.createElement('tr');
                newIprRow.setAttribute('data-filed-date' , data.IprData.patentFiledDate);
                newIprRow.setAttribute('data-published-date' , data.IprData.patentPublishedDate);
                newIprRow.setAttribute('data-grant-number' , data.IprData.patentGrantedNo)
                newIprRow.setAttribute('data-published-number' , data.IprData.patentPublishedNumber);
                newIprRow.setAttribute('data-institute-affiliation' , data.IprData.instituteAffiliation);
                newIprRow.setAttribute('data-supporting-documents' , data.IprData.iprFilesString);
                newIprRow.setAttribute('data-investor-details' , data.investorDetailsString);
                newIprRow.innerHTML = `
                    <td>${IndexEntry}</td>
                    <td class="type-of-invention col-lg-1">${data.IprData.typeOfInvention}</td>
                    <td class="title-of-invention col-lg-1">${data.IprData.titleOfInvention}</td>
                    <td class="patent-stage col-lg-1">${data.IprData.patentStage}</td>
                    <td class="application-no col-lg-1">${data.IprData.applicationNum}</td>
                    <td class="applicant-name col-lg-1">${data.IprData.applicantName}</td>
                    <td class="nmims-school">${data.IprData.nmimsSchool}</td>
                    <td class="nmims-campus">${data.IprData.nmimsCampus}</td>
                    <td class="cell ">
                        <label class="view" data-ipr-id="${data.iprId}"><i class="fa-solid fa-eye view text-danger"
                            data-ipr-id="${data.iprId}"></i></label>
                        <label class="edit" data-ipr-id="${data.iprId}"><i class="fa fa-edit edit text-danger"
                        data-ipr-id="${data.iprId}"></i></label>
                            <label class="delete" data-ipr-id="${data.iprId}"><i class="fa-solid fa-trash delete text-danger"
                                data-ipr-id="${iprId}"></i></label>
                    </td> `;

                iprDataList.appendChild(newIprRow);
                $('#ipr-modal-form').modal('hide');
                Swal.fire({
							position: "top-center",
							icon: "success",
							title: `${data.message}`,
							showConfirmButton: false
							// timer: 1500
						});
                    }
                    else{
                        console.log('data ====>>>>>', data);
                        Swal.fire({
							position: "top-center",
							icon: "error",
							title: `${data.errorCode}`,
							color : "red",
							with : "20PX",
							html: `<span style="color: red;">${data.message}</span>`,
							showConfirmButton: false,
						});
                    }
        })
        .catch((error) => {
                    // This will catch network errors and errors thrown from the .then block above
                    console.error('Error:', error);
                    const message = error;
                    Swal.fire({
							position: "top-center",
							icon: "error",
							title: "Data Insertion Failed",
							color : "red",
							with : "20PX",
							html: `<span style="color: red;">${message}</span>`,
							showConfirmButton: false,
						});
                });
    };
    
    submitBtn.addEventListener('click', async () => {
       const isValid = validateRequiredFormFields(submitBtn);
       if(isValid) {
            await insertIPRforms('<%- BASE_URL %>research/IPR/insert');

       }
       else{
        Swal.fire({
				position: "top-center",
				icon: "error",
				title: "Validation Failed",
				color : "red",
				showConfirmButton: false,
		});
       }
    });

    iprDataList.addEventListener('click', function (event) {

            if (event.target.classList.contains('edit')) {
                submitBtn.classList.add('d-none');
                updateBtn.classList.remove('d-none');
                // fileView.classList.remove('d-none');
                // modalImage.classList.remove('d-none');
                employeeList.classList.add('d-none');
                authorDetails.classList.add('d-none');
                InternalAuthorValue = '';
                externalAuthorValue = '';
                storedFacultyValue = '';
                removeErrorMsg();
                rowToBeUpdated = event.target.closest('tr');
                console.log('rowToBeUpdated in siode edit ====>>>', rowToBeUpdated)
                // function call for download button
                setFileNameAttributeToBeDownload(rowToBeUpdated);
                iprId = event.target.getAttribute('data-ipr-id');
                console.log('Id For Updation', iprId);
                const typeOfInvention = document.getElementById('type-of-invention')
                const titleOfInvention =  document.getElementById('title-of-invention');
                const patentStage = document.getElementById('patent-stage');
                const applicationNum = document.getElementById('application-no');
                const internalAuthor = document.getElementById('is-internal');
                const externalAuthor = document.getElementById('is-external');
                const applicantName = document.getElementById('applicant-name');
                const patentFiledDate = document.getElementById('patent-filed-date');
                const patentGrantDate = document.getElementById('patent-grant-date');
                const patentPyblishedDate = document.getElementById('patent-published-date');
                const patentPublishedNumber= document.getElementById('patent-published-number');
                const patentGrantedNo = document.getElementById('patent-granted-number');
                const instituteAffiliation = document.getElementById('institute-affiliation');
                const nmimsSchool = document.getElementById('nmims-school');
                const nmimsCampus = document.getElementById('nmims-campus');
                let iprDocuments = document.getElementById('ipr-file');
                const investorDetailsString = rowToBeUpdated.getAttribute('data-investor-details');
                const authorTable = rowToBeUpdated.getAttribute('data-author-table');
                console.log('authorTable ====>>>', authorTable)
                console.log('investorDetailsString ====>>>', investorDetailsString)
                if (authorTable === 'internalEmpList') {
                    internalAuthor.checked = true;
                }
                else {
                    externalAuthor.checked = true;
                }

                typeOfInvention.value = rowToBeUpdated.querySelector('.type-of-invention').innerText;
                console.log('typeOfInvention ==>>>', typeOfInvention.value)
                titleOfInvention.value = rowToBeUpdated.querySelector('.title-of-invention').innerText;
                patentStage.value = rowToBeUpdated.querySelector('.patent-stage').innerText;
                applicationNum.value = rowToBeUpdated.querySelector('.application-no').innerText;
                applicantName.value = rowToBeUpdated.querySelector('.applicant-name').innerText;
                nmimsSchool.value = rowToBeUpdated.querySelector('.nmims-school').innerText;
                nmimsCampus.value = rowToBeUpdated.querySelector('.nmims-campus').innerText;
                const fileDateData = rowToBeUpdated.getAttribute('data-filed-date');
                const grantDateData = rowToBeUpdated.getAttribute('data-grant-date');
                const publishedDateData =  rowToBeUpdated.getAttribute('data-published-date');
                const filedDateFormate = formatDateToYYYYMMDD(fileDateData);
                const grantDateFormate = formatDateToYYYYMMDD(grantDateData);
                const publishedDateFormate = formatDateToYYYYMMDD(publishedDateData);
                console.log('publishedDateFormate ===>>>>', publishedDateFormate)

                patentFiledDate.value = filedDateFormate;
                patentGrantDate.value = grantDateFormate;
                patentPyblishedDate.value = publishedDateFormate;

                patentPublishedNumber.value = rowToBeUpdated.getAttribute('data-published-number');
                patentGrantedNo.value = rowToBeUpdated.getAttribute('data-grant-number')
                instituteAffiliation.value = rowToBeUpdated.getAttribute('data-institute-affiliation');


                iprDocuments = rowToBeUpdated.getAttribute('data-supporting-documents');
                // console.log('iprDocuments.value ===>>>', iprDocuments.value);
                console.log('iprDocuments ==>>>', iprDocuments)
                // const supportingDocuments = iprDocuments.files;
                // console.log('supportingDocuments ==>>', supportingDocuments);

                storedFacultyValue = rowToBeUpdated.getAttribute('data-investor-details');
                console.log('storedFacultyValue ====>>>>>', storedFacultyValue);
               
                $('#ipr-modal-form').modal('show');

            }

            //   for delete patent submission form
            if (event.target.classList.contains('delete')) {
                const IPRDeleteRow = event.target.closest('tr');
                iprId = event.target.getAttribute('data-ipr-id');
                let confirmDelete = "Do you want to delete the Book  Publication?";
                if (confirmDelete) {
                    Swal.fire({
                        title: "Are you sure?",
                        text: "You won't be able to revert this!",
                        icon: "warning",
                        showCancelButton: true,
                        confirmButtonColor: "#3085d6",
                        cancelButtonColor: "#d33",
                        confirmButtonText: "Yes, delete it!"
                    }).then((result) => {
                        if (result.isConfirmed) {
                            // Execute fetch request here after confirmation
                            fetch('<%- BASE_URL %>research/IPR/delete', {
                                method: 'POST',
                                headers: {
                                    'content-type': 'application/json'
                                },
                                body: JSON.stringify({ iprId })
                            })
                                .then((result) => result.json())
                                .then((data) => {
                                    if (data.status === 'Done') {
                                        console.log('data ==>>', data);
                                        IPRDeleteRow.remove();
                                        Swal.fire({
                                            title: "Deleted!",
                                            text: "Record has been deleted.",
                                            icon: "success"
                                        }).then(() => {
                                            location.reload();
                                        });
                                    }
                                })
                                .catch((error) => {
                                    console.error('Error:', error);
                                    const message = error;
                                    Swal.fire({
                                        position: "top-center",
                                        icon: "error",
                                        title: `${message}`,
                                        color: "red",
                                        showConfirmButton: false,
                                    });
                                });
                        }
                    });
                }
                else {
                    return
                }
        }

            // patent submission view
            if (event.target.classList.contains('view')) {
                console.log('data ready for view');
                const iprRowToBeViewed = event.target.closest('tr');
                console.log('row to be viewed', iprRowToBeViewed);
                let iprFile = iprRowToBeViewed.getAttribute('data-supporting-documents');
                console.log('iprFile ==>>', iprFile)
                iprId = event.target.getAttribute('data-ipr-id')
                $('#ipr-data-modal-view').modal('show');
                const viewTypeOfInvetion = document.getElementById('view-type-of-invetion');
                const viewTitleOfinvetion = document.getElementById('view-title-of-invetion');
                const viewPatentFilesDate = document.getElementById('view-filed-date');
                const viewPatentGrantDate = document.getElementById('view-grant-date');
                const viewPatentPublishedDate = document.getElementById('view-published-date');
                const viewPublicationNumber = document.getElementById('view-publication-number');
                const viewGrantedNumber = document.getElementById('view-granted-number');
                const viewSupportingDocumnets = document.getElementById('supporting-document');
                const viewInstituteAffiliation = document.getElementById('view-institute-affiliation');
                const viewInvestorDetails = document.getElementById('view-investors-details');
                const viewNmimsSchool = document.getElementById('view-nmims-school');
                const viewNmimsCapus = document.getElementById('view-nmims-campus');
                const viewApplicantName = document.getElementById('view-applicant-name');
                const viewPatentStage = document.getElementById('view-patent-stage')
                const viewApplicationNum = document.getElementById('view-application-number')

                fetch('<%- BASE_URL %>research/IPR/view', {
                    method: 'POST',
                    headers: {
                        'content-type': 'application/json'
                    },
                    body: JSON.stringify({iprId}
                         )
                })
                    .then((result) => {
                        return result.json();
                    })
                    .then((data) => {
                        if (data.status === 'Done') {
                            console.log('data', data)
                            setFileNameInButtons(data) 
                            viewTypeOfInvetion.innerText = data.IPRData.type_of_invention;
                            viewTitleOfinvetion.innerText = data.IPRData.title_of_invention;
                            viewPatentFilesDate.innerText = formatDateToYYYYMMDD(data.IPRData.patent_filed_date);
                            viewPatentGrantDate.innerText = formatDateToYYYYMMDD(data.IPRData.patent_granted_date);
                            viewPatentPublishedDate.innerText = formatDateToYYYYMMDD(data.IPRData.patent_published_date);
                            viewPublicationNumber.innerText = data.IPRData.patent_published_num;
                            viewGrantedNumber.innerText = data.IPRData.patent_granted_no;
                            // viewSupportingDocumnets.innerText = data.IPRData.supporting_documents;
                            viewInstituteAffiliation.innerText = data.IPRData.institute_affiliation;
                            viewInvestorDetails.innerText = data.IPRData.investor_details.replace(/,/g, ' ');
                            viewNmimsSchool.innerText = data.IPRData.nmims_school;
                            viewNmimsCapus.innerText = data.IPRData.nmims_campus;
                            viewApplicantName.innerText = data.IPRData.applicants_name;
                            viewPatentStage.innerText = data.IPRData.patent_stage;
                            viewApplicationNum.innerText = data.IPRData.patent_application_no;

                        }
                        else{
                            Swal.fire({
							position: "top-center",
							icon: "error",
							title: `${data.errorCode}`,
							color : "red",
							with : "20PX",
							html: `<span style="color: red;">${data.message}</span>`,
							showConfirmButton: false,
						});
                        }
                    })
                    .catch((error) => {
                        Swal.fire({
							position: "top-center",
							icon: "error",
							title: `${error}`,
							color : "red"
                    })
            })

        }
    });
    // update function for update the record
    const updatedIprData = async(url) => {
        console.log('clickedd');
        const updatedTypeOfInvention = document.getElementById('type-of-invention').value;
        const updatedTitleOfInvention = document.getElementById('title-of-invention').value;
        const updatedPatentStage = document.getElementById('patent-stage').value;
        const updatedPatentFiledDate =  document.getElementById('patent-filed-date').value
        const updatedApplicationNum = document.getElementById('application-no').value;
        const updatedPatentGrantDate = document.getElementById('patent-grant-date').value;
        const updatedApplicantName = document.getElementById('applicant-name').value;
        const updatedPatentPublishedDate = document.getElementById('patent-published-date').value;
        const updatedPublishedNum = document.getElementById('patent-published-number').value;
        console.log('updatedPublishedNum ===>>>', updatedPublishedNum)
        const updatedPatentGrantNum = document.getElementById('patent-granted-number').value;
        const updatedIntituteAffiliation = document.getElementById('institute-affiliation').value;
        const updatedNmimsSchool = document.getElementById('nmims-school').value;
        const updatedNmimsCampus = document.getElementById('nmims-campus').value;
        const updatedInvestor = document.querySelector('input[name="investor-details"]:checked');
        
        
        const updatedIPRData = new FormData();
        // Append the updated values to FormData
        updatedIPRData.append('iprId' , iprId) ;
        const updatedIPRFiles = document.getElementById('ipr-file');
        // patentFile
        console.log('updatedIPRFiles ==>>', updatedIPRFiles);
        let updatedIprFilesData = updatedIPRFiles.files;
        console.log('updatediprFilesData ======>>>>', updatedIprFilesData);
        updatedIprFilesData ?
            Array.from(updatedIprFilesData).forEach(file => {
                console.log('file name  ==>>', file.name);
                updatedIPRData.append('supportingDocuments', file);
            }) :
            (updatedIprFilesData = null, updatedIPRData.append('supportingDocuments', updatedIprFilesData));
        updatedIPRData.append('typeOfInvention', updatedTypeOfInvention);
        updatedIPRData.append('titleOfInvention', updatedTitleOfInvention);
        updatedIPRData.append('patentStage', updatedPatentStage);
        updatedIPRData.append('applicationNum', updatedApplicationNum);
        updatedIPRData.append('patentFiledDate', updatedPatentFiledDate);
        updatedIPRData.append('patentGrantDate', updatedPatentGrantDate);
        updatedIPRData.append('patentPublishedDate', updatedPatentPublishedDate);
        updatedIPRData.append('patentPublishedNumber', updatedPublishedNum);
        updatedIPRData.append('patentGrantedNo', updatedPatentGrantNum);
        updatedIPRData.append('instituteAffiliation', updatedIntituteAffiliation);
        updatedIPRData.append('nmimsSchool', updatedNmimsSchool);
        updatedIPRData.append('nmimsCampus', updatedNmimsCampus);
        updatedIPRData.append('applicantName', updatedApplicantName);
        //function call for set the value of radio button 
        await updateFacultyNameString(updatedInvestor, updatedIPRData, storedFacultyValue);

        // fetch api
        fetch(url , {
            method : 'POST',
            body : updatedIPRData
        })
        .then((result) => {
            return result.json();

        })
        .then((data) => {
            if(data.status === 'Done'){
                console.log('Updated Data ==> ', data)
                console.log('updated data title ===>', data.updatedIPRData.typeOfInvention);
                rowToBeUpdated.setAttribute('data-filed-date' , data.updatedIPRData.patentFiledDate);
                rowToBeUpdated.setAttribute('data-published-date' , data.updatedIPRData.patentPublishedDate);
                rowToBeUpdated.setAttribute('data-grant-number' , data.updatedIPRData.patentGrantedNo)
                rowToBeUpdated.setAttribute('data-published-number' , data.updatedIPRData.patentPublishedNumber);
                rowToBeUpdated.setAttribute('data-institute-affiliation' , data.updatedIPRData.instituteAffiliation);
                rowToBeUpdated.setAttribute('data-supporting-documents' , data.updatedIPRData.iprFilesString);
                rowToBeUpdated.setAttribute('data-investor-details' , data.investorDetailsString);
                // if(updatedIprFilesData){
                //     rowToBeUpdated.setAttribute('data-supporting-documents').innerText = data.iprFilesString;
                // }
                updatedIprFilesData ? rowToBeUpdated.setAttribute('data-supporting-documents', data.iprFilesString) : null; 
                rowToBeUpdated.querySelector('.type-of-invention').innerText = data.updatedIPRData.typeOfInvention;
                rowToBeUpdated.querySelector(".title-of-invention").innerText = data.updatedIPRData.titleOfInvention;
                rowToBeUpdated.querySelector(".patent-stage").innerText = data.updatedIPRData.patentStage;
                rowToBeUpdated.querySelector(".application-no").innerText = data.updatedIPRData.applicationNum
                rowToBeUpdated.querySelector(".applicant-name").innerText = data.updatedIPRData.applicantName;
                rowToBeUpdated.querySelector(".nmims-school").innerText = data.updatedIPRData.nmimsSchool;
                rowToBeUpdated.querySelector(".nmims-campus").innerText = data.updatedIPRData.nmimsCampus;
                Swal.fire({
							position: "top-center",
							icon: "success",
							title: `${data.message}`,
							showConfirmButton: false,
							timer: 1500
						});
                        $('#ipr-modal-form').modal('hide');
           }
           else{
                        const message = data.message;
                        console.log('data ===>>>', data)
                        console.log('message ==:::', message);
                        Swal.fire({
							position: "top-center",
							icon: "error",
							title: `${data.errorCode}`,
							color : "red",
							with : "20PX",
							html: `<span style="color: red;">${data.message}</span>`,
							showConfirmButton: false,
						});
           }
            
        })
        .catch((error) => {
            const message  = error 
            Swal.fire({
						position: "top-center",
						icon: "error",
						title: `${message}`,
						color : "red",
						showConfirmButton: false,
						});
        })
    };

    updateBtn.addEventListener('click' , async() => {
        formGroup = updateBtn.closest('.validate-input')
        console.log("formGroup::::::::", formGroup)
        formGroup.querySelectorAll('input[type="file"]')?.forEach(elm => {
            console.log("elm:::::::::", elm);
            elm.removeAttribute('data-validate')
        })
        const isValid = validateRequiredFormFields(updateBtn);
       if(isValid) {
            await updatedIprData('<%- BASE_URL %>research/IPR/update');
       }
       else{
        Swal.fire({
							position: "top-center",
							icon: "error",
							title: "Validation Failed",
							color : "red",
							showConfirmButton: false,
						});
       }
    })


    //  set file string into button
    function setFileNameInButtons(data) {
        console.log('data ==>>>', data);
        iprDocFiles = document.getElementById('supporting-document');
        iprDocFiles.setAttribute('data-filename', data.IPRData.supporting_documents);
    } 

    //eventlistner for download files
    document.addEventListener('click', async function (event) {
            const button = event.target.closest('button');
            if (button && button.id && button.classList.contains('download-file')) {
                console.log('button ===>>>', button)
                try {
                    const fileDataString = button.getAttribute('data-filename');
                    if (!fileDataString) {
                        throw new Error('Data filename attribute not found on button.');
                    }

                    const fileArray = fileDataString.split(',').map(fileName => fileName.trim()).filter(Boolean); 
                    if (fileArray.length === 0) {
                        throw new Error('No file names found in data filename attribute.');
                    }

                    const downloadPromises = fileArray.map(async (fileName) => {
                        console.log('fileName ===>>>', fileName)
                        const fileUrl = `<%- BASE_URL %>research/IPR/download/${fileName}`;
                        downloadFile(fileName, fileUrl)
                        try {
                            const response = await fetch(fileUrl);
                            if (!response.ok) {
                                throw new Error(`Failed to download file: ${fileName}`);
                            }
                            console.log('File downloaded successfully:', fileName);
                            return fileName;
                        } catch (error) {
                            console.error('Error downloading file:', error);
                            throw error;
                        }
                    });

                    const downloadedFiles = await Promise.all(downloadPromises);
                    console.log('All files downloaded successfully:', downloadedFiles);
                } catch (error) {
                    console.error('Error downloading files:', error);
                    alert(`There was a problem downloading files: ${error.message}`);
                }
            }
        });


    // set string file value into button
    function setFileNameAttributeToBeDownload(data) {
            console.log('data row in side function ===>>', data);
            const IPRDataFiles = document.getElementById('ipr-data-file-edit');
            IPRDataFiles.classList.remove('d-none');
            const IPRDataString = data.getAttribute('data-supporting-documents');

            // setAttribute into button
            IPRDataFiles.setAttribute('data-filename', IPRDataString);

        };
    
        // EVENT LIST THAT WILL USE USE TO OPEN DROP DOWN LIST  
        const externaltype = document.querySelector('.external-faculty');
        const enternalFacultyType = document.getElementById('is-internal');
        const externalFacultyType = document.getElementById('is-external');
        const employeeList = document.getElementById('employee-list');
        const authorDetails = document.getElementById('author-details');

        let additionalDetails = []; 

    const enternalText = document.getElementById('enternal-text');
    
    // employeesListData data came from backend
    const employeesListData = document.getElementById('employees-list-data').dataset.employees;
    const employeesDataObj = JSON.parse(employeesListData);
    let employeeListArray = [];

   
    // ajax for search bar to search employee name 
    new TomSelect("#emp-name");
    const investorDetailsArray = [];

    // function for select author name from drop down list
    function handleEmployeeDropdownChange() {
            const selectedValues = Array.from(employeeDropdown.options)
                .filter(option => option.selected)
                .map(option => option.value);
            InternalAuthorValue = selectedValues.length === 0 ? "" : selectedValues;
            investorDetailsArray.push({'internalEmpList' : InternalAuthorValue})
            console.log("Selected employee values:", InternalAuthorValue);
            
        }
    
    //function for handle add more details for storing current value of clicked
    function handleAddMoreDetailsClick() {
            const nameStringArray = [];
            const investorDetails = document.getElementById("author-name").value;
            console.log('investorDetails ====>>>>', investorDetails)
            nameStringArray.push(investorDetails);
            externalAuthorValue = ',' + nameStringArray.join(",");
            console.log('nameStringArray ====>>>', nameStringArray.join(","))
            investorDetailsArray.push({'externalEmpList' : externalAuthorValue});
            console.log("Stored external author names:", externalAuthorValue);
        }
     //event listner for handleAddMoreDetailsClick and handleEmployeeDropdownChange
    addMoreDetailsButton.addEventListener("click", handleAddMoreDetailsClick);
    employeeDropdown.addEventListener("change", handleEmployeeDropdownChange);

    // function for add drop down list or  add new faculty data
    async function insertFacultyNameString(investorDetails, IPRData) {
        console.log('applicantName in side my function ====>>>', investorDetails);
        // console.log('InternalAuthorValue ====>>>>>', InternalAuthorValue);
        // console.log('externalAuthorValue ===>>>', externalAuthorValue)
        const facultytype = investorDetails.value;
        console.log('facultytype ===>>>', facultytype);
        console.log('investorDetailsArray ===>>>>', investorDetailsArray)
        const investorDetailsString = JSON.stringify(investorDetailsArray);
        IPRData.append('investorDetails', investorDetailsString);
        }

    // fuction for updated faculty type
    async function updateFacultyNameString(updatedInvestor, updatedIPRData, storedFacultyValue) {
            console.log('storedFacultyValue in side update function ===>>>', storedFacultyValue)
            console.log('updatedapplicantName ====>>>', updatedInvestor);
            console.log('externalAuthorValue ===>>>', externalAuthorValue);
            console.log('InternalAuthorValue ====>>>>>', InternalAuthorValue);
            console.log('storedFacultyValue ====>>> ', storedFacultyValue);
            const updatedInvestorDetails = [];
            if(!externalAuthorValue && ! InternalAuthorValue){
                updatedInvestorDetails.push({'existingInvestorDetails' : storedFacultyValue})
                const updatedInvestorDetailString = JSON.stringify(updatedInvestorDetails);
                updatedIPRData.append('investorDetails', updatedInvestorDetailString)
            }
            else{
                updatedInvestorDetails.push({'externalEmpList' : externalAuthorValue})
                updatedInvestorDetails.push({'internalEmpList' : InternalAuthorValue})
                const updatedInvestorDetailString = JSON.stringify(updatedInvestorDetails);
                console.log('updatedInvestorDetailString ===>>>>', updatedInvestorDetailString);
                updatedIPRData.append('investorDetails', updatedInvestorDetailString)
            }
        }
    
    function enternalFacultyDropDownList() {
        employeeList.classList.remove('d-none');
        authorDetails.classList.add('d-none');
    }

    function externalFacultyDetails(){
        employeeList.classList.add('d-none');
        authorDetails.classList.remove('d-none');
    }

    // making d-none external faculty
    enternalFacultyType.addEventListener('click' ,enternalFacultyDropDownList)
    //making d-none internal faculty
    externalFacultyType.addEventListener('click' , externalFacultyDetails)
 

</script>
<!-- footer section -->
<%- include('./partials/pagination') %>
<%- include('./partials/footer') %>
<%- include('./partials/footer-end') %>
           