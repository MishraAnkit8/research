<%- include('./partials/head') %>
<!-- inline css -->
<!-- <-- Navbar section --> 
<%- include('./partials/header') %>
<!-- This is left sidebar  -->
<%- include('./partials/left-sidebar') %>
    <!-- This is right side section -->
<main class="main" id="main-content">
    <div class="base-section coustom-section">
        <div class="errorHtml"></div>
        <div class="breadcrumbs-container">
            <ul class="breadcrumb">
                <li class="breadcrumb-link">
                    <a href="<%- BASE_URL %>research"> Research </a>
                </li>
                <li class="breadcrumb-link">
                    <a href="<%- BASE_URL %>research/book-publication-main"> Book Publication Dashborad </a>
                </li>
                <li class="breadcrumb-link"> BOOK PUBLICATION </li>
            </ul>
        </div>
        <div>
            <div class="table-card-header text-uppercase d-flex align-items-center justify-content-between">
                <div>
                    <h5 class="pl-2">BOOK PUBLICATION LIST</h5>
                </div>
                <div>
                    <button type="button" id="book-publication-form" class="btn btn-primary add-modal" data-toggle="modal"
                        data-target="#book-publication-modal">
                        <i class="fas fa-plus plus"></i></button>
                    </button>
                </div>
            </div>
            <div class="card-body table-responsive">
                <div class="d-flex justify-content-between">
                    <div>
                        <label>Show Entries</label>
                        <select class="form-select" id="changeEntry">
                            <option value="5">5</option>
                            <option value="10">10</option>
                            <option value="25">25</option>
                            <option value="50">50</option>
                            <option value="100">100</option>
                            <option value="150">150</option>
                            <option value="200">200</option>
                            <option value="250">250</option>
                            <option value="300">300</option>
                            <option value="350">350</option>
                            <option value="400">400</option>
                            <option value="500">500</option>
                            <option value="800">800</option>
                            <option value="1000">1000</option>
                        </select>
                    </div>
                    <div>
                        <div class="table-searchbar-container">
                            <button type="button" id="searchBtn"><i class="fas fa-search"></i></button>
                            <input type="search" id="searchKeyword" placeholder="Enter keywords" class="table-searchbar">
                        </div>
                    </div>
                </div>
                <table class="table custom-table research-pagination" id="book-Publication-list">
                    <thead>
                        <th class="col-lg-1">#</th>
                        <th class="col-lg-1">Author's name</th>
                        <th class="col-lg-1">Publication year</th>
                        <th class="col-lg-1">Book title</th>
                        <th class="col-lg-1">ISBN Number</th>
                        <th class="col-lg-1">Publisher Name</th>
                        <th class="col-lg-1">Action</th>
                    </thead>
                    <% bookPublicationList.forEach(function(publication,index) { %>
                        <tr row="scope" data-publication-id="<%- publication.id %>"
                            data-volume-number="<%- publication.volume_number %>" data-edition="<%- publication.edition %>"
                            data-publication-place="<%-publication.publication_place %>"
                            data-publisher-category="<%- publication.publisher_category %>"
                            data-publication-year="<%- publication.publication_year %>"
                            data-book-url="<%- publication.book_url %>" data-doi-book-id="<%-publication.doi_id %>"
                            data-number-of-nmims-authors="<%- publication.number_of_nmims_authors %>"
                            data-nmims-authors="<%- publication.nmims_authors %>"
                            data-nmims-campus-authors="<%- publication.nmims_campus_authors %>"
                            data-nmims-school-authors="<%- publication.nmims_school_authors %>"
                            data-supporting-documents="<%- publication.supporting_documents %>">
                            <td class="row-count col-lg-1" id="rowCount"><%- index+1 %></td>
                            <td class="author-last-name col-lg-1"><%- publication.author_last_name %></td>
                            <td class="publication-year col-lg-1"><%- publication.publication_year %></td>
                            <td class="book-title col-lg-1"><%- publication.book_title %></td>
                            <td class="isbn-no col-lg-1"><%- publication.isbn %></td>
                            <td class="publisher-name col-lg-1"><%- publication.publisher_name %></td>
                            <td>
                                <label class="view" data-publication-id="<%- publication.id %>"><i
                                        class="fa-solid fa-eye view text-danger"
                                        data-publication-id="<%- publication.id %>"></i></label>
                                <label class="edit" data-publication-id="<%- publication.id %>"><i
                                        class="fa fa-edit edit text-danger"
                                        data-publication-id="<%- publication.id %>"></i></label>
                                <label class="delete" data-publication-id="<%- publication.id %>"><i
                                        class="fa-solid fa-trash delete text-danger"
                                        data-publication-id="<%- publication.id %>"></i></label>
                            </td>
        
                        </tr>
                        <% }); %>
        
                </table>
                <div class="d-flex justify-content-between">
                    <div>
                        <label> Total entries: <%- rowCount %> </label>
                        <label class="d-none" id="row-count"> <%- rowCount %> </label>
                    </div>
                    <div>
                        <button id="prevBtn" class="btn btn-primary">Previous</button>
                        <button id="nextBtn" class="btn btn-primary">Next</button>
                        <p id="pagination" class="pagination-search"></p>
                    </div>
                </div>
        
            </div>
            <!--Import Modal -->
            <div class="modal fade" id="open-program-modal" tabindex="-1" aria-labelledby="open-program-modal"
                aria-hidden="true">
            </div>
            <!-- EDIT PROGRAM AND UPDATE -->
            <div class="modal fade" id="edit-program-modal" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="editModalLabel">Update Program</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div id="errorHtml"></div>
                        <div class="modal-body">
                            <div class="mb-3">
                                <label for="exampleInputEmail1" class="form-label">Program Name</label>
                                <input type="text" class="form-control" id="program_name" name="program_name">
                                <input type="hidden" class="form-control" id="hidden_id" name="hidden_id">
                            </div>
                            <div class="mb-3">
                                <label for="exampleInputPassword1" class="form-label">Program Type</label>
                                <select class="form-control" name="program_type_lid" id="program_type_lid">
        
                                    <option value="1">Full Time</option>
        
                                    <option value="2">Part Time</option>
        
                                </select>
                            </div>
        
                            <div class="mb-3">
                                <label for="abbr" class="form-label">Program Abbr</label>
                                <input type="text" class="form-control" id="abbr" name="abbr">
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                            <button type="button" class="btn btn-primary updateProgram">Update</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</main>
<!-- modal form for Book Publication -->
<div class="modal fade " id="book-publication-modal" tabindex="-1" role="dialog" aria-labelledby="book-publication-modal"
    aria-hidden="true">
    <div class="modal-dialog modal-dialog-scrollable modal-lg modal-fullscreen p-5" role="document">
        <div class="modal-content modal-content-data validate-input">
            <div class="modal-header">
                <h5 class="modal-title" id="book-publication-title"> BOOK PUBLICATION </h5>
                <div class="close" data-dismiss="modal" aria-label="Close">
                    <span type="button" aria-hidden="true"><i class="fas fa-times "></i></span>
                </div>
            </div>
            <div class="modal-body">
                <div class="row">

                    <!-- Author's last name -->
                    <div class="form-group col-lg-4 col-md-6 col-sm-12 mb-4">
                        <div class="form-group col">
                            <label for="author-last-name" class="form-label  fw-bold">Author's Last Name</label>
                            <input type="text" name="lname" id="author-last-name"  class="form-control" data-validate="isEmpty,isAlphabeticWords,isLength:2:255"
                            data-err-msg="This field is required and min length > 1." required>
                        </div>
                    </div>
                    <!-- Title of case study -->
                    <div class="form-group col-lg-4 col-md-6 col-sm-12 mb-4">
                        <label for="book-title" class="form-label fw-bold">Title Of Book</label>
                        <input type="text" name="titleOfBook" id="book-title" class="form-control" data-validate="isEmpty,isNotNumber,isExist,isLength:2:255"
                        data-err-msg="This field is required and min length > 1." required>
                    </div>
                    <!-- Edition -->
                    <div class=" form-group col-lg-4 col-md-6 col-sm-12 mb-4">
                        <label for="edition" class="form-label fw-bold">Edition (if it isn't the first)</label>
                        <input type="text" name="edition" id="edition" class="form-control" data-validate="isEmpty,isAlphaNumeric" data-err-msg="AlphaNumeric value is required" required>
                    </div>
                    <!-- Volume number -->
                    <div class="form-group col-lg-4 col-md-6 col-sm-12 mb-4">
                        <label for="Volume" class="form-label fw-bold">Volume Number</label>
                        <input type="number" name="vol" id="volume-number" data-err-msg="Numeric value is required" class="form-control" data-validate="isEmpty,isNumber" required>
                    </div>
                    <!-- Publisher Name -->
                    <div class=" form-group col-lg-4 col-md-6 col-sm-12 mb-4">
                        <label for="publisher-name" class="form-label fw-bold">Publisher Name</label>
                        <input type="text" name="vol" id="publisher-name" class="form-control" data-validate="isEmpty,isAlphabeticWords,isLength:2:255"
                        data-err-msg="This field is required and min length > 1." required>
                    </div>
                    <!-- Publisher Category  -->
                    <div class="form-group col-lg-4 col-md-6 col-sm-12 mb-4">
                        <label for="publisher-category" id="publisher-category" class="form-label fw-bold mb-3">Publisher Category</label><br>
                        <div class="form-check-inline">
                            <label for="inter-national" class="form-check-label">
                                <input type="radio" class="form-check-input" id="inter-national" name="publisher-category" value="International"> International
                            </label>
                        </div>
                        <div class="form-check-inline">
                            <label for="national" class="form-check-label">
                                <input type="radio" class="form-check-input" id="national" name="publisher-category" value="National" checked> National
                            </label>
                        </div>
                    </div>
                    <!-- Publication Year -->
                    <div class="form-group col-lg-4 col-md-6 col-sm-12 mb-4">
                        <label for="publication-year" class="form-label fw-bold">Publication Year</label>
                        <input type="number" name="Year" id="publication-year" data-validate="isEmpty,isNumber,isValidYear" data-err-msg="Publication year is requred" class="form-control" required>
                    </div>
                    <!-- URL of the book publication -->
                    <div class=" form-group col-lg-4 col-md-6 col-sm-12 mb-4">
                        <label for="book-url" class="form-label fw-bold">URL Of Book</label>
                        <input type="text" name="URL" id="book-url" class="form-control" data-validate="isEmpty,isNotNumber,isExist" data-err-msg="Url is required." required>
                    </div>
                     <!-- ISBN Number -->
                     <div class="form-group col-lg-4 col-md-6 col-sm-12 mb-4">
                        <label for="isbn-no" class="form-label fw-bold">ISBN Number</label>
                        <input type="number" name="ISBN-Number" id="isbn-no" class="form-control" data-validate="isEmpty,isNumber" data-err-msg="Numeric value is required." required>
                    </div>
                     <!-- DOI of book -->
                     <div class="form-group col-lg-4 col-md-6 col-sm-12 mb-4">
                        <label for="doi-book-id" class="form-label fw-bold">DOI ID Of Book</label>
                        <input type="number" name="doi-book-id" id="doi-book-id" class="form-control">
                    </div>
                     <!-- Place of Publication -->
                     <div class="form-group col-lg-4 col-md-6 col-sm-12 mb-4">
                        <label for="publication-place" class="form-label fw-bold">Place Of Publication</label>
                        <input type="text" name="publication-place" id="publication-place" class="form-control" data-validate="isEmpty,isNotNumber,isExist,isLength:2:255" data-err-msg="This is required field and min length > 1." required>
                    </div>
                    <!-- No. of NMIMS Authors -->
                    <div class="form-group col-lg-4 col-md-6 col-sm-12 mb-4">
                        <label for="number-of-nmims-authors" class="form-label fw-bold ">No. Of NMIMS Authors</label>
                        <input type="number" name="nmims-authors" id="number-of-nmims-authors" data-validate="isEmpty,isNumber" data-err-msg="Numeric value is required." class="form-control" required/>
                    </div>
                    <!-- Name of NMIMS Authors -->
                    <div class="form-group col-lg-4 col-md-6 col-sm-12 mb-4">
                        <label for="nmims-authors" class="form-label fw-bold ">Name of NMIMS Authors</label>
                        <input type="text" name="web-link" id="nmims-authors" data-validate="isEmpty,isAlphabeticWords,isLength:2:255" data-err-msg="This is required and min length > 1."  class="form-control" required/>
                    </div>
                    <!-- NMIMS Campus - Author -->
                    <div class="form-group col-lg-4 col-md-6 col-sm-12 mb-4">
                        <label for="nmims-campus-authors" class="form-label fw-bold ">NMIMS Campus Author</label>
                        <input type="url" name="web-link" id="nmims-campus-authors" data-validate="isEmpty,isNotNumber,isExist,isLength:2:255"  data-err-msg="This is required and min length > 1." class="form-control" required/>
                    </div>
                    <!--NMIMS School - Author-->
                    <div class="form-group col-lg-4 col-md-6 col-sm-12 mb-4">
                        <label for="nmims-school-authors" class="form-label fw-bold ">NMIMS School Author</label>
                        <input type="url" name="web-link" id="nmims-school-authors" data-validate="isEmpty,isNotNumber,isExist,isLength:2:255" data-err-msg="This is required and min length > 1." class="form-control" required/>
                    </div>
                    <!-- Upload Supporting Documents-->
                    <div class="form-group col-lg-6 col-md-8 col-sm-12 mb-4">
                        <div class="col-lg-6 col-md-8 col-sm-12">
                            <label for="supporting-documents" class="form-label fw-bold ">
                                Upload Supporting Documents
                            </label>
                            <div class="d-flex">
                                <input type="file" name="researchSupportingDocument" id="supporting-documents"data-validate="isEmpty,isExist,isFile" data-err-msg="File is required."
                                    class="col-md-12 form-control " required multiple>
                                    <button class="download-btn download-file" id="book-publication-edit"><i class="fas fa-download text-danger"></i></button>
                            </div>
                        </div>
                    </div>
                    <div class="form-group col-lg-6 col-md-2 col-sm-12 mb-4">
                        <div id="file-view" class="h-10 w-10">
                        </div>
                    </div>
                </div>
            </div> 
           <!-- Add your modal footer buttons if needed -->
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
                <button class="btn btn-md btn-primary d-none" id="submit-btn">Submit</button>
                <button class="btn btn-md btn-primary d-none" id="update-btn">Update</button>
            </div>
        </div>
    </div>
</div>

<!-- book publication view modal -->
<div class="modal fade " id="book-publication-view-modal" tabindex="-1" role="dialog" aria-labelledby="book-publication-modal"
    aria-hidden="true">
    <div class="modal-dialog modal-dialog-scrollable modal-lg modal-fullscreen p-5" role="document">
        <div class="modal-content modal-content-data">
            <div class="modal-header">
                <h5 class="modal-title" id="book-publication-title"> BOOK PUBLICATION </h5>
                <div class="close" data-dismiss="modal" aria-label="Close">
                    <span type="button" aria-hidden="true"><i class="fas fa-times "></i></span>
                </div>
            </div>
            <div class="modal-body">
                <div class="row">
                    <!-- Author's last name -->
                    <div class="col-lg-4 col-md-6  col-sm-12 p-3">
                        <div class="box">
                            <div class="task-sub-title sub-title-text">Author's Last Name :</div>
                            <label class="view-content" id="view-last-name"></label>
                        </div>
                    </div>
                    <!-- Title of case study -->
                    <div class="col-lg-4 col-md-6  col-sm-12 p-3">
                        <div class="box">
                            <div class="task-sub-title sub-title-text">Title Of Book Publication :</div>
                            <label class="view-content" id="view-book-title"></label>
                        </div>
                    </div>
                    <!-- Publication place -->
                    <div class="col-lg-4 col-md-6  col-sm-12 p-3">
                        <div class="box">
                            <div class="task-sub-title sub-title-text"> Place Of Publication :</div>
                            <label class="view-content" id="view-publication-place"></label>
                        </div>
                    </div>
                    <!-- Edition -->
                    <div class="col-lg-4 col-md-6  col-sm-12 p-3">
                        <div class="box">
                            <div class="task-sub-title sub-title-text">Edition :</div>
                            <label class="view-content" id="view-edition"></label>
                        </div>
                    </div>
                    <!-- publisher category -->
                    <div class="col-lg-4 col-md-6  col-sm-12 p-3">
                        <div class="box">
                            <div class="task-sub-title sub-title-text">Publisher Category :</div>
                            <label class="view-content" id="view-publisher-category"></label>
                        </div>
                    </div>
                    <!-- Volume number -->
                    <div class="col-lg-4 col-md-6  col-sm-12 p-3">
                        <div class="box">
                            <div class="task-sub-title sub-title-text">Volume Number :</div>
                            <label class="view-content" id="view-volume-number"></label>
                        </div>
                    </div>
                    <!-- doi book id -->
                    <div class="col-lg-4 col-md-6  col-sm-12 p-3 doi-book-id d-none">
                        <div class="box">
                            <div class="task-sub-title sub-title-text">DOI ID Of Book :</div>
                            <label class="view-content" id="view-doi-book-id"></label>
                        </div>
                    </div>
                    <!-- Publisher Name -->
                    <div class="col-lg-4 col-md-6  col-sm-12 p-3">
                        <div class="box">
                            <div class="task-sub-title sub-title-text">Publisher Name :</div>
                            <label class="view-content" id="view-publisher-name"></label>
                        </div>
                    </div>
                
                    <!-- Publication Year -->
                    <div class="col-lg-4 col-md-6  col-sm-12 p-3">
                        <div class="box">
                            <div class="task-sub-title sub-title-text">Publication Year :</div>
                            <label class="view-content" id="view-publication-year"></label>
                        </div>
                    </div>
                    <!-- Publication Year -->
                    <div class="col-lg-4 col-md-6  col-sm-12 p-3">
                        <div class="box">
                            <div class="task-sub-title sub-title-text">ISBN Number :</div>
                            <label class="view-content" id="view-isbn-no"></label>
                        </div>
                    </div>
                    <!-- Publication Year -->
                    <div class="col-lg-4 col-md-6  col-sm-12 p-3">
                        <div class="box">
                            <div class="task-sub-title sub-title-text">URL Of Book:</div>
                            <label class="view-content" id="view-book-url"></label>
                        </div>
                    </div>
                    <!-- Number of nmims authors -->
                    <div class="col-lg-4 col-md-6  col-sm-12 p-3">
                        <div class="box">
                            <div class="task-sub-title sub-title-text"> NO. Of NMIMS Authors :</div>
                            <label class="view-content" id="view-no-of-nmims-authors"></label>
                        </div>
                    </div>
                    <!-- Publication Year -->
                    <div class="col-lg-4 col-md-6  col-sm-12 p-3">
                        <div class="box">
                            <div class="task-sub-title sub-title-text"> Name Of NMIMS Authors :</div>
                            <label class="view-content" id="view-nmims-authors"></label>
                        </div>
                    </div>
                    <!-- NMIMS CAMPUS AUTHOR -->
                    <div class="col-lg-4 col-md-6  col-sm-12 p-3">
                        <div class="box">
                            <div class="task-sub-title sub-title-text">NMIMS Campus Author:</div>
                            <label class="view-content" id="view-nmims-campus-authors"></label>
                        </div>
                    </div>
                    <!-- NMIMS SCHOOL AUTHOR -->
                    <div class="col-lg-4 col-md-6  col-sm-12 p-3">
                        <div class="box">
                            <div class="task-sub-title sub-title-text">NMIMS School Author :</div>
                            <label class="view-content" id="view-nmims-school-authors"></label>
                        </div>
                    </div>
                    <!-- Supporting Document -->
                    <div class="col-lg-4 col-md-6  col-sm-12 p-3">
                        <div class="box">
                            <div class="task-sub-title sub-title-text"><button class="btn btn-primary h-10 w-10 download-file" id="book-publication-file-view">
                                    <i class="fas fa-download text-danger"></i> Download supportingDocuments
                                </button>
                            </div>
                            <label class="view-content d-none" id="view-support-document"></label>
                        </div>
                    </div>                    
                </div>
            </div>
           <!-- Add your modal footer buttons if needed -->
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
<script>
    //   for index icrement
    const rowCount = document.getElementById('row-count');
    let rowIndex = rowCount.innerText;
    let indexValue = parseInt(rowIndex, 10);
    const bookPublicationList = document.getElementById('book-Publication-list');
    const submitBtn = document.getElementById('submit-btn');
    const updateBtn = document.getElementById('update-btn');
    const doiIdClass = document.querySelector('.doi-book-id');
    // for image preview and download file
    // const fileView = document.getElementById('file-view');
    // const downloadLink = document.getElementById('downloadLink');

    const addNewBookPublication = document.getElementById('book-publication-form');
    let bookPublicationId , bookPublicationRowToBeUpdated

    addNewBookPublication.addEventListener('click', function (event) {
            if (event.target.tagName === 'BUTTON' && event.target.classList.contains('add-modal') || event.target.classList.contains('plus')) {
                updateBtn.classList.add('d-none');
                submitBtn.classList.remove('d-none');
                // fileView.classList.add('d-none');
                // modalImage.classList.add('d-none');
                // making download button d-none
                const bookPublicationDataFiles = document.querySelector('#book-publication-edit');
                bookPublicationDataFiles.classList.add('d-none');

                const authorLastName = document.getElementById('author-last-name');
                const bookTitle = document.getElementById('book-title');
                const edition = document.getElementById('edition');
                const isbnNo = document.getElementById('isbn-no');
                const publicationPlace = document.getElementById('publication-place');
                const publisherCategoryNational = document.getElementById('national');
                const publisherCategoryInternational = document.getElementById('inter-national');
                const volumeNumber = document.getElementById('volume-number');
                const publisherName = document.getElementById('publisher-name');
                const publicationYear = document.getElementById('publication-year');
                const bookUrl = document.getElementById('book-url');
                const doiBookId = document.getElementById('doi-book-id');
                const numberOfNmimsAuthors = document.getElementById('number-of-nmims-authors');
                const nmimsAuthors = document.getElementById('nmims-authors');
                const nmimsCampusAuthors = document.getElementById('nmims-campus-authors');
                const nmimsSchoolAuthors = document.getElementById('nmims-school-authors');
                const supportingDocuments = document.querySelector('input[type="file"]');

                // 
                authorLastName.value = '';
                bookTitle.value = '';
                edition.value = '';
                isbnNo.value = '';
                publicationPlace.value = '';
                volumeNumber.value = '';
                publisherName.value = '';
                publicationYear.value = '';
                bookUrl.value = '';
                doiBookId.value = '';
                numberOfNmimsAuthors.value = '';
                nmimsAuthors.value = '';
                nmimsCampusAuthors.value = '';
                nmimsSchoolAuthors.value = '';
                supportingDocuments.value = '';
            }
        })
    
    const insertBookPublication = async (url) => {

            const bookPublicationData = new FormData();
            const authorLastName = document.getElementById('author-last-name').value;
            const bookTitle = document.getElementById('book-title').value;
            const edition = document.getElementById('edition').value;
            const isbnNo = document.getElementById('isbn-no').value;
            const publicationPlace = document.getElementById('publication-place').value;
            const publisherCategory = document.querySelector('input[name="publisher-category"]:checked').value;
            const volumeNumber = document.getElementById('volume-number').value;
            const publisherName = document.getElementById('publisher-name').value;
            const publicationYear = document.getElementById('publication-year').value;
            const bookUrl = document.getElementById('book-url').value;
            const doiBookId = document.getElementById('doi-book-id').value;
            const numberOfNmimsAuthors = document.getElementById('number-of-nmims-authors').value;
            const nmimsAuthors = document.getElementById('nmims-authors').value;
            const nmimsCampusAuthors = document.getElementById('nmims-campus-authors').value;
            const nmimsSchoolAuthors = document.getElementById('nmims-school-authors').value;
            const supportingDocuments = document.getElementById('supporting-documents');
            const bookPublicationDataFiles = supportingDocuments.files;
            console.log('bookPublicationDataFiles ===>>>>', bookPublicationDataFiles);
            for (let i = 0; i <= bookPublicationDataFiles.length - 1; i++) {
                if (bookPublicationDataFiles && bookPublicationDataFiles[i].name) {
                    console.log('files name ==>>>', bookPublicationDataFiles[i].name);
                    bookPublicationData.append('researchSupportingDocument', bookPublicationDataFiles[i]);
                }
            }


            // appending value
            bookPublicationData.append('authorLastName', authorLastName);
            bookPublicationData.append('bookTitle', bookTitle);
            bookPublicationData.append('edition', edition);
            bookPublicationData.append('isbnNo', isbnNo);
            bookPublicationData.append('publicationPlace', publicationPlace);
            bookPublicationData.append('publisherCategory', publisherCategory);
            bookPublicationData.append('volumeNumber', volumeNumber);
            bookPublicationData.append('publisherName', publisherName);
            bookPublicationData.append('publicationYear', publicationYear);
            bookPublicationData.append('bookUrl', bookUrl);
            bookPublicationData.append('doiBookId', doiBookId);
            bookPublicationData.append('numberOfNmimsAuthors', numberOfNmimsAuthors);
            bookPublicationData.append('nmimsAuthors', nmimsAuthors);
            bookPublicationData.append('nmimsCampusAuthors', nmimsCampusAuthors);
            bookPublicationData.append('nmimsSchoolAuthors', nmimsSchoolAuthors);

            fetch(url, {
                method: 'POST',
                body: bookPublicationData
            })
                .then((result) => {
                    return result.json()
                })
                .then((data) => {
                    if (data.status === 'Done') {
                        console.log('data ==>>', data)
                        const rowCountInteger = parseInt(data.rowCount, 10);
                        const IndexEntry = rowCountInteger + indexValue
                        console.log('IndexEntry ===>>>', IndexEntry);
                        const newBookPublication = document.createElement('tr');
                        newBookPublication.setAttribute('data-volume-number', data.bookPublicationData.volumeNumber);
                        newBookPublication.setAttribute('data-edition', data.bookPublicationData.edition);
                        newBookPublication.setAttribute('data-publication-place', data.bookPublicationData.edition);
                        newBookPublication.setAttribute('data-publisher-category', data.bookPublicationData.publisherCategory);
                        newBookPublication.setAttribute('data-publication-year', data.bookPublicationData.publicationYear);
                        newBookPublication.setAttribute('data-book-url', data.bookPublicationData.bookUrl);
                        newBookPublication.setAttribute('data-doi-book-id', data.bookPublicationData.doiBookId);
                        newBookPublication.setAttribute('data-number-of-nmims-authors', data.bookPublicationData.numberOfNmimsAuthors);
                        newBookPublication.setAttribute('data-nmims-authors', data.bookPublicationData.nmimsAuthors);
                        newBookPublication.setAttribute('data-nmims-campus-authors', data.bookPublicationData.nmimsCampusAuthors);
                        newBookPublication.setAttribute('data-nmims-school-authors', data.bookPublicationData.nmimsSchoolAuthors);
                        newBookPublication.setAttribute('data-supporting-documents', data.filename);
                        newBookPublication.innerHTML = `
                        <td >${IndexEntry}</td>
                            <td class="author-last-name">${data.bookPublicationData.authorLastName}</td>
                            <td class="publication-year">${data.bookPublicationData.publicationYear}</td>
                            <td class="book-title">${data.bookPublicationData.bookTitle}</td>
                            <td class="isbn-no">${data.bookPublicationData.isbnNo}</td>
                            <td class="publisher-name">${data.bookPublicationData.publisherName}</td>
                            <td>
                                <label class="view" data-publication-id="${data.bookPublicationId}"><i class="fa-solid fa-eye view text-danger"
                                    data-publication-id="${data.bookPublicationId}"></i></label>
                                <label class="edit"data-publication-id="${data.bookPublicationId}"><i class="fa fa-edit edit text-danger"
                                    data-publication-id="${data.bookPublicationId}"></i></label>
                                <label class="delete"data-publication-id="${data.bookPublicationId}"><i class="fa-solid fa-trash delete text-danger"
                                    data-publication-id="${data.bookPublicationId}"></i></label>
                            </td> `;
                        bookPublicationList.append(newBookPublication);
                        
                        Swal.fire({
							position: "top-center",
							icon: "success",
							title: `${data.message}`,
							showConfirmButton: false
							// timer: 1500
						});
                        $('#book-publication-modal').modal('hide');
                    }
                    else{
                        console.log('data ====>>>>>', data);
                        Swal.fire({
							position: "top-center",
							icon: "error",
							title: `${data.errorCode}`,
							color : "red",
							with : "20PX",
							html: `<span style="color: red;">${data.message}</span>`,
							showConfirmButton: false,
						});
                    }
                })
        }
    
    submitBtn.addEventListener('click', async function () {
            const isValid = validateRequiredFormFields(submitBtn);
            if (isValid) {
                await insertBookPublication('<%- BASE_URL %>research/book-publication-main/book-publication/insert')
                indexValue += 1
            }
            else {
                Swal.fire({
							position: "top-center",
							icon: "error",
							title: "Validation Failed",
							color : "red",
							showConfirmButton: false,
						});
            }
        })

    // book publication container list
    bookPublicationList.addEventListener('click', (event) => {
            // for updation
            if (event.target.classList.contains('edit')) {
                console.log('clickeddd');
                removeErrorMsg();
                bookPublicationRowToBeUpdated = event.target.closest('tr');
                // console.log('bookPublicationRowToBeUpdated ==>>', bookPublicationRowToBeUpdated);
                setFileNameAttributeToBeDownload(bookPublicationRowToBeUpdated)
                bookPublicationId = event.target.getAttribute('data-publication-id');
                console.log('bookPublicationId ==>>', bookPublicationId);
                $('#book-publication-modal').modal('show');
                updateBtn.classList.remove('d-none');
                submitBtn.classList.add('d-none');
                // fileView.classList.remove('d-none');
                // modalImage.classList.remove('d-none');
                const authorLastName = document.getElementById('author-last-name');
                const bookTitle = document.getElementById('book-title');
                const edition = document.getElementById('edition');
                const isbnNo = document.getElementById('isbn-no');
                const publicationPlace = document.getElementById('publication-place');
                const publisherCategoryNational = document.getElementById('national');
                const publisherCategoryInternational = document.getElementById('inter-national');
                const volumeNumber = document.getElementById('volume-number');
                const publisherName = document.getElementById('publisher-name');
                const publicationYear = document.getElementById('publication-year');
                const bookUrl = document.getElementById('book-url');
                const doiBookId = document.getElementById('doi-book-id');
                const numberOfNmimsAuthors = document.getElementById('number-of-nmims-authors');
                const nmimsAuthors = document.getElementById('nmims-authors');
                const nmimsCampusAuthors = document.getElementById('nmims-campus-authors');
                const nmimsSchoolAuthors = document.getElementById('nmims-school-authors');
                const supportingDocuments = bookPublicationRowToBeUpdated.getAttribute('data-supporting-documents');
                console.log('supportingDocuments ==>>', supportingDocuments)
                // assigning related row data value
                authorLastName.value = bookPublicationRowToBeUpdated.querySelector('.author-last-name').innerText;
                bookTitle.value = bookPublicationRowToBeUpdated.querySelector('.book-title').innerText;
                edition.value = bookPublicationRowToBeUpdated.getAttribute('data-edition');
                publisherName.value = bookPublicationRowToBeUpdated.querySelector('.publisher-name').innerText;
                isbnNo.value = bookPublicationRowToBeUpdated.querySelector('.isbn-no').innerText;
                publicationPlace.value = bookPublicationRowToBeUpdated.getAttribute('data-publication-place');
                const publisherCategory = bookPublicationRowToBeUpdated.getAttribute('data-publisher-category');
                if (publisherCategory === 'National') {
                    publisherCategoryNational.checked = true;
                }
                else {
                    publisherCategoryInternational.checked = true;
                }
                volumeNumber.value = bookPublicationRowToBeUpdated.getAttribute('data-volume-number');
                publicationYear.value = bookPublicationRowToBeUpdated.querySelector('.publication-year').innerText;
                bookUrl.value = bookPublicationRowToBeUpdated.getAttribute('data-book-url');
                doiBookId.value = bookPublicationRowToBeUpdated.getAttribute('data-doi-book-id');
                numberOfNmimsAuthors.value = bookPublicationRowToBeUpdated.getAttribute('data-number-of-nmims-authors');
                nmimsAuthors.value = bookPublicationRowToBeUpdated.getAttribute('data-nmims-authors');
                nmimsCampusAuthors.value = bookPublicationRowToBeUpdated.getAttribute('data-nmims-campus-authors');
                nmimsSchoolAuthors.value = bookPublicationRowToBeUpdated.getAttribute('data-nmims-school-authors');
                // // for file preview
                // const imageRoute = '<%- BASE_URL %>research/book-publication-main/book-publication/viewing/';
                // const fileRoute = '<%- BASE_URL %>research/book-publication-main/book-publication/download/';
                // if(imageRoute){
                //     modalImage.classList.remove('d-none');
                // }
                // else{
                //     modalImage.classList.add('d-none');
                // }
                // handleFilePreviewAndDownload(supportingDocuments, imageRoute, fileRoute);
            }
            //  for delete   
            if (event.target.classList.contains('delete')) {
            console.log('clickedddd');
            const bookPublicatRowToBeDeleted = event.target.closest('tr');
            bookPublicationId = event.target.getAttribute('data-publication-id');
            console.log('bookPublicationId ==>>', bookPublicationId);
            let confirmDelete = "Do you want to delete the Book  Publication?";
            if (confirmDelete) {
                Swal.fire({
                    title: "Are you sure?",
                    text: "You won't be able to revert this!",
                    icon: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#3085d6",
                    cancelButtonColor: "#d33",
                    confirmButtonText: "Yes, delete it!"
                }).then((result) => {
                    if (result.isConfirmed) {
                        // Execute fetch request here after confirmation
                        fetch('<%- BASE_URL %>research/book-publication-main/book-publication/delete', {
                            method: 'POST',
                            headers: {
                                'content-type': 'application/json'
                            },
                            body: JSON.stringify({ bookPublicationId })
                        })
                            .then((result) => result.json())
                            .then((data) => {
                                if (data.status === 'Done') {
                                    console.log('data ==>>', data);
                                    // Assuming bookPublicatRowToBeDeleted is correctly defined earlier in your code
                                    bookPublicatRowToBeDeleted.remove();
                                    Swal.fire({
                                        title: "Deleted!",
                                        text: `${data.message}`,
                                        icon: "success"
                                    }).then(() => {
                                        location.reload();
                                    });
                                }
                                else {
                                    Swal.fire({
                                        position: "top-center",
                                        icon: "error",
                                        title: `${data.errorCode}`,
                                        color: "red",
                                        with: "20PX",
                                        html: `<span style="color: red;">${data.message}</span>`,
                                        showConfirmButton: false,
                                    });
                                }
                            })
                            .catch((error) => {
                                console.error('Error:', error);
                                Swal.fire({
                                        position: "top-center",
                                        icon: "error",
                                        title: `${error}`,
                                        color: "red"
                                    });
                                
                            });
                    }
                });
            }
             else{
                return
             }         
        }
               
            // for view
            if (event.target.classList.contains('view')) {
                console.log('clickedddd');
                const bookPublicationRowToBeViewed = event.target.closest('tr');
                console.log('bookPublicationRowToBeViewed ===>>>', bookPublicationRowToBeViewed);
                bookPublicationId = event.target.getAttribute('data-publication-id');
                console.log('bookPublicationId ==>>', bookPublicationId);
                const viewAuthorLastName = document.getElementById('view-last-name');
                const viewBookTitle = document.getElementById('view-book-title');
                const viewEdition = document.getElementById('view-edition');
                const viewIsbnNo = document.getElementById('view-isbn-no');
                const viewPublicationPlace = document.getElementById('view-publication-place');
                const viewPublisherCategory = document.getElementById('view-publisher-category');
                const viewVolumeNumber = document.getElementById('view-volume-number');
                const viewPublisherName = document.getElementById('view-publisher-name');
                const viewPublicationYear = document.getElementById('view-publication-year');
                const viewBookUrl = document.getElementById('view-book-url');
                const viewDoiBookId = document.getElementById('view-doi-book-id');
                const viewNumberOfNmimsAuthors = document.getElementById('view-no-of-nmims-authors');
                const viewNmimsAuthors = document.getElementById('view-nmims-authors');
                const viewNmimsCampusAuthors = document.getElementById('view-nmims-campus-authors');
                const viewNmimsSchoolAuthors = document.getElementById('view-nmims-school-authors');
                const viewSupportingDocuments = document.getElementById('view-support-document');
                fetch('<%- BASE_URL %>research/book-publication-main/book-publication/view', {
                    method: 'POST',
                    headers: {
                        'content-type': 'application/json'
                    },
                    body: JSON.stringify({ bookPublicationId })
                })
                    .then((result) => {
                        return result.json()
                    })
                    .then((data) => {
                        if (data.status === 'done') {
                            console.log('data ==>>', data);
                            setFileNameInButtons(data)
                            viewAuthorLastName.innerText = data.bookPublicationView.author_last_name;
                            viewBookTitle.innerText = data.bookPublicationView.book_title;
                            viewEdition.innerText = data.bookPublicationView.edition;
                            viewIsbnNo.innerText = data.bookPublicationView.isbn;
                            viewPublicationPlace.innerText = data.bookPublicationView.publication_place;
                            viewPublisherCategory.innerText = data.bookPublicationView.publisher_category
                            viewVolumeNumber.innerText = data.bookPublicationView.volume_number;
                            viewPublisherName.innerText = data.bookPublicationView.publisher_name;
                            viewPublicationYear.innerText = data.bookPublicationView.publication_year;
                            viewBookUrl.innerText = data.bookPublicationView.book_url;
                            console.log('data.bookPublicationView.doi_id ===>>>>', data.bookPublicationView.doi_id)
                            data.bookPublicationView.doi_id ? (viewDoiBookId.innerText = data.bookPublicationView.doi_id, doiIdClass.classList.remove('d-none')) : doiIdClass.classList.add('d-none');
                            viewNumberOfNmimsAuthors.innerText = data.bookPublicationView.number_of_nmims_authors;
                            viewNmimsAuthors.innerText = data.bookPublicationView.nmims_authors;
                            viewNmimsCampusAuthors.innerText = data.bookPublicationView.nmims_campus_authors;
                            viewNmimsSchoolAuthors.innerText = data.bookPublicationView.nmims_school_authors;
                            viewSupportingDocuments.innerText = data.bookPublicationView.supporting_documents;
                        }
                    })
                $('#book-publication-view-modal').modal('show');
            }

        });

    const upadatBookPublication = async (url) => {
            const updatedBookPublicationData = new FormData();
            const updatedaAuthorLastName = document.getElementById('author-last-name').value;
            const updatedBookTitle = document.getElementById('book-title').value;
            const updatedEdition = document.getElementById('edition').value;
            const updatedIsbnNo = document.getElementById('isbn-no').value;
            const updatedPublicationPlace = document.getElementById('publication-place').value;
            const updatedPublisherCategory = document.querySelector('input[name="publisher-category"]:checked').value;
            const updatedVolumeNumber = document.getElementById('volume-number').value;
            const updatedPublisherName = document.getElementById('publisher-name').value;
            const updatedPublicationYear = document.getElementById('publication-year').value;
            const updatedBookUrl = document.getElementById('book-url').value;
            const updatedDoiBookId = document.getElementById('doi-book-id').value;
            const updatedNumberOfNmimsAuthors = document.getElementById('number-of-nmims-authors').value;
            const updatedNmimsAuthors = document.getElementById('nmims-authors').value;
            const updatedNmimsCampusAuthors = document.getElementById('nmims-campus-authors').value;
            const updatedNmimsSchoolAuthors = document.getElementById('nmims-school-authors').value;
            // let updatedDocuments = document.querySelector('input[type="file"]');
            const updatedDocuments = document.getElementById('supporting-documents');
            const bookPublicationDataFiles = updatedDocuments.files;
            console.log('bookPublicationDataFiles ===>>>>', bookPublicationDataFiles);
            if (bookPublicationDataFiles) {
                for (let i = 0; i <= bookPublicationDataFiles.length - 1; i++) {
                    if (bookPublicationDataFiles && bookPublicationDataFiles[i].name) {
                        console.log('files name ==>>>', bookPublicationDataFiles[i].name);
                        updatedBookPublicationData.append('researchSupportingDocument', bookPublicationDataFiles[i]);
                    }
                }
            }
            else {
                bookPublicationDataFiles = null;
                updatedBookPublicationData.append('researchSupportingDocument', bookPublicationDataFiles);
            }
            updatedBookPublicationData.append('bookPublicationId', bookPublicationId);
            updatedBookPublicationData.append('authorLastName', updatedaAuthorLastName);
            updatedBookPublicationData.append('bookTitle', updatedBookTitle);
            updatedBookPublicationData.append('edition', updatedEdition);
            updatedBookPublicationData.append('isbnNo', updatedIsbnNo);
            updatedBookPublicationData.append('publicationPlace', updatedPublicationPlace);
            updatedBookPublicationData.append('publisherCategory', updatedPublisherCategory);
            updatedBookPublicationData.append('volumeNumber', updatedVolumeNumber);
            updatedBookPublicationData.append('publisherName', updatedPublisherName);
            updatedBookPublicationData.append('publicationYear', updatedPublicationYear);
            updatedBookPublicationData.append('bookUrl', updatedBookUrl);
            updatedBookPublicationData.append('doiBookId', updatedDoiBookId);
            updatedBookPublicationData.append('numberOfNmimsAuthors', updatedNumberOfNmimsAuthors);
            updatedBookPublicationData.append('nmimsAuthors', updatedNmimsAuthors);
            updatedBookPublicationData.append('nmimsCampusAuthors', updatedNmimsCampusAuthors);
            updatedBookPublicationData.append('nmimsSchoolAuthors', updatedNmimsSchoolAuthors);
            fetch(url, {
                method: 'POST',
                body: updatedBookPublicationData
            })
                .then((result) => {
                    return result.json()
                })
                .then((data) => {
                    if (data.status === 'Done') {
                        console.log('data ==>>', data);
                        const message = data.message;
                        console.log('message =====>>>>>>', message);
                        bookPublicationRowToBeUpdated.setAttribute('data-volume-number', data.updatedBookPublication.volumeNumber);
                        bookPublicationRowToBeUpdated.setAttribute('data-edition', data.updatedBookPublication.edition);
                        bookPublicationRowToBeUpdated.setAttribute('data-publication-place', data.updatedBookPublication.publicationPlace);
                        bookPublicationRowToBeUpdated.setAttribute('data-publisher-category', data.updatedBookPublication.publisherCategory);
                        bookPublicationRowToBeUpdated.setAttribute('data-publication-year', data.updatedBookPublication.publicationYear);
                        bookPublicationRowToBeUpdated.setAttribute('data-book-url', data.updatedBookPublication.bookUrl);
                        bookPublicationRowToBeUpdated.setAttribute('data-doi-book-id', data.updatedBookPublication.doiBookId);
                        bookPublicationRowToBeUpdated.setAttribute('data-number-of-nmims-authors', data.updatedBookPublication.numberOfNmimsAuthors);
                        bookPublicationRowToBeUpdated.setAttribute('data-nmims-authors', data.updatedBookPublication.nmimsAuthors);
                        bookPublicationRowToBeUpdated.setAttribute('data-nmims-campus-authors', data.updatedBookPublication.nmimsCampusAuthors);
                        bookPublicationRowToBeUpdated.setAttribute('data-nmims-school-authors', data.updatedBookPublication.nmimsSchoolAuthors);
                        console.log('inside fetch api ==>>', updatedDocuments);
                        if (updatedDocuments.files) {
                            bookPublicationRowToBeUpdated.setAttribute('data-supporting-documents', data.updatedFile);
                        };
                        bookPublicationRowToBeUpdated.querySelector('.author-last-name').innerText = data.updatedBookPublication.authorLastName;
                        bookPublicationRowToBeUpdated.querySelector('.book-title').innerText = data.updatedBookPublication.bookTitle;
                        bookPublicationRowToBeUpdated.querySelector('.publisher-name').innerText = data.updatedBookPublication.publisherName;
                        bookPublicationRowToBeUpdated.querySelector('.isbn-no').innerText = data.updatedBookPublication.isbnNo;
                        bookPublicationRowToBeUpdated.querySelector('.publication-year').innerText = data.updatedBookPublication.publicationYear;
                        console.log('yes upto here clear')
                        Swal.fire({
							position: "top-center",
							icon: "success",
							title: `${message}`,
							showConfirmButton: false
							// timer: 1500
						});
                        $('#book-publication-modal').modal('hide');
                    }
                    else{
                        console.log('data ===>>>>', data);
                        Swal.fire({
							position: "top-center",
							icon: "error",
							title: `${data.errorCode}`,
							color : "red",
							with : "20PX",
							html: `<span style="color: red;">${data.message}</span>`,
							showConfirmButton: false,
						});
                    }
                })
                .catch((error) => {
                    console.log('Eroor ::', error);
                    const message = error
                    Swal.fire({
							position: "top-center",
							icon: "error",
							title: "Updation Failed",
							color : "red",
							with : "20PX",
							html: `<span style="color: red;">${message}</span>`,
							showConfirmButton: false,
						});
                })
        }

    updateBtn.addEventListener('click', async () => {
            formGroup = updateBtn.closest('.validate-input')
            console.log("formGroup::::::::", formGroup)
            formGroup.querySelectorAll('input[type="file"]')?.forEach(elm => {
                console.log("elm:::::::::", elm);
                elm.removeAttribute('data-validate')
            })
            const isValid = validateRequiredFormFields(submitBtn);
            if (isValid) {
                await upadatBookPublication('<%- BASE_URL %>research/book-publication-main/book-publication/update');
            }
            else {
                Swal.fire({
							position: "top-center",
							icon: "error",
							title: "Validation Failed",
							color : "red",
							showConfirmButton: false,
						});

            }
        });

    // set file string into button for download
    function setFileNameInButtons(data) {
            console.log('data ==>>', data);
            const bookPublicationFileView = document.getElementById('book-publication-file-view');
            bookPublicationFileView.setAttribute('data-filename', data.bookPublicationView.supporting_documents);
        }

    // addEventListener for download files 
    document.addEventListener('click', async function (event) {
        const button = event.target.closest('button');
        if (button && button.id && button.classList.contains('download-file')) {
            try {
                const fileDataString = button.getAttribute('data-filename');
                if (!fileDataString) {
                    throw new Error('Data filename attribute not found on button.');
                }

                const fileArray = fileDataString.split(',').map(fileName => fileName.trim()).filter(Boolean); // Remove empty strings
                if (fileArray.length === 0) {
                    throw new Error('No file names found in data filename attribute.');
                }

                const downloadPromises = fileArray.map(async (fileName) => {

                const fileUrl = `<%- BASE_URL %>research/book-publication-main/book-publication/download/${fileName}`;
                downloadFile(fileName, fileUrl)
                try {
                        const response = await fetch(fileUrl);
                        if (!response.ok) {
                            throw new Error(`Failed to download file: ${fileName}`);
                        }
                        console.log('File downloaded successfully:', fileName);
                        return fileName;
                    } catch (error) {
                        console.error('Error downloading file:', error);
                        throw error;
                    }
                });

                const downloadedFiles = await Promise.all(downloadPromises);
                console.log('All files downloaded successfully:', downloadedFiles);
            } catch (error) {
                console.error('Error downloading files:', error);
                alert(`There was a problem downloading files: ${error.message}`);
            }
            }
        });

    // set string file value into button
    function setFileNameAttributeToBeDownload(data){
        console.log('data row in side function ===>>', data);
        const bookPublicationDataFiles = document.getElementById('book-publication-edit');
        bookPublicationDataFiles.classList.remove('d-none');
        const bookPublicationDataString = data.getAttribute('data-supporting-documents');

        // setAttribute into button
        bookPublicationDataFiles.setAttribute('data-filename', bookPublicationDataString);
    };


</script>
<!-- for pagination -->
<%- include('./partials/pagination') %>
<!-- footer section -->
<%- include('./partials/footer') %>
<%- include('./partials/footer-end') %>
           