<%- include('./partials/head') %>
    <!-- inline css -->

    <!-- Navbar section -->
    <%- include('./partials/header') %>
        <!-- This is left sidebar  -->
        <%- include('./partials/left-sidebar') %>
            <main class="main" id="main-content">
                <div class="base-section coustom-section">
                    <!--DASHBOARD CONTENT START-->
                    <div class="errorHtml"></div>
                    <div class="breadcrumbs-container">
                        <ul class="breadcrumb">
                            <li class="breadcrumb-link">
                                <a href="<%- BASE_URL %>dashboard-page"> Dashboard </a>
                            </li>
                            <li class="breadcrumb-link">
                                <a href="<%- BASE_URL %>research"> Research </a>
                            </li>
                            <li class="breadcrumb-link">NMIMS Seed Grant Non Pharmacy</li>
                        </ul>
                    </div>
                    <div>
                        <div class="table-card-header text-uppercase d-flex align-items-center justify-content-between">
                            <div>
                                <h5 class="pl-2">NMIMS Seed Grant Non Pharmacy LIST</h5>
                            </div>
                            <div>
                                <div>
                                    <button id="Consultancy-add-new-form" type="button"
                                        class="btn btn-primary add-modal" data-toggle="modal"
                                        data-target="#consultancy-modal-form">ADD
                                        <i class="fas fa-plus plus"></i></button>
                                    </button>
                                </div>
                            </div>
                        </div>
                        <div class="card-body table-responsive">
                            <div class="d-flex justify-content-between">
                                <!-- <div>
                                        <label>Show Entries</label>
                                        <select class="form-select" id="changeEntry">
                                            <option value="5">5</option>
                                            <option value="10">10</option>
                                            <option value="25">25</option>
                                            <option value="50">50</option>
                                            <option value="100">100</option>
                                            <option value="150">150</option>
                                            <option value="200">200</option>
                                            <option value="250">250</option>
                                            <option value="300">300</option>
                                            <option value="350">350</option>
                                            <option value="400">400</option>
                                            <option value="500">500</option>
                                            <option value="800">800</option>
                                            <option value="1000">1000</option>
                                        </select>
                                    </div> -->
                                <!-- <div>
                                        <div class="table-searchbar-container">
                                            <button type="button" id="searchBtn"><i class="fas fa-search"></i></button>
                                            <input type="search" id="searchKeyword" placeholder="Enter keywords"
                                                class="table-searchbar">
                                        </div>
                                    </div> -->
                            </div>

                            <table class="table vertical-lines custom-table table-responsive"
                                id="approved-consultancy-form-data-list">
                                <thead>
                                    <th class="col-lg-1">Serial no</th>
                                    <th class="col-lg-1">Faculty Name </th>
                                    <th class="col-lg-1">Title</th>
                                    <th class="col-lg-1">Year</th>
                                    <th class="col-lg-1">Total Fees</th>
                                    <th class="col-lg-1">Action</th>
                                </thead>
                                <tbody class="data-list">

                                    <% seedGrantFormData.forEach(function(grantSeedData , index) { %>
                                        <tr id="commonTr" data-consultancy-id="<%- grantSeedData.consultancy_id %>"
                                            data-total-payment="<%- grantSeedData.totalamount %>"
                                            data-grant-total-payment="<%- grantSeedData.grandtotal %>"
                                            data-faculty-id="<%- grantSeedData.faculty_id %>"
                                            data-commencement-date="<%- grantSeedData.commencement_date %>"
                                            data-completion-date="<%- grantSeedData.completion_date %>"
                                            data-research-staff-expenses="<%- grantSeedData.research_staff_expenses %>"
                                            data-travel-expenses="<%- grantSeedData.travel %>"
                                            data-computer-charges="<%- grantSeedData.computer_charges %>"
                                            data-nmims-facility-charges="<%- grantSeedData.nmims_facility_charges %>"
                                            data-miscellaneous-including-contingency="<%- grantSeedData.miscellaneous_including_contingency %>"
                                            data-advanced-payment="<%- grantSeedData.advanced_payment %>"
                                            data-final-payment="<%- grantSeedData.final_payment %>"
                                            data-per-session-fees="<%- grantSeedData.per_session_fees %>"
                                            data-faculty-shares="<%- grantSeedData.faculty_shares %>"
                                            data-nmims-shares="<%- grantSeedData.nmims_shares %>"
                                            data-gross-fees="<%- grantSeedData.gross_fees %>"
                                            data-session-count-per-days="<%- grantSeedData.session_count_per_days %>"
                                            data-total-amount="<%- grantSeedData.totalamount %>"
                                            data-grand-total-amount="<%- grantSeedData.grandtotal %>"
                                            data-faculty-designation="<%- grantSeedData.faculty_dsg %>"
                                            data-supporting-documents="<%- grantSeedData.supporting_documents %>">
                                            <td class="col-lg-1"><%- index + 1 %></td>
                                            <td class="col-lg-1 faculty-name"><%- grantSeedData.faculty_name %></td>
                                            <td class="col-lg-1 project-title"><%- grantSeedData.title %></td>
                                            <td class="col-lg-1 year"><%- grantSeedData.year %></td>
                                            <td class="col-lg-1 total-fees"><%- (grantSeedData.per_session_fees *
                                                    grantSeedData.session_count_per_days) %></td>
                                            <td>
                                                <b title="View" class="view" style="cursor: pointer;"
                                                    data-consultancy-id="<%- grantSeedData.consultancy_id %>">
                                                    &#128065;
                                                </b>&ensp;&ensp;&ensp;
                                                <b title="Edit" class="edit" style="cursor: pointer;"
                                                    data-consultancy-id="<%- grantSeedData.consultancy_id %>">
                                                    &#9998;
                                                </b>&ensp;&ensp;&ensp;
                                                <b title="Delete" class="delete" style="cursor: pointer;"
                                                    data-consultancy-id="<%- grantSeedData.consultancy_id %>">
                                                    &#128465;
                                                </b>
                                            </td>
                                        </tr>
                                        <% }) %>
                                </tbody>
                                <tr>
                                    <div id="no-records-message"
                                        style="display: none; color: red; margin-top: 10px; padding-left: 40%;">
                                        <b class="no-record">No records found.</b>
                                    </div>
                                </tr>
                            </table>
                        </div>
                    </div>
                    <div class="d-flex justify-content-between">
                        <div>
                            <label id="total-row-count"></label>
                            <label class="d-none" id="row-count"></label>
                        </div>
                        <div>
                            <button id="prevBtn" class="btn"></button>
                            <button id="nextBtn" class="btn"></button>
                            <p id="pagination" class="pagination-search"></p>
                        </div>
                    </div>
                    <!--Import Modal -->
                    <div class="modal fade" id="open-program-modal" tabindex="-1" aria-labelledby="open-program-modal"
                        aria-hidden="true">
                    </div>
                    <!-- EDIT PROGRAM AND UPDATE -->
                    <div class="modal fade" id="edit-program-modal" tabindex="-1" aria-labelledby="editModalLabel"
                        aria-hidden="true">
                        <div class="modal-dialog">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title" id="editModalLabel">Update Program</h5>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal"
                                        aria-label="Close"></button>
                                </div>
                                <div id="errorHtml"></div>
                                <div class="modal-body">
                                    <div class="mb-3">
                                        <label for="exampleInputEmail1" class="form-label">Program Name</label>
                                        <input type="text" class="form-control" id="program_name" name="program_name">
                                        <input type="hidden" class="form-control" id="hidden_id" name="hidden_id">
                                    </div>
                                    <div class="mb-3">
                                        <label for="exampleInputPassword1" class="form-label">Program Type</label>
                                        <select class="form-control" name="program_type_lid" id="program_type_lid">

                                            <option value="1">Full Time</option>

                                            <option value="2">Part Time</option>

                                        </select>
                                    </div>

                                    <div class="mb-3">
                                        <label for="abbr" class="form-label">Program Abbr</label>
                                        <input type="text" class="form-control" id="abbr" name="abbr">
                                    </div>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary"
                                        data-bs-dismiss="modal">Close</button>
                                    <button type="button" class="btn btn-primary updateProgram">Update</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </main>
            <div class="modal fade " id="consultancy-modal-form" tabindex="-1" role="dialog"
                aria-labelledby="consultancy-modal-form" aria-hidden="true">
                <div class="modal-dialog modal-dialog-scrollable modal-lg modal-fullscreen p-5" role="document">
                    <div class="modal-content modal-content-data validate-input">
                        <div class="modal-header">
                            <div style="width:80%;" class="d-flex justify-content-center">
                                <h2 style="position: absolute;left: 20px;" id="modalHeader" class="d-none">Edit</h2>
                                <h5 class="modal-title ml-4" id="grantSeedData-study">NMIMS Seed Grant [Non Pharmacy]
                                    APPROVAL
                                    Form </h5>
                            </div>
                            <!-- <h5 class="modal-title" id="grantSeedData-study">NMIMS Seed Grant [Non Pharmacy] APPROVAL
                                Form </h5> -->
                            <div type="button" class="close" id="headerClose" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true"><i class="fas fa-times "></i></span>
                            </div>
                        </div>
                        <div class="modal-body">
                            <div class="row">
                                <!-- year -->
                                <div class="form-group col-lg-4 col-md-6 col-sm-12 mb-4">
                                    <label for="year" class=" sub-title fw-bold">Year </label>
                                    <input type="number" name="year" id="year"
                                        data-validate="isEmpty,isNumber,isValidYear" data-err-msg="Year is required."
                                        class="form-control" required />
                                </div>
                                <!-- title -->
                                <div class="form-group col-lg-4 col-md-6 col-sm-12 mb-4">
                                    <label for="campus" class=" sub-title fw-bold"> Title(Brief) </label>
                                    <input type="text" name="SchoolName" id="title"
                                        data-validate="isEmpty,isAllNumeric,isExist" data-err-msg="Provide Valid Input"
                                        class="form-control" required />
                                </div>
                                <!-- Faculty ID -->
                                <div class="form-group col-lg-4 col-md-6 col-sm-12 mb-4">
                                    <label for="faculty-id" class="form-label fw-bold ">Name of Faculty</label>
                                    <select id="faculty-id" class="select-option facultiesId"
                                        data-validate="isEmpty,isExist" data-err-msg="This  field  is required."
                                        multiple required>
                                    </select>
                                </div>
                                <!-- Designation and address of Contact Person for Client -->
                                <div class="form-group col-lg-4 col-md-6 col-sm-12 mb-4">
                                    <label for="" class=" sub-title fw-bold"> Designation and address of Contact Person
                                        for Client </label>
                                    <input type="text" name="" id="faculty-designation"
                                        data-validate="isEmpty,isAlphabeticWords" data-err-msg="Provide Valid Input"
                                        class="form-control" required />
                                </div>
                                <!--Date of Commencement-->
                                <div class="form-group col-lg-4 col-md-6 col-sm-12 mb-4">
                                    <label for="commencement-date" class=" sub-title fw-bold"> Date of Commencement
                                    </label>
                                    <input type="Date" name="policy-cadre" id="commencement-date"
                                        data-validate="isEmpty,isExist" data-err-msg="Date is required"
                                        class="form-control" required />
                                    <span style="color:red;" id="commencementError"></span>
                                </div>
                                <!-- Date of Completion -->
                                <div class="form-group col-lg-4 col-md-6 col-sm-12 mb-4">
                                    <label for="completion-date" class=" sub-title fw-bold">Date of Completion</label>
                                    <input type="date" name="completion-date" id="completion-date"
                                        data-validate="isEmpty,isExist" data-err-msg="Date is required"
                                        class="form-control" required>
                                    <span style="color:red;" id="completionError"></span>
                                </div>

                                <!-- Upload Supporting Documents-->
                                <!-- ArunDocument 1 -->
                                <div class="form-group col-lg-4 col-md-6 col-sm-12 mb-4">
                                    <label class="form-label fw-bold ">
                                        Upload Supporting Documents
                                        <div id="uploadNewSupportDocumentDiv">
                                            <label for="uploadNewSupportDocument"><small>Click to Upload New
                                                    File</small></label>
                                            <input type="checkbox" name="uploadNewSupportDocument"
                                                id="uploadNewSupportDocument">
                                        </div>
                                    </label>
                                    <div class="d-flex col-md-10">
                                        <input type="file" name="supporting-documents" id="supporting-documents"
                                            class="col-md-12 form-control" data-validate="isEmpty,isExist,isFile"
                                            data-err-msg="File is required." required multiple>
                                        <button class="download-btn download-file" id="seed-non-pharamacy-file-edit"><i
                                                class="fas fa-download text-danger"></i>Download</button>
                                    </div>
                                </div>

                                <!-- Days -->
                                <div class="form-group col-lg-4 col-md-6 col-sm-12 mb-4">
                                    <label for="days" class=" sub-title fw-bold">Days/Sessions</label>
                                    <input type="number" name="days" id="no-of-session" data-validate="isEmpty,isNumber"
                                        data-err-msg="Numeric value is required." class="form-control" required>
                                </div>

                                <!-- Sessions -->
                                <div class="form-group col-lg-4 col-md-6 col-sm-12 mb-4">
                                    <label for="sessions" class=" sub-title fw-bold">Fee per Day/Session (Rs.)</label>
                                    <input type="number" name="sessions" id="sessions-fees"
                                        data-validate="isEmpty,isNumber" data-err-msg="Numeric value is required."
                                        class="form-control" required>
                                </div>

                                <!-- Total Fess -->
                                <div class="form-group col-lg-4 col-md-6 col-sm-12 mb-4">
                                    <label for="total-fees" class=" sub-title fw-bold">Total Fees</label>
                                    <input type="number" name="total-fees" id="total-fees"
                                        data-validate="isEmpty,isNumber" data-err-msg="Numeric value is required."
                                        class="form-control" required disabled>
                                </div>



                                <!-- Faculty Share -->
                                <div class="form-group col-lg-4 col-md-6 col-sm-12 mb-4">
                                    <label for="total-fees" class=" sub-title fw-bold">Faculty Share 70%(a)</label>
                                    <input type="text" name="faculty-share" id="faculty-share"
                                        data-validate="isEmpty,isExist,isNumericSpecialChar"
                                        data-err-msg="Value is required." class="form-control" required>
                                </div>
                                <!-- NMIMS Share -->
                                <div class="form-group col-lg-4 col-md-6 col-sm-12 mb-4">
                                    <label for="NMIMSAuthors" class=" sub-title fw-bold">NMIMS Share 30%(a)</label>
                                    <input type="text" name="volumes" id="nmims-share"
                                        data-validate="isEmpty,isExist,isNumericSpecialChar"
                                        data-err-msg="Value is required." class="form-control" required>
                                </div>
                                   <!-- investigator Experience Details -->
                                <div
                                   class="table-card-header text-uppercase d-flex align-items-center justify-content-between">
                                   <div>
                                       <h5 class="pl-2">Details of Distribution of Faculty Share (if more than one faculty)</h5>
                                   </div>
                                   <div>
                                       <span>ADD</span>
                                       <button id="" type="button" class="btn btn-primary add-modal">
                                           <i class="fas fa-plus plus" id="insert-faculty-share-datails"></i></button>
                                       </button>
                                   </div>
                               </div>
                               <table class="table vertical-lines custom-table table-responsive">
                                   <thead>
                                       <th class="col-lg-1">Serial no</th>
                                       <th class="col-lg-1"> </th>
                                       <th class="col-lg-1">Fees(RS.)</th>
                                       
                                   </thead>
                                   <tbody id="add-faculty-share-datails">
                                   </tbody>
                               </table>
                                <!-- Details of Distribution of Faculty Share (if more than one faculty) -->
                                <!-- <div class="form-group col-lg-4 col-md-6 col-sm-12 mb-4">
                                    <label for="journalName" class=" sub-title fw-bold">Details of Distribution of
                                        Faculty Share (if more than one faculty)</label>
                                    <table class="table">
                                        <tbody id="dynamic-rows">
                                       Dynamic rows will be added here -->
                                <!-- </tbody>
                                    </table> -->
                                <!-- <button id="add-row-button">Add More Details</button> -->
                                <!-- </div>  -->

                                <!-- Advance Payment. -->
                                <div class="form-group col-lg-4 col-md-6 col-sm-12 mb-4">
                                    <label for="advance-payment" class=" sub-title fw-bold">Advance Payment.</label>
                                    <input type="number" name="advance-payment" id="advance-payment"
                                        class="form-control" data-validate="isEmpty,isNumber"
                                        data-err-msg="Numeric value is required." required>
                                </div>


                                <!-- Final Payment -->
                                <div class="form-group col-lg-4 col-md-6 col-sm-12 mb-4">
                                    <label for="final-payment" class=" sub-title fw-bold">Final Payment </label>
                                    <input type="number" name="final-payment" id="final-payment" class="form-control"
                                        data-validate="isEmpty,isNumber" data-err-msg="Numeric value is required"
                                        required>
                                </div>


                                <div class="form-group col-lg-4 col-md-6 col-sm-12 mb-4">
                                    <label for="total-amount" class=" sub-title fw-bold">Total Amount</label>
                                    <input class="form-control" type="number" name="total-amount" id="total-amount"
                                        disabled>
                                </div>



                                <!-- Gross Fees -->
                                <div class="form-group col-lg-4 col-md-6 col-sm-12 mb-4">
                                    <label for="gross-fees" class=" sub-title fw-bold">(a) Gross Fees</label>
                                    <input type="number" name="gross-fees" id="gross-fees"
                                        data-validate="isEmpty,isNumber" data-err-msg="Numeric value is required."
                                        class="form-control" required>
                                </div>

                                <!-- Research Staff Expenses -->
                                <div class="form-group col-lg-4 col-md-6 col-sm-12 mb-4">
                                    <label for="research-staff-expenses" class=" sub-title fw-bold">(b) Research Staff
                                        Expenses </label>
                                    <input type="number" name="research-staff-expenses" id="research-staff-expenses"
                                        data-validate="isEmpty,isNumber" data-err-msg="Numeric value is required."
                                        class="form-control" required>
                                </div>
                                <!-- travel-->
                                <div class="form-group col-lg-4 col-md-6 col-sm-12 mb-4">
                                    <label for="travel" class=" sub-title fw-bold">(C) Travel</label>
                                    <input type="number" name="travel" id="travel" data-validate="isEmpty,isNumber"
                                        data-err-msg="Numeric value is required" class="form-control" required>
                                </div>
                                <!-- (d) Computer Charges/Printing/publication/Editing/Communication/Consumables -->
                                <div class="form-group">
                                    <label for="computer-charges" class=" sub-title fw-bold"> (d) Computer
                                        Charges/Printing/publication/Editing/Communication/Consumables </label>
                                    <input type="number" name="computer-charges" id="computer-charges"
                                        data-validate="isEmpty,isNumber" data-err-msg="Provide Valid Input"
                                        class="form-control" required />
                                </div>
                                <!-- (e) Charges for NMIMS Facilities (Class-room, Conference room), if applicable: -->
                                <div class="form-group">
                                    <label for="facility-charges" class=" sub-title fw-bold">(e) Charges for NMIMS
                                        Facilities (Class-room, Conference room), if applicable:</label>
                                    <input type="number" name="facility-charges" id="facility-charges"
                                        data-validate="isEmpty,isNumber" data-err-msg="Numeric value is required."
                                        class="form-control" required />
                                </div>
                                <!-- (f) Miscellaneous including Contingency-->
                                <div class="form-group col-lg-4 col-md-6 col-sm-12 mb-4">
                                    <label for="miscellaneous-contingency" class=" sub-title fw-bold">(f) Miscellaneous
                                        including Contingency</label>
                                    <input type="number" name="miscellaneous-contingency" id="miscellaneous-contingency"
                                        class="form-control" data-validate="isEmpty,isNumber"
                                        data-err-msg="Numeric value is required." required>
                                </div>

                                <!-- Grand Total-->
                                <div class="form-group col-lg-4 col-md-6 col-sm-12 mb-4">
                                    <label for="grand-total" class=" sub-title fw-bold">Grand Total</label>
                                    <input type="number" name="grand-total" id="grand-total" class="form-control"
                                        disabled>
                                </div>




                            </div>
                        </div>

                        <!-- Add your modal footer buttons if needed -->
                        <div class="modal-footer">
                            <button type="button" class="btn btn-danger" id="insertClose"
                                data-dismiss="modal">Close</button>
                            <button type="button" class="btn btn-md btn-primary submit-btn d-none"
                                id="submit-btn">Submit</button>
                            <button class="btn btn-md btn-primary update-btn d-none" id="update-btn">Update</button>
                        </div>
                    </div>
                </div>
            </div>

            <!-- modal form for view -->
            <div class="modal fade " id="approoved-form-data" tabindex="-1" role="dialog"
                aria-labelledby="approoved-form-data" aria-hidden="true">
                <div class="modal-dialog modal-dialog-scrollable modal-lg modal-fullscreen p-5" role="document">
                    <div class="modal-content modal-content-data">
                        <div class="modal-header">
                            <h4 class="modal-title" id="sed-grant-title">NMIMS Seed Grant [Non Pharmacy] APPROVAL Form
                                View</h4>
                            <div class="close" id="headerEdit" data-dismiss="modal" aria-label="Close">
                                <span type="button" aria-hidden="true"><i class="fas fa-times "></i></span>
                            </div>
                        </div>
                        <div class="modal-body">
                            <div class="">
                                <label class="text-start fw-bold">NMIMS Seed Grant [Non Pharmacy] APPROVAL Form</label>
                            </div>
                            <div class=" d-flex justify-content-between">
                                <div class=" sub-title d-flex justify-content-start">
                                    This form is for internal use only. It should be filled out and sent to the
                                    Dean/Director for
                                    approval
                                </div>
                                <div class="col col-lg-2">
                                    <label for="" class=" sub-title justify-content-end"> Year:</label>
                                    <label class="view-content" id="view-year"></label>
                                </div>
                            </div>
                            <hr style="color: black;">
                            <table class="table table-bordered">
                                <tbody>
                                    <tr>
                                        <td class="sub-title-text sub-title text-start col-lg-6">Title (Brief)</td>
                                        <td class="view-content col-lg-6" id="view-title"></td>
                                    </tr>
                                    <tr>
                                        <td class=" sub-title text-start col-lg-6  sub-title-text">Name of Faculty</td>
                                        <td class="view-content col-lg-6" id="view-faculty-name"></td>
                                    </tr>
                                    <tr>
                                        <td class=" sub-title text-start col-lg-6 sub-title-text">Designation and
                                            address of Contact Person for Client</td>
                                        <td class="view-content col-lg-6">
                                            <label for="view-facult-designation" class="view-content col-lg-6"
                                                id="view-facult-designation"></label>
                                            <label for="view-facult-address" class="view-content col-lg-6"
                                                id="view-facult-address"></label>
                                        </td>
                                    </tr>
                                    <tr>
                                        <td class="col-lg-6 text-start">
                                            <label for="" class=" sub-title text-start sub-title-text">Date of
                                                Commencement : </label>
                                            <label class="view-content ps-4" id="view-commencement-date"></label>
                                        </td>
                                        <td class=" col-lg-6 text-start">
                                            <label for="" class="sub-title sub-title-text">Date of Completion : </label>
                                            <label class="view-content ps-4" id="view-completion-date"></label>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                            <!-- Upload Data -->
                            <div class="col-lg-4 col-md-6  col-sm-12 p-3">
                                <div class="box">
                                    <div class="sub-title-text sub-title">
                                        <button class="btn btn-primary h-10 w-10 download-file"
                                            id="nmims-seed-data-file-view">
                                            <i class="fas fa-download text-danger"></i> Download Document
                                        </button>
                                    </div>
                                    <label class="view-content" id="view-nmims-non-pharmacy-file"></label>
                                </div>
                            </div>

                            <div class=" sub-title text-start fw-bold">BUDGET</div>
                            <hr>
                            <table class="table table-bordered">
                                <thead>

                                    <th class=" sub-title col-lg-3">Days/Sessions</th>
                                    <th class=" sub-title col-lg-3">Fee per Day/Session (Rs).</th>
                                    <th class=" sub-title col-lg-3">Total Fee (Rs.)</th>
                                </thead>
                                <tbody>
                                    <tr>

                                        <td class=" sub-title col-lg-4">
                                            <label for="" class="view-content" id="view-days"></label>
                                            <label for="" class="view-content" id="view-sessions"></label>
                                        </td>
                                        <td class="view-content" id="view-per-session-fees"></td>
                                        <td class="view-content" id="view-total-amount"></td>
                                    </tr>
                                </tbody>
                            </table>
                            <table class="table table-bordered">

                                <tr>
                                    <td class=" sub-title col-lg-4 text-start">Faculty Shares (70% a)</td>
                                    <td class="view-content col-lg-4" id="view-faculty-shares"></td>

                                </tr>
                                <tr>
                                    <td class=" sub-title col-lg-4 text-start">NMIMS Share(30% a)</td>
                                    <td class="view-content col-lg-4" id="view-nmims-shares"></td>
                                </tr>
                                <tr>
                                    <th class=" sub-title col-lg-8 text-start">Details of Distribution of Faculty Share
                                        (if more than one faculty)</th>
                                    <th class=" sub-title col-lg-4">Fees(Rs.)</th>
                                </tr>
                                <!-- <tr>
                                    <td></td>
                                    <td></td>
                                </tr>
                                <tr>
                                    <td></td>
                                    <td></td>
                                </tr>
                                <tr>
                                    <td></td>
                                    <td></td>
                                </tr> -->
                                </tr>

                                <tr>
                                    <td class=" sub-title col-lg-4 text-start">(a) Gross Fees</td>
                                    <td for="" class="view-content col-lg-4" id="view-gross-fees"></td>
                                </tr>

                                <tr>
                                    <td class=" sub-title col-lg-4 text-start">(b) Research Staff Expenses</td>
                                    <td class="view-content col-lg-4" id="view-research-staff-expenses"></td>
                                </tr>
                                <tr>
                                    <td class=" sub-title col-lg-4 text-start">(c) Travel </td>
                                    <td class="view-content col-lg-4" id="view-travel-expenses"></td>
                                </tr>
                                <tr>
                                    <td class=" sub-title col-lg-8 text-start">(d) Computer
                                        Charges/Printing/publication/Editing/Communication/Consumables </td>
                                    <td class="view-content col-lg-4" id="view-computer-expenses"></td>
                                </tr>
                                <tr>
                                    <td class=" sub-title col-lg-8 text-start">(e) Charges for NMIMS Facilities
                                        (Class-room, Conference room), if applicable </td>
                                    <td class="view-content col-lg-4" id="view-nmims-facility-charges"></td>
                                </tr>
                                <tr>
                                    <td class=" sub-title col-lg-8 text-start">(f) Miscellaneous including Contingency
                                    </td>
                                    <td class="view-content col-lg-4" id="view-miscellaneous-charges"></td>
                                </tr>
                                <tr>
                                    <td class=" sub-title col-lg-8 text-start fw-bold">Total (a to f)</td>
                                    <td class="view-content col-lg-4 fw-bold" id="view-total-charges-a-to-f"></td>
                                </tr>
                                <tr>
                                    <td class=" sub-title col-lg-8 text-start">GST as per Government Rules (if
                                        consulting is routed through NMIMS)</td>
                                    <td class="view-content col-lg-4" id="view-gst-charges"></td>
                                </tr>

                                <tr>
                                    <td class=" sub-title col-lg-8 text-start fw-bold">Grand Total</td>
                                    <td class="view-content col-lg-4 fw-bold" id="view-grand-total-amount"></td>
                                </tr>
                                <tr>
                                    <td class=" sub-title col-lg-4 text-start">Payment Schedule as discussed and agreed
                                        with the client</td>
                                    <td class="view-content col-lg-8" id="view-grand-total">
                                        <table class="table">
                                            <thead>
                                                <tr>
                                                    <td class=" sub-title col-lg-8 text-start">Advance Payment</td>
                                                    <td class="col-lg-8" id="view-advanced-payment"></td>
                                                </tr>
                                            </thead>
                                            <thead>
                                                <tr>
                                                    <td class=" sub-title col-lg-8 text-start">Final Payment</td>
                                                    <td class="col-lg-8" id="view-final-payment"></td>
                                                </tr>
                                            </thead>
                                            <thead>
                                                <tr>
                                                    <td class=" sub-title col-lg-8 text-start">Total Payment</td>
                                                    <td class="col-lg-8" id="view-total-payment"></td>
                                                </tr>
                                            </thead>
                                        </table>
                                    </td>
                                </tr>

                            </table>
                            <div class="row">
                                <div class="col-lg-8">
                                    <div class="box">
                                        <div class=" sub-title">Faculty Coordinator :</div>
                                        <label class="view-content" id="view-coordinator-faculty">Ankit</label>
                                    </div>
                                </div>

                                <div class="col-lg-4">
                                    <div class="box">
                                        <div class=" sub-title">Vice Chancellor :</div>
                                        <label class="view-content" id="view-vice-chancellor">Ankit Kumar Mishra</label>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-8">
                                    <div class="d-flex">
                                        <div class=" sub-title">Date : </div>
                                        <label class="view-content pl-4" id="view-coordinator-faculty-date"></label>
                                    </div>
                                </div>

                                <div class="col-lg-4">
                                    <div class="d-flex">
                                        <div class=" sub-title">Date :</div>
                                        <label class="view-content pl-4" id="view-vice-chancellor-date"></label>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-danger" id="editClose"
                                data-dismiss="modal">Close</button>
                        </div>
                    </div>
                </div>
            </div>
            <div id="faculty-list-data" data-faculty='<%- JSON.stringify(facultyData) %>' style="display: none;">
            </div>




            <script src="https://cdnjs.cloudflare.com/ajax/libs/tom-select/2.3.1/js/tom-select.complete.min.js"
                integrity="sha512-zdXqksVc9s0d2eoJGdQ2cEhS4mb62qJueasTG4HjCT9J8f9x5gXCQGSdeilD+C7RqvUi1b4DdD5XaGjJZSlP9Q=="
                crossorigin="anonymous" referrerpolicy="no-referrer"></script>
            <script>
                let rowCount = document.getElementById('row-count');
                const totalRowCount = document.getElementById('total-row-count');
                let rowIndex = rowCount.innerText;
                let indexValue = parseInt(rowIndex, 10);
                // document.getElementById('add-row-button').addEventListener('click', function () {
                //     addRow();
                // });

                // function addRow() {
                //     const dynamicRows = document.getElementById('dynamic-rows');

                //     const newRow = document.createElement('tr');
                //     newRow.innerHTML = `
                //     <td><input type="text" class="input-field" ></td>
                //     <td><input type="number" class="input-field"></td>
                // `;
                //     dynamicRows.appendChild(newRow);
                // }

                const approvedFormList = document.getElementById('approved-consultancy-form-data-list');
                const submitBtn = document.getElementById('submit-btn');
                const updateBtn = document.getElementById('update-btn');
                let facultyId, approvalFormRecordToBeUpdated, grantedSeedId;

                const addnonFormacyFormData = document.getElementById('Consultancy-add-new-form');
                document.querySelector('#insert-faculty-share-datails').addEventListener('click', function () {
                    let newRow = `
                            <tr>
                                <td>1</td>
                                <td><input type="text"  class="faculty-share-details"></td>
                                <td><input type="text" class="faculty-share-details"></td>
                                <td><button class="delete-row"><i class="fas fa-trash-alt text-danger"></i></button></td>
                            </tr> 
                                    `;

                    document.querySelector('#add-faculty-share-datails').insertAdjacentHTML('afterend', newRow);
                    let deleteButton = document.querySelector('#add-faculty-share-datails').nextElementSibling.querySelector('.delete-row');
                    deleteButton.addEventListener('click', handleDeleteButtonClick);
                });

                addnonFormacyFormData.addEventListener('click', (event) => {



                    if (event.target.tagName === 'BUTTON' && event.target.classList.contains('add-modal') || event.target.classList.contains('plus')) {
                        submitBtn.classList.remove('d-none');
                        updateBtn.classList.add('d-none');
                        removeErrorMsg()

                        // ArunDocument 3
                        document.querySelector('#supporting-documents').classList.remove('d-none');
                        document.querySelector('#uploadNewSupportDocumentDiv').classList.add('d-none');
                        document.querySelector('#uploadNewSupportDocument').checked = false;
                        document.querySelector('#seed-non-pharamacy-file-edit').classList.add('d-none');

                        $('#consultancy-modal-form').modal({
                            backdrop: 'static'
                        });

                        const facultyDropDownList = document.getElementById("faculty-id");
                        // Parse the JSON data
                        const facultyListData = JSON.parse(document.getElementById('faculty-list-data').dataset.faculty);
                        let facultyOptions = facultyListData.map(faculty => ({
                            value: faculty.id,
                            text: `${faculty.faculty_name} ${faculty.designation}`
                        }));;

                        // let selectList;

                        // selectList = facultyListData.filter(faculty => facultyId == faculty.id).map(fd => fd.id)

                        //  Initialize TomSelect dropdown with options containing id and faculty_name
                        new TomSelect("#faculty-id", {
                            options: facultyOptions,
                            placeholder: 'Select Faculty',
                            hidePlaceholder: true,
                            create: true,
                            plugins: ['remove_button'],
                            onItemAdd: function () {
                                this.setTextboxValue('');
                                this.refreshOptions();
                            },
                            render: {
                                option: function (data, escape) {
                                    return '<div class=""><span>' + escape(data.value) + ' - </span><span class="ms-auto text-muted">' + escape(data.text) + '</span></div>';
                                },
                                item: function (data, escape) {
                                    return '<div>' + escape(data.text) + '</div>';
                                }
                            }
                        });

                        facultyIdContainerArray = [];
                        facultyId = null;
                        document.getElementById('year').value = '';
                        document.getElementById('title').value = '';
                        document.getElementById('faculty-id').value = '';
                        document.getElementById('commencement-date').value = '';
                        document.getElementById('completion-date').value = '';
                        document.getElementById('no-of-session').value = '';
                        document.getElementById('sessions-fees').value = '';
                        document.getElementById('total-fees').value = '';
                        document.getElementById('faculty-share').value = '';
                        document.getElementById('nmims-share').value = '';
                        document.getElementById('research-staff-expenses').value = '';
                        document.getElementById('travel').value = '';
                        document.getElementById('computer-charges').value = '';
                        document.getElementById('facility-charges').value = '';
                        document.getElementById('miscellaneous-contingency').value = '';
                        document.getElementById('advance-payment').value = '';
                        document.getElementById('final-payment').value = '';
                        document.getElementById('gross-fees').value = '';
                        document.getElementById('total-amount').value = '';
                        document.getElementById('grand-total').value = '';
                        document.getElementById('faculty-designation').value = '';
                    }
                });

                const insertConsultancyFormApprovalData = async (url) => {
                    const seedGrantFormData = new FormData();
                    const year = document.getElementById('year').value;
                    const title = document.getElementById('title').value;
                    // seedGrantFormData.faculty =  document.getElementById('faculty-id').value;
                    const commencementDate = document.getElementById('commencement-date').value;
                    const completionDate = document.getElementById('completion-date').value;
                    const sessionNumbers = document.getElementById('no-of-session').value;
                    const sessionsFees = document.getElementById('sessions-fees').value;
                    const totalFees = document.getElementById('total-fees').value;
                    const facultyShare = document.getElementById('faculty-share').value;
                    const nmimsShare = document.getElementById('nmims-share').value;
                    const researchStaffExpenses = document.getElementById('research-staff-expenses').value;
                    const travlExpanses = document.getElementById('travel').value;
                    const computerCharges = document.getElementById('computer-charges').value;
                    const faculityCharges = document.getElementById('facility-charges').value;
                    const miscellaneousContingencyCharges = document.getElementById('miscellaneous-contingency').value;
                    const advancedPayment = document.getElementById('advance-payment').value;
                    const finalPayment = document.getElementById('final-payment').value;
                    const grossFees = document.getElementById('gross-fees').value;
                    const facultyId = document.getElementById('faculty-id').value;
                    const totalAmount = document.getElementById('total-amount').value;
                    const grandTotal = document.getElementById('grand-total').value;
                    const facultyDsg = document.getElementById('faculty-designation').value;

                    seedGrantFormData.append('year', year)
                    seedGrantFormData.append('title', title)
                    seedGrantFormData.append('facultyDsg', facultyDsg)
                    seedGrantFormData.append('commencementDate', commencementDate)
                    seedGrantFormData.append('completionDate', completionDate)
                    seedGrantFormData.append('sessionNumbers', sessionNumbers)
                    seedGrantFormData.append('sessionsFees', sessionsFees)
                    seedGrantFormData.append('totalFees', totalFees)
                    seedGrantFormData.append('facultyShare', facultyShare)
                    seedGrantFormData.append('nmimsShare', nmimsShare)
                    seedGrantFormData.append('researchStaffExpenses', researchStaffExpenses)
                    seedGrantFormData.append('travlExpanses', travlExpanses)
                    seedGrantFormData.append('computerCharges', computerCharges)
                    seedGrantFormData.append('faculityCharges', faculityCharges)
                    seedGrantFormData.append('miscellaneousContingencyCharges', miscellaneousContingencyCharges)
                    seedGrantFormData.append('advancedPayment', advancedPayment)
                    seedGrantFormData.append('finalPayment', finalPayment)
                    seedGrantFormData.append('grossFees', grossFees)
                    seedGrantFormData.append('facultyId', facultyId)
                    seedGrantFormData.append('totalAmount', totalAmount)
                    seedGrantFormData.append('grandTotal', grandTotal)
                    //  seedGrantFormData.append('facultyDesignation', facultyDesignation)





                    const pharmacyDoc = document.getElementById('supporting-documents');
                    const pharmacyFiles = pharmacyDoc.files;
                    console.log('caseStudyFiles ===>>>', pharmacyFiles)
                    for (let i = 0; i < pharmacyFiles.length; i++) {
                        console.log('file name  ==>>', pharmacyFiles[i].name);
                        seedGrantFormData.append('pharmacyFiles', pharmacyFiles[i]);
                    }



                    // const payload = {
                    //     seedGrantFormData: seedGrantFormData
                    // }
                    // console.log('payload ===>>>>', payload)
                    fetch(url, {
                        method: 'POST',
                        body: seedGrantFormData
                    })
                        .then((Response) => {
                            return Response.ok ? Response.json() : 'NetWork Is Not Ok'
                        })
                        .then((data) => {
                            if (data.status === "Done") {
                                //             console.log('data ====>>>>>', data);
                                //             patentId = data.patentId;
                                //             const rowCountInteger = parseInt(data.rowCount, 10);
                                //             const IndexEntry = rowCountInteger + indexValue;
                                //             indexValue = IndexEntry;
                                //             const newApprovalFormRow = document.createElement('tr');
                                //             newApprovalFormRow.setAttribute('data-consultancy-id', data.grantedSeedId);
                                //             newApprovalFormRow.setAttribute('data-faculty-id', data.nonFormacyFormData.facultyId);
                                //             newApprovalFormRow.setAttribute('data-commencement-date', data.nonFormacyFormData.commencementDate);
                                //             newApprovalFormRow.setAttribute('data-completion-date', data.nonFormacyFormData.completionDate);
                                //             newApprovalFormRow.setAttribute('data-research-staff-expenses', data.nonFormacyFormData.researchStaffExpenses);
                                //             newApprovalFormRow.setAttribute('data-travel-expenses', data.nonFormacyFormData.travlExpanses);
                                //             newApprovalFormRow.setAttribute('data-computer-charges', data.nonFormacyFormData.computerCharges);
                                //             newApprovalFormRow.setAttribute('data-nmims-facility-charges', data.nonFormacyFormData.faculityCharges);
                                //             newApprovalFormRow.setAttribute('data-miscellaneous-including-contingency', data.nonFormacyFormData.miscellaneousContingencyCharges);
                                //             newApprovalFormRow.setAttribute('data-advanced-payment', data.nonFormacyFormData.advancedPayment);
                                //             newApprovalFormRow.setAttribute('data-final-payment', data.nonFormacyFormData.finalPayment);
                                //             newApprovalFormRow.setAttribute('data-per-session-fees', data.nonFormacyFormData.sessionsFees);
                                //             newApprovalFormRow.setAttribute('data-total-fees', data.nonFormacyFormData.totalFees);
                                //             newApprovalFormRow.setAttribute('data-faculty-shares', data.nonFormacyFormData.facultyShare);
                                //             newApprovalFormRow.setAttribute('data-nmims-shares', data.nonFormacyFormData.nmimsShare);
                                //             newApprovalFormRow.setAttribute('data-gross-fees', data.nonFormacyFormData.grossFees);

                                //             newApprovalFormRow.innerHTML = `
                                //         <td class="col-lg-1">${IndexEntry}</td>
                                //         <td class="col-lg-1 faculty-name">${data.nonFormacyFormData.facultyId} </td>
                                //         <td class="col-lg-1 project-title">${data.nonFormacyFormData.title}</td>
                                //         <td class="col-lg-1 year">${data.nonFormacyFormData.year}</td>
                                //         <td class="col-lg-1 total-fees">${data.nonFormacyFormData.totalFees}</td>

                                //         <td title="View" class="border-right-0 view"  style="cursor: pointer;" data-consultancy-id="${data.grantedSeedId}">
                                //             &#128065;
                                //         </td>
                                //         <td title="Edit" class="border-right-0 edit" style="cursor: pointer;" data-consultancy-id="${data.grantedSeedId}">
                                //             &#9998;
                                //         </td>
                                //         <td title="Delete" class="border-right-0 delete" style="cursor: pointer;" data-consultancy-id="${data.grantedSeedId}">
                                //             &#128465;
                                //         </td>

                                // `;
                                //             approvedFormList.appendChild(newApprovalFormRow);
                                $('#consultancy-modal-form').modal('hide');
                                Swal.fire({
                                    position: "top-center",
                                    icon: "success",
                                    title: `${data.message}`,
                                    showConfirmButton: true,
                                    confirmButtonText: "OK",
                                    confirmButtonColor: "#DD6B55"
                                    // timer: 1500
                                }).then(() => {
                                    document.location.reload()
                                });
                                // rowCount.classList.remove('d-none');
                                // totalRowCount.classList.add('d-none');
                                // rowCount.innerText = `Total entries : ${IndexEntry}`
                            }
                            else {
                                console.log('data ====>>>>>', data);
                                Swal.fire({
                                    position: "top-center",
                                    icon: "error",
                                    title: `${data.errorCode}`,
                                    color: "red",
                                    with: "20PX",
                                    html: `<span style="color: red;">${data.message}</span>`,
                                    showConfirmButton: true,
                                    confirmButtonText: "OK",
                                    confirmButtonColor: "#DD6B55"
                                });
                            }
                        })
                        .catch((error) => {
                            console.log('error ===>>>', error)
                            Swal.fire({
                                position: "top-center",
                                icon: "error",
                                title: "Data Insertion Failed",
                                color: "red",
                                with: "20PX",
                                html: `<span style="color: red;">${error}</span>`,
                                showConfirmButton: true,
                                confirmButtonText: "OK",
                                confirmButtonColor: "#DD6B55"
                            });
                        })
                }

                submitBtn.addEventListener('click', async () => {


                    const isValid = validateRequiredFormFields(submitBtn);
                    let commencementDate = document.getElementById('commencement-date').value;
                    let completionDate = document.getElementById('completion-date').value;

                    console.log('user dates ', commencementDate, completionDate)

                    let date1 = new Date(commencementDate);
                    let date2 = new Date(completionDate);

                    let dateValidate = date1 < date2 ? true : false;

                    // let dateValidate = false

                    if (isValid && dateValidate) {
                        await insertConsultancyFormApprovalData('<%- BASE_URL %>research/nmims-seed-grant-non-pharmacy/insert');
                    }
                    else {
                        Swal.fire({
                            position: "top-center",
                            icon: "error",
                            title: "Validation Failed",
                            color: "red",
                            showConfirmButton: true,
                            confirmButtonText: "OK",
                            confirmButtonColor: "#DD6B55",

                        }).then(() => {
                            if (dateValidate) {
                                console.log('date true')
                                document.getElementById('completionError').innerText = ''
                            } else {
                                console.log('date false')
                                document.getElementById('completionError').innerText = 'Completion date should be greater than commencement date '

                            }
                        });

                        //         $('body').keypress(function(e){ 
                        // alert(e.which); 
                        // if(e.which == 27){
                        // swal.close();
                        // } 
                        // });


                    }
                });

                approvedFormList.addEventListener('click', (event) => {
                    if (event.target.classList.contains('view')) {
                        console.log('clickedddd in view ');
                        $('#approoved-form-data').modal({
                            backdrop: 'static'
                        });
                        $('#approoved-form-data').modal('show');
                        const consultancyFormRow = event.target.closest('tr');
                        console.log('consultancyFormRow ====>>>>>', consultancyFormRow);
                        const grantedSeedId = consultancyFormRow.getAttribute('data-consultancy-id');
                        console.log('grantedSeedId ===>>>>', grantedSeedId);

                        fetch('<%- BASE_URL %>research/nmims-seed-grant-non-pharmacy/view', {
                            method: 'POST',
                            headers: {
                                'content-type': 'application/json'
                            },
                            body: JSON.stringify({ grantedSeedId }
                            )
                        })
                            .then((Response) => {
                                return Response.ok ? Response.json() : "Network response was not okk"
                            })
                            .then((data) => {
                                if (data.status === "Done") {
                                    console.log('data ===>>>>>', data)
                                    setFileNameInButtons(data)
                                    document.getElementById('view-year').innerText = data.nonFormacyData.year;
                                    document.getElementById('view-title').innerText = data.nonFormacyData.title;
                                    document.getElementById('view-faculty-name').innerText = data.nonFormacyData.faculty_name;
                                    document.getElementById('view-facult-designation').innerText = data.nonFormacyData.faculty_dsg;
                                    document.getElementById('view-facult-address').innerText = data.nonFormacyData.address;
                                    document.getElementById('view-commencement-date').innerText = data.commencementDateFormate;
                                    document.getElementById('view-completion-date').innerText = data.completionDateFormate;
                                    document.getElementById('view-days').innerText = data.nonFormacyData.session_count_per_days;
                                    // document.getElementById('view-sessions').innerText = data.nonFormacyData.per_session_fees;
                                    document.getElementById('view-per-session-fees').innerText = data.nonFormacyData.per_session_fees;
                                    document.getElementById('view-total-amount').innerText = data.totalFees;
                                    document.getElementById('view-gross-fees').innerText = data.nonFormacyData.gross_fees
                                    document.getElementById('view-faculty-shares').innerText = data.facultyShareAmount;
                                    document.getElementById('view-nmims-shares').innerText = data.nmimsShareAmount;
                                    document.getElementById('view-research-staff-expenses').innerText = data.nonFormacyData.research_staff_expenses;
                                    document.getElementById('view-travel-expenses').innerText = data.nonFormacyData.travel;
                                    document.getElementById('view-computer-expenses').innerText = data.nonFormacyData.computer_charges;
                                    document.getElementById('view-nmims-facility-charges').innerText = data.nonFormacyData.nmims_facility_charges;
                                    document.getElementById('view-miscellaneous-charges').innerText = data.nonFormacyData.miscellaneous_including_contingency;
                                    document.getElementById('view-total-charges-a-to-f').innerText = data.aToFTotalAmount;
                                    document.getElementById('view-gross-fees').innerText = data.nonFormacyData.gross_fees;
                                    document.getElementById('view-gst-charges').innerText = data.gstCharges;
                                    document.getElementById('view-advanced-payment').innerText = data.nonFormacyData.advanced_payment;
                                    document.getElementById('view-final-payment').innerText = data.nonFormacyData.final_payment;
                                    document.getElementById('view-total-payment').innerText = data.nonFormacyData.totalamount;
                                    document.getElementById('view-grand-total-amount').innerText = data.nonFormacyData.grandtotal;
                                    // document.getElementById('view-coordinator-faculty').innerText = data
                                    // document.getElementById('view-vice-chancellor').innerText = data
                                    document.getElementById('view-vice-chancellor-date').innerText = data.completionDateFormate;
                                    document.getElementById('view-coordinator-faculty-date').innerText = data.commencementDateFormate;

                                }
                            })

                    }





                    //for delete the record
                    if (event.target.classList.contains('delete')) {
                        formDataToBeDeleted = event.target.closest('tr');
                        console.log('formDataToBeDeleted ====>>>>>', formDataToBeDeleted);

                        grantedSeedId = formDataToBeDeleted.getAttribute('data-consultancy-id');
                        console.log('grantedSeedId ===>>>>>', grantedSeedId);

                        let confirmDelete = "Do you want to delete the consultancy form  record?";
                        if (confirmDelete) {
                            Swal.fire({
                                title: "Are you sure?",
                                text: "You won't be able to revert this!",
                                icon: "warning",
                                showCancelButton: true,
                                confirmButtonColor: "#3085d6",
                                cancelButtonColor: "#d33",
                                confirmButtonText: "Yes, delete it!"
                            }).then((result) => {
                                if (result.isConfirmed) {
                                    // Execute fetch request here after confirmation
                                    fetch('<%- BASE_URL %>research/nmims-seed-grant-non-pharmacy/delete', {
                                        method: 'POST',
                                        headers: {
                                            'content-type': 'application/json'
                                        },
                                        body: JSON.stringify({ grantedSeedId })
                                    })
                                        .then((result) => result.json())
                                        .then((data) => {
                                            if (data.status === 'Done') {
                                                console.log('data ==>>', data);
                                                formDataToBeDeleted.remove();
                                                Swal.fire({
                                                    title: "Deleted!",
                                                    text: "Record has been deleted.",
                                                    icon: "success",
                                                    showConfirmButton: true,
                                                    confirmButtonText: "OK",
                                                    confirmButtonColor: "#DD6B55"
                                                }).then(() => {
                                                    location.reload();
                                                });
                                            }
                                        })
                                        .catch((error) => {
                                            console.error('Error:', error);
                                            const message = error;
                                            Swal.fire({
                                                position: "top-center",
                                                icon: "error",
                                                title: `${message}`,
                                                color: "red",
                                                showConfirmButton: true,
                                                confirmButtonText: "OK",
                                                confirmButtonColor: "#DD6B55"
                                            });
                                        });
                                }
                            });
                        }
                        else {
                            return
                        }
                    }
                    // for update the data 
                    if (event.target.classList.contains('edit')) {

                        let editHead = document.getElementById('grantSeedData-study');
                        editHead.innerText = 'NMIMS Seed Grant [Non Pharmacy] APPROVAL Form Edit'
                        document.querySelector('#supporting-documents').classList.add('d-none');



                        console.log('yes edit clickeddd ===');
                        submitBtn.classList.add('d-none');
                        removeErrorMsg()

                        $('#consultancy-modal-form').modal({
                            backdrop: 'static'
                        });
                        updateBtn.classList.remove('d-none');
                        approvalFormRecordToBeUpdated = event.target.closest('tr');
                        console.log('approvalFormRecordToBeUpdated', approvalFormRecordToBeUpdated);
                        setFileNameAttributeToBeDownload(approvalFormRecordToBeUpdated)


                        console.log('approvalFormRecordToBeUpdated ===>>>>', JSON.stringify(approvalFormRecordToBeUpdated));

                        grantedSeedId = approvalFormRecordToBeUpdated.getAttribute('data-consultancy-id');
                        console.log('grantedSeedId ====>>>>', grantedSeedId);
                        facultyId = approvalFormRecordToBeUpdated.getAttribute('data-faculty-id');
                        console.log('facultyId ====>>>>>', facultyId);


                        const facultyDropDownList = document.getElementById("faculty-id");
                        // Parse the JSON data
                        const facultyListData = JSON.parse(document.getElementById('faculty-list-data').dataset.faculty);
                        let facultyOptions = facultyListData.map(faculty => ({
                            value: faculty.id,
                            text: `${faculty.faculty_name} ${faculty.designation}`
                        }));;

                        let selectList;

                        selectList = facultyListData.filter(faculty => facultyId == faculty.id).map(fd => fd.id)

                        //  Initialize TomSelect dropdown with options containing id and faculty_name
                        new TomSelect("#faculty-id", {
                            options: facultyOptions,
                            items: selectList,
                            // placeholder : 'Select Faculty',
                            hidePlaceholder: true,
                            create: true,
                            plugins: ['remove_button'],
                            onItemAdd: function () {
                                this.setTextboxValue('');
                                this.refreshOptions();
                            },
                            render: {
                                option: function (data, escape) {
                                    return '<div class=""><span>' + escape(data.value) + ' - </span><span class="ms-auto text-muted">' + escape(data.text) + '</span></div>';
                                },
                                item: function (data, escape) {
                                    return '<div>' + escape(data.text) + '</div>';
                                }
                            }
                        });


                        // let facultydata = document.getElementById('faculty-list-data');
                        // const facultyDropDownList = document.getElementById("faculty-id");
                        // // Parse the JSON data
                        // const facultyListData = JSON.parse(document.getElementById('faculty-list-data').dataset.faculty);
                        // let facultyOptions = facultyListData.map(faculty => ({
                        //     value: faculty.id,
                        //     text: `${faculty.faculty_name} ${faculty.designation}`
                        // }));;

                        // let selectList;

                        // selectList = facultyListData.filter(faculty => facultyId == faculty.id).map(fd => fd.id)

                        // //  Initialize TomSelect dropdown with options containing id and faculty_name
                        // new TomSelect("#faculty-id", {
                        //     options: facultyOptions,
                        //     items: selectList,
                        //     hidePlaceholder: true,
                        //     create: true,
                        //     plugins: ['remove_button'],
                        //     onItemAdd: function () {
                        //         this.setTextboxValue('');
                        //         this.refreshOptions();
                        //     },
                        //     render: {
                        //         option: function (data, escape) {
                        //             return '<div class=""><span>' + escape(data.value) + ' - </span><span class="ms-auto text-muted">' + escape(data.text) + '</span></div>';
                        //         },
                        //         item: function (data, escape) {
                        //             return '<div>' + escape(data.text) + '</div>';
                        //         }
                        //     }
                        // });




                        let fId = document.querySelector('.faculty-name');

                        // for (let i = 0; i < fId.options.length; i++) {
                        //     fId.options[i].value = facultyName;
                        //     if (fId.options[i].value === facultyName) {
                        //         fId.selectedIndex = i;
                        //         break;
                        //     }
                        // }


                        document.getElementById('faculty-designation').value = approvalFormRecordToBeUpdated.getAttribute('data-faculty-designation');
                        document.getElementById('year').value = approvalFormRecordToBeUpdated.querySelector('.year').innerText;
                        document.getElementById('title').value = approvalFormRecordToBeUpdated.querySelector('.project-title').innerText;
                        const commencementDate = approvalFormRecordToBeUpdated.getAttribute('data-commencement-date');
                        document.getElementById('commencement-date').value = formatDateToYYYYMMDD(commencementDate);
                        const completionDate = approvalFormRecordToBeUpdated.getAttribute('data-completion-date');
                        document.getElementById('completion-date').value = formatDateToYYYYMMDD(completionDate);
                        document.getElementById('no-of-session').value = approvalFormRecordToBeUpdated.getAttribute('data-session-count-per-days');
                        document.getElementById('sessions-fees').value = approvalFormRecordToBeUpdated.getAttribute('data-per-session-fees');
                        document.getElementById('total-fees').value = approvalFormRecordToBeUpdated.querySelector('.total-fees').innerText;
                        document.getElementById('faculty-share').value = approvalFormRecordToBeUpdated.getAttribute('data-faculty-shares');
                        document.getElementById('nmims-share').value = approvalFormRecordToBeUpdated.getAttribute('data-nmims-shares');
                        document.getElementById('research-staff-expenses').value = approvalFormRecordToBeUpdated.getAttribute('data-research-staff-expenses');
                        document.getElementById('travel').value = approvalFormRecordToBeUpdated.getAttribute('data-travel-expenses');
                        document.getElementById('computer-charges').value = approvalFormRecordToBeUpdated.getAttribute('data-computer-charges');
                        document.getElementById('facility-charges').value = approvalFormRecordToBeUpdated.getAttribute('data-nmims-facility-charges');
                        document.getElementById('miscellaneous-contingency').value = approvalFormRecordToBeUpdated.getAttribute('data-miscellaneous-including-contingency');
                        document.getElementById('advance-payment').value = approvalFormRecordToBeUpdated.getAttribute('data-advanced-payment');
                        document.getElementById('final-payment').value = approvalFormRecordToBeUpdated.getAttribute('data-final-payment');
                        document.getElementById('gross-fees').value = approvalFormRecordToBeUpdated.getAttribute('data-gross-fees');

                        console.log('values of total amount ', approvalFormRecordToBeUpdated.getAttribute('data-total-amount'))
                        document.getElementById('total-amount').value = approvalFormRecordToBeUpdated.getAttribute('data-total-payment');
                        document.getElementById('grand-total').value = approvalFormRecordToBeUpdated.getAttribute('data-grant-total-payment');


                        // formatDateToYYYYMMDD(subMissionDate);
                        $('#consultancy-modal-form').modal('show');
                    }
                })

                // const facultyDropDownList = document.getElementById("faculty-id");
                // // Parse the JSON data
                // const facultyListData = JSON.parse(document.getElementById('faculty-list-data').dataset.facultyList);

                // // Construct an array of objects with id and faculty_name
                // const facultyOptions = facultyListData.map(faculty => ({
                //     value: faculty.id,
                //     text: `${faculty.faculty_name} ${faculty.designation}`
                // }));


                // // Initialize TomSelect dropdown with options containing id and faculty_name
                // new TomSelect("#faculty-id", {
                //     options: facultyOptions
                // });

                // let facultyIdContainerArray;

                // // function for select faculty id from drop down list
                // function handleFacultyDropDownListChange() {
                //     const selectedValues = Array.from(facultyDropDownList.options)
                //         .filter(option => option.selected)
                //         .map(option => option.value);
                //     console.log('selectedValues ===>>>', selectedValues);
                //     facultyId = selectedValues.length === 0 ? "" : selectedValues;
                //     facultyIdContainerArray.push({ 'facultyId': facultyId })
                //     console.log("Selected facultyId values:", facultyId);

                // }

                //facultyDropDownList.addEventListener("change", handleFacultyDropDownListChange);

                const updateApprovalFormRecordData = async (url) => {
                    const updatedSeedGrantData = new FormData();
                    const year = document.getElementById('year').value;
                    const title = document.getElementById('title').value;
                    // seedGrantFormData.faculty =  document.getElementById('faculty-id').value;
                    const commencementDate = document.getElementById('commencement-date').value;
                    const completionDate = document.getElementById('completion-date').value;
                    const sessionNumbers = document.getElementById('no-of-session').value;
                    const sessionsFees = document.getElementById('sessions-fees').value;
                    const totalFees = document.getElementById('total-fees').value;
                    const facultyShare = document.getElementById('faculty-share').value;
                    const nmimsShare = document.getElementById('nmims-share').value;
                    const researchStaffExpenses = document.getElementById('research-staff-expenses').value;
                    const travlExpanses = document.getElementById('travel').value;
                    const computerCharges = document.getElementById('computer-charges').value;
                    const faculityCharges = document.getElementById('facility-charges').value;
                    const miscellaneousContingencyCharges = document.getElementById('miscellaneous-contingency').value;
                    const advancedPayment = document.getElementById('advance-payment').value;
                    const finalPayment = document.getElementById('final-payment').value;
                    const grossFees = document.getElementById('gross-fees').value;
                    const facultyId = document.getElementById('faculty-id').value;
                    const totalAmount = document.getElementById('total-amount').value;
                    const grandTotal = document.getElementById('grand-total').value;
                    const facultyDsg = document.getElementById('faculty-designation').value;

                    updatedSeedGrantData.append('grantedSeedId', grantedSeedId)
                    updatedSeedGrantData.append('year', year)
                    updatedSeedGrantData.append('title', title);
                    updatedSeedGrantData.append('facultyDsg', facultyDsg)
                    updatedSeedGrantData.append('commencementDate', commencementDate)
                    updatedSeedGrantData.append('completionDate', completionDate)
                    updatedSeedGrantData.append('sessionNumbers', sessionNumbers)
                    updatedSeedGrantData.append('sessionsFees', sessionsFees)
                    updatedSeedGrantData.append('totalFees', totalFees)
                    updatedSeedGrantData.append('facultyShare', facultyShare)
                    updatedSeedGrantData.append('nmimsShare', nmimsShare)
                    updatedSeedGrantData.append('researchStaffExpenses', researchStaffExpenses)
                    updatedSeedGrantData.append('travlExpanses', travlExpanses)
                    updatedSeedGrantData.append('computerCharges', computerCharges)
                    updatedSeedGrantData.append('faculityCharges', faculityCharges)
                    updatedSeedGrantData.append('miscellaneousContingencyCharges', miscellaneousContingencyCharges)
                    updatedSeedGrantData.append('advancedPayment', advancedPayment)
                    updatedSeedGrantData.append('finalPayment', finalPayment)
                    updatedSeedGrantData.append('grossFees', grossFees)
                    updatedSeedGrantData.append('facultyId', facultyId)
                    updatedSeedGrantData.append('totalAmount', totalAmount)
                    updatedSeedGrantData.append('grandTotal', grandTotal)
                    // updatedSeedGrantData.append('facultyDesignation', facultyDesignation)


                    const pharmacyDoc = document.getElementById('supporting-documents');
                    const pharmacyFiles = pharmacyDoc.files;

                    console.log('caseStudyFiles ===>>>', pharmacyFiles)
                    for (let i = 0; i < pharmacyFiles.length; i++) {
                        console.log('file name  ==>>', pharmacyFiles[i].name);
                        updatedSeedGrantData.append('pharmacyFiles', pharmacyFiles[i]);
                    }

                    console.log('facultu id in updation ===>>>>', facultyId);

                    // const payload = {
                    //     updatedSeedGrantData: updatedSeedGrantData
                    // }

                    // console.log('payload ===>>>>', payload)

                    fetch(url, {
                        method: 'POST',
                        body: updatedSeedGrantData
                    })
                        .then((Response) => {
                            return Response.ok ? Response.json() : "Network response was not okk"
                        })
                        .then((data) => {
                            if (data.status === "Done") {
                                // approvalFormRecordToBeUpdated.querySelector('.faculty-name').innerText = data.facultTableData[0].faculty_name;
                                // approvalFormRecordToBeUpdated.querySelector('.project-title').innerText = data.updatedNonFormacyData.title;
                                // approvalFormRecordToBeUpdated.querySelector('.year').innerText = data.updatedNonFormacyData.year;
                                // approvalFormRecordToBeUpdated.querySelector('.total-fees').innerText = data.updatedNonFormacyData.totalFees;
                                // approvalFormRecordToBeUpdated.setAttribute('data-consultancy-id', data.updatedNonFormacyData.grantedSeedId);
                                // approvalFormRecordToBeUpdated.setAttribute('data-faculty-id', data.updatedNonFormacyData.facultyId);
                                // approvalFormRecordToBeUpdated.setAttribute('data-commencement-date', data.updatedNonFormacyData.commencementDate);
                                // approvalFormRecordToBeUpdated.setAttribute('data-completion-date', data.updatedNonFormacyData.completionDate);
                                // approvalFormRecordToBeUpdated.setAttribute('data-research-staff-expenses', data.updatedNonFormacyData.researchStaffExpenses);
                                // approvalFormRecordToBeUpdated.setAttribute('data-travel-expenses', data.updatedNonFormacyData.travlExpanses);
                                // approvalFormRecordToBeUpdated.setAttribute('data-computer-charges', data.updatedNonFormacyData.computerCharges);
                                // approvalFormRecordToBeUpdated.setAttribute('data-nmims-facility-charges', data.updatedNonFormacyData.faculityCharges);
                                // approvalFormRecordToBeUpdated.setAttribute('data-miscellaneous-including-contingency', data.updatedNonFormacyData.miscellaneousContingencyCharges);
                                // approvalFormRecordToBeUpdated.setAttribute('data-advanced-payment', data.updatedNonFormacyData.advancedPayment);
                                // approvalFormRecordToBeUpdated.setAttribute('data-final-payment', data.updatedNonFormacyData.finalPayment);
                                // approvalFormRecordToBeUpdated.setAttribute('data-per-session-fees', data.updatedNonFormacyData.sessionsFees);
                                // approvalFormRecordToBeUpdated.setAttribute('data-total-fees', data.updatedNonFormacyData.totalFees);
                                // approvalFormRecordToBeUpdated.setAttribute('data-faculty-shares', data.updatedNonFormacyData.facultyShare);
                                // approvalFormRecordToBeUpdated.setAttribute('data-nmims-shares', data.updatedNonFormacyData.nmimsShare);
                                // approvalFormRecordToBeUpdated.setAttribute('data-gross-fees', data.updatedNonFormacyData.grossFees);
                                console.log('data ===>>>>', data);
                                Swal.fire({
                                    position: "top-center",
                                    icon: "success",
                                    title: `${data.message}`,
                                    showConfirmButton: true,
                                    confirmButtonText: "OK",
                                    confirmButtonColor: "#DD6B55",
                                    // timer: 1500
                                }).then(() => {
                                    document.location.reload()
                                });
                                $('#consultancy-modal-form').modal('hide');
                            }
                            else {
                                const message = data.message;
                                console.log('data ===>>>', data)
                                console.log('message ==:::', message);
                                Swal.fire({
                                    position: "top-center",
                                    icon: "error",
                                    title: `${data.errorCode}`,
                                    color: "red",
                                    with: "20PX",
                                    html: `<span style="color: red;">${data.message}</span>`,
                                    showConfirmButton: true,
                                    confirmButtonText: "OK",
                                    confirmButtonColor: "#DD6B55"
                                });
                            }
                        })
                        .catch((error) => {
                            const message = error
                            Swal.fire({
                                position: "top-center",
                                icon: "error",
                                title: `${message}`,
                                color: "red",
                                showConfirmButton: true,
                                confirmButtonText: "OK",
                                confirmButtonColor: "#DD6B55"
                            });
                        })
                }


                updateBtn.addEventListener('click', async (event) => {

                    let commencementDate = document.getElementById('commencement-date').value;
                    let completionDate = document.getElementById('completion-date').value;

                    console.log('user dates ', commencementDate, completionDate)

                    let date1 = new Date(commencementDate);
                    let date2 = new Date(completionDate);

                    let dateValidate = date1 < date2 ? true : false;
                    console.log('date validate ', dateValidate)


                    formGroup = updateBtn.closest('.validate-input')
                    console.log("formGroup::::::::", formGroup)
                    formGroup.querySelectorAll('input[type="file"]')?.forEach(elm => {
                        console.log("elm:::::::::", elm);
                        elm.removeAttribute('data-validate')
                    })
                    formGroup.querySelectorAll('.select-option')?.forEach(elm => {
                        console.log("elm:::::::::", elm);
                        elm.removeAttribute('data-validate')
                    });
                    const isValid = validateRequiredFormFields(updateBtn);
                    if (isValid && dateValidate) {
                        await updateApprovalFormRecordData('<%- BASE_URL %>research/nmims-seed-grant-non-pharmacy/update');
                    }
                    else {
                        Swal.fire({
                            position: "top-center",
                            icon: "error",
                            title: "Validation Failed",
                            color: "red",
                            showConfirmButton: true,
                            confirmButtonText: "OK",
                            confirmButtonColor: "#DD6B55"
                        }).then(() => {
                            if (dateValidate) {
                                console.log('date true')
                                document.getElementById('completionError').innerText = ''
                            } else {
                                console.log('date false')
                                document.getElementById('completionError').innerText = 'Completion date should be greater than commencement date '

                            }
                        });
                    }
                })

                // document.getElementById('final-payment').addEventListener('input', () => {
                //     let finalPayment = document.getElementById('final-payment').value;
                //     let advancePayment = document.getElementById('advance-payment').value;
                //     let totalAmount = document.getElementById('total-amount');

                //     let advance = Number.parseInt(advancePayment)
                //     let final = Number.parseInt(finalPayment);

                //     let total = advance + final
                //     totalAmount.value = total

                //     //   document.querySelector('#commonTr').setAttribute('data-total-amount', totalAmount)
                //     console.log('advance and final ', finalPayment, advancePayment)
                // })
                document.getElementById('advance-payment').addEventListener('input', calculateTotal);
                document.getElementById('final-payment').addEventListener('input', calculateTotal);

                function calculateTotal() {
                    let finalPayment = document.getElementById('final-payment').value;
                    let advancePayment = document.getElementById('advance-payment').value;
                    let totalAmount = document.getElementById('total-amount');

                    let advance = Number.parseInt(advancePayment) || 0;
                    let final = Number.parseInt(finalPayment) || 0;

                    let total = advance + final;
                    totalAmount.value = total;

                    console.log('totalAmount ====>>>>>>', totalAmount)

                    console.log('advance and final ', finalPayment, advancePayment);
                }


                // Add event listeners to all relevant input fields
                document.getElementById('gross-fees').addEventListener('input', calculateGrandTotal);
                document.getElementById('research-staff-expenses').addEventListener('input', calculateGrandTotal);
                document.getElementById('travel').addEventListener('input', calculateGrandTotal);
                document.getElementById('miscellaneous-contingency').addEventListener('input', calculateGrandTotal);
                document.getElementById('computer-charges').addEventListener('input', calculateGrandTotal);
                document.getElementById('facility-charges').addEventListener('input', calculateGrandTotal);
                document.getElementById('final-payment').addEventListener('input', calculateGrandTotal);
                document.getElementById('advance-payment').addEventListener('input', calculateGrandTotal);
                document.getElementById('no-of-session').addEventListener('input', calculateGrandTotal);
                document.getElementById('sessions-fees').addEventListener('input', calculateGrandTotal);

                function calculateGrandTotal() {
                    let grossFees = Number.parseInt(document.getElementById('gross-fees').value) || 0;
                    let researchStaffExpenses = Number.parseInt(document.getElementById('research-staff-expenses').value) || 0;
                    let travel = Number.parseInt(document.getElementById('travel').value) || 0;
                    let miscellaneous = Number.parseInt(document.getElementById('miscellaneous-contingency').value) || 0;
                    let computerCharges = Number.parseInt(document.getElementById('computer-charges').value) || 0;
                    let facultyCharges = Number.parseInt(document.getElementById('facility-charges').value) || 0;

                    let finalPayment = Number.parseInt(document.getElementById('final-payment').value) || 0;
                    let advancePayment = Number.parseInt(document.getElementById('advance-payment').value) || 0;

                    let totalAmount = document.getElementById('grand-total');

                    // Calculate total fees
                    let totalFees = (Number.parseInt(document.getElementById('no-of-session').value) || 0) * (Number.parseInt(document.getElementById('sessions-fees').value) || 0);

                    let total = grossFees + computerCharges + miscellaneous + facultyCharges + travel + researchStaffExpenses;
                    let totalPayment = advancePayment + finalPayment;

                    const gstCharges = totalPayment * 18 / 100;

                    const grandTotalAmount = total + gstCharges + totalFees;

                    totalAmount.value = grandTotalAmount;

                    console.log('advance and final', advancePayment, finalPayment);
                    console.log('gstCharges ====>>>>', gstCharges);
                    console.log('grandTotalAmount ====>>>>', grandTotalAmount);

                }

                // Initial calculation on page load
                calculateGrandTotal();


                // $('body').keypress(function(e){ 
                // alert(e.which);
                // if(e.which == 27){
                // swal.close();
                // }
                // });



                $("#approved-consultancy-form-data-list").DataTable({

                    "pageLength": 5,
                    "lengthMenu": [[5, 10, 25, 50, -1], [5, 10, 25, 50, "All"]],
                })

                document.getElementById('headerClose').addEventListener('click', () => {

                    document.location.reload();
                });

                document.getElementById('insertClose').addEventListener('click', () => {
                    console.log('close button clicked')
                    document.location.reload();
                });

                document.getElementById('sessions-fees').addEventListener('input', () => {
                    let totalFees = parseInt(document.getElementById('no-of-session').value) * parseInt(document.getElementById('sessions-fees').value);
                    document.getElementById('total-fees').value = totalFees
                })


                // ArunDocument 2
                document.querySelector('#uploadNewSupportDocument').addEventListener('click', function (e) {
                    let is_checked = document.querySelector('#uploadNewSupportDocument').checked;
                    console.log("is_checked :", is_checked);
                    if (is_checked) {
                        document.querySelector('#supporting-documents').classList.remove('d-none');
                    } else {
                        document.querySelector('#supporting-documents').classList.add('d-none');
                    }
                })


                //  set file string into button
                function setFileNameInButtons(data) {
                    console.log('data XXXXXXXXX==>>>', data);
                    console.log('data.nonFormacyData.supporting_documents ====>>>>>', data.nonFormacyData.supporting_documents);
                    let patetDataFileView = document.getElementById('nmims-seed-data-file-view');
                    patetDataFileView.setAttribute('data-filename', data.nonFormacyData.supporting_documents);
                }

                //eventlistner for download files
                document.addEventListener('click', async function (event) {
                    const button = event.target.closest('button');
                    if (button && button.id && button.classList.contains('download-file')) {
                        console.log('button ===>>>', button)
                        try {
                            const fileDataString = button.getAttribute('data-filename');
                            console.log('fileDataString ===>>>>>>', fileDataString);
                            if (!fileDataString) {
                                throw new Error('Data filename attribute not found on button.');
                            }

                            const fileArray = fileDataString.split(',').map(fileName => fileName.trim()).filter(Boolean);
                            if (fileArray.length === 0) {
                                throw new Error('No file names found in data filename attribute.');
                            }

                            const downloadPromises = fileArray.map(async (fileName) => {
                                console.log('fileName ===>>>', fileName)
                                const fileUrl = `<%- BASE_URL %>research/nmims-seed-grant-non-pharmacy/download/${fileName}`;
                                downloadFile(fileName, fileUrl)
                                try {
                                    const response = await fetch(fileUrl);
                                    if (!response.ok) {
                                        throw new Error(`Failed to download file: ${fileName}`);
                                    }
                                    console.log('File downloaded successfully:', fileName);
                                    return fileName;
                                } catch (error) {
                                    console.error('Error downloading file:', error);
                                    throw error;
                                }
                            });

                            const downloadedFiles = await Promise.all(downloadPromises);
                            console.log('All files downloaded successfully:', downloadedFiles);
                        } catch (error) {
                            console.error('Error downloading files:', error);
                            alert(`There was a problem downloading files: ${error.message}`);
                        }
                    }
                });


                // set string file value into button
                function setFileNameAttributeToBeDownload(data) {
                    console.log('data row ankit  in side function ===>>', data);
                    const nonPharmacyFiles = document.getElementById('seed-non-pharamacy-file-edit');
                    nonPharmacyFiles.classList.remove('d-none');
                    const nonPharmacyFilesString = data.getAttribute('data-supporting-documents');
                    console.log('nonPharmacyFilesString ====>>>>', nonPharmacyFilesString);

                    // setAttribute into button
                    nonPharmacyFiles.setAttribute('data-filename', nonPharmacyFilesString);

                };

                function handleDeleteButtonClick() {
                    this.parentNode.parentNode.remove();
                }



            </script>




            <!-- <%- include('./partials/pagination') %> -->
            <%- include('./partials/footer') %>
                <%- include('./partials/footer-end') %>