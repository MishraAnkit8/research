<%- include('./partials/head') %>
<!-- inline css -->
<style>
  .chronical-modal{
  width: 100%;
}

.modal-dialog {
    margin-left: 12rem !important;
}

</style>

<%- include('./partials/header') %>
<!-- This is left sidebar  -->
<%- include('./partials/left-sidebar') %>
<!-- Navbar section -->
<main class="main" id="main-content">
    <div class="base-section coustom-section">
      <div class="errorHtml"></div>
      <div class="breadcrumbs-container">
          <ul class="breadcrumb">
              <li class="breadcrumb-link">
                  <a href="<%- BASE_URL %>research"> Dashboard </a>
              </li>
              <li class="breadcrumb-link">CHRONICLE EDITION</li>
          </ul>
      </div>
      <div class="">
        <div class="table-card-header text-uppercase d-flex align-items-center justify-content-between">
            <div>
                <h5 class="pl-2">CHRONICLE EDITION </h5>
            </div>
            <div class="">
                <button style="text-align: end;" id="chronicle-edition-add-modal" type="button" class="btn btn-primary add-modal" data-toggle="modal"
                    data-target="#chronicle-edition">
                    <i  class="fas fa-plus plus"></i></button>
                </button>
            </div>
        </div>
        <div class="card-body table-responsive">
            <div class="d-flex justify-content-between">
                <div>
                    <label>Show Entries</label>
                    <select class="form-select" id="changeEntry">
                        <option value="5">5</option>
                        <option value="10">10</option>
                        <option value="25">25</option>
                        <option value="50">50</option>
                        <option value="100">100</option>
                        <option value="150">150</option>
                        <option value="200">200</option>
                        <option value="250">250</option>
                        <option value="300">300</option>
                        <option value="350">350</option>
                        <option value="400">400</option>
                        <option value="500">500</option>
                        <option value="800">800</option>
                        <option value="1000">1000</option>
                    </select>
                </div>
                <div>
                    <div class="table-searchbar-container">
                        <button type="button" id="searchBtn"><i class="fas fa-search"></i></button>
                        <input type="search" id="searchKeyword" placeholder="Enter keywords" class="table-searchbar">
                    </div>
                </div>
            </div>
            <div class="table custom-table table-responsive research-pagination" id="journal-paper-list">
              <div class="row">
                <div class="form-group col-lg-1 col-md-6 col-sm-12 mb-4">#</div>
                <div class="form-group col-lg-2 col-md-6 col-sm-12 mb-4">VC Office</div>
                <div class="form-group col-lg-2 col-md-6 col-sm-12 mb-4">Research</div>
                <div class="form-group col-lg-3 col-md-6 col-sm-12 mb-4">Meeting Stakeholders Aspiration</div>
                <div class="form-group col-lg-2 col-md-6 col-sm-12 mb-4">Branding</div>
                <div class="form-group col-lg-2 col-md-6 col-sm-12 mb-4">
                  <a href="<%- BASE_URL %>chronicle-page"><i class="fa-solid fa-eye view text-danger"></i></a>
                </div>
              </div>
            </div>
            <div class="d-flex justify-content-between">
                <div>
                    <label >Total entries : 
                    </label>
                </div>
                <div>
                    <button id="prevBtn" class="btn btn-primary">Previous</button>
                    <button id="nextBtn" class="btn btn-primary">Next</button>
                    <p id="pagination" class="pagination-search"></p>
                </div>
            </div>
        </div>
    </div>
    </div>
  </main>
  <!-- modal form  for chronicle edition -->
  <div class="modal fade fullscreen" id="chronicle-edition" tabindex="-1"
    role="dialog" aria-labelledby="chronicle-edition" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document" >
      <div class="modal-content" style="width: 78vw !important;">
        <div class="modal-header">
          <h5 style="padding-left: 40%;" class="modal-title" id="chronicle-data"> Chronicle Edition </h5>
          <div type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span type="button" aria-hidden="true"><i class="fas fa-times"></i></span>
          </div>
        </div>
        <div class="modal-body">
          <div class="main-content">
            <div id="accordion">
              <div class="card">
                <div class="card-header" id="research-chronicle">
                  <h5 class="mb-0">
                    <button class=" offset-btn-item-link btn-lg btn-block border-0" data-toggle="collapse"
                      data-target="#vc-collapse" aria-expanded="true" aria-controls="vc-collapse">
                      From Vice Chancellor's Desk #1
                    </button>
                  </h5>
                </div>
  
                <div id="vc-collapse" class="collapse" aria-labelledby="research-chronicle" data-parent="#accordion">
                  <div class="card-body">
                    <strong>From Vice Chancellor's Desk</strong>
                    <div id="vc-data-editor">
                    </div>
                    <button id="vc-data" type="button" class="btn btn-primary insert-chronicle">Submit</button>
                  </div>
                </div>
              </div>
              <div class="card">
                <div class="card-header" id="research-heading">
                  <h5 class="mb-0">
                    <button class="offset-btn-item-link collapsed btn-lg btn-block border-0" data-toggle="collapse"
                      data-target="#research" aria-expanded="false" aria-controls="research">
                      Research #2
                    </button>
                  </h5>
                </div>
                <div id="research" class="collapse" aria-labelledby="headingTwo" data-parent="#accordion">
                  <div class="card-body">
                    <strong> Research </strong>
                    <div id="research-data-editor">
                    </div>
                    <button id="research-data" type="button" class="btn btn-primary insert-chronicle">Submit</button>
                  </div>
                </div>
              </div>
              <div class="card">
                <div class="card-header" id="meeting-header">
                  <h5 class="mb-0">
                    <button class="offset-btn-item-link collapsed btn-lg btn-block border-0" data-toggle="collapse"
                      data-target="#meeting-collapse" aria-expanded="false" aria-controls="meeting-collapse">
                      Meeting Stackholders #3
                    </button>
                  </h5>
                </div>
                <div id="meeting-collapse" class="collapse" aria-labelledby="meeting-header" data-parent="#accordion">
                  <div class="card-body">
                    <strong> Meeting Stackholders </strong>
                    <div id="meeting-data-editor">
                    </div>
                    <button id="meeting-data" type="button" class="btn btn-primary insert-chronicle">Submit</button>
                  </div>
                </div>
              </div>
              <div class="card">
                <div class="card-header" id="branding-header">
                  <h5 class="mb-0">
                    <button class="offset-btn-item-link collapsed btn-lg btn-block border-0" data-toggle="collapse"
                      data-target="#branding-collapse" aria-expanded="false" aria-controls="branding-collapse">
                      Branding #4
                    </button>
                  </h5>
                </div>
                <div id="branding-collapse" class="collapse" aria-labelledby="branding-header" data-parent="#accordion">
                  <div class="card-body">
                    <strong> Branding </strong>
                    <div id="advertising-data-editor">
  
                    </div>
                    <button id="advertising-data" type="button" class="btn btn-primary insert-chronicle">Submit</button>
  
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
        <!-- footer button -->
        <div class="modal-footer">
          <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
        </div>
      </div>
    </div>
  </div>
  <script src="https://cdn.ckeditor.com/ckeditor5/41.1.0/super-build/ckeditor.js"></script>
  <!-- <script src="https://cdn.ckeditor.com/ckeditor5/41.1.0/classic/ckeditor.js"></script> -->

  <script>

    const idContainerArray = [
      "#vc-data-editor",
      "#advertising-data-editor",
      "#research-data-editor",
      "#meeting-data-editor",
    ];

    // Object to store CKEditor instances
    const editorInstances = {};

    // Initialize CKEditor for each ID
    Promise.all(idContainerArray.map(id => {
      // Extract the ID without the "#" character
      const cleanId = id.substring(1);
      return CKEDITOR.ClassicEditor.create(document.getElementById(cleanId), {
        alignment: {
            options: [ 'left', 'right' ]
        },
        toolbar: {
          items: [
            'exportPDF', 'exportWord', '|',
            'findAndReplace', 'selectAll', '|',
            'heading', '|',
            'bold', 'italic', 'strikethrough', 'underline', 'code', 'subscript', 'superscript', 'removeFormat', '|',
            'bulletedList', 'numberedList', 'todoList', '|',
            'outdent', 'indent', '|',
            'undo', 'redo',
            '-',
            'fontSize', 'fontFamily', 'fontColor', 'fontBackgroundColor', 'highlight', '|',
            'alignment', '|',
            'link', 'uploadImage', 'blockQuote', 'insertTable', 'mediaEmbed', 'codeBlock', 'htmlEmbed', '|',
            'specialCharacters', 'horizontalLine', 'pageBreak', '|',
            'textPartLanguage', '|',
            'sourceEditing',
          ],
          contentsCss: [
            'styles.css'
        ],
          shouldNotGroupWhenFull: true
        },
        list: {
          properties: {
            styles: true,
            startIndex: true,
            reversed: true
          }
        },
        heading: {
          options: [
            { model: 'paragraph', title: 'Paragraph', class: 'ck-heading_paragraph' },
            { model: 'heading1', view: 'h1', title: 'Heading 1', class: 'ck-heading_heading1' },
            { model: 'heading2', view: 'h2', title: 'Heading 2', class: 'ck-heading_heading2' },
            { model: 'heading3', view: 'h3', title: 'Heading 3', class: 'ck-heading_heading3' },
            { model: 'heading4', view: 'h4', title: 'Heading 4', class: 'ck-heading_heading4' },
            { model: 'heading5', view: 'h5', title: 'Heading 5', class: 'ck-heading_heading5' },
            { model: 'heading6', view: 'h6', title: 'Heading 6', class: 'ck-heading_heading6' }
          ]
        },
        placeholder: 'Welcome to CKEditor 5!',
        class : "text-start",
        fontFamily: {
          options: [
            'default',
            'Arial, Helvetica, sans-serif',
            'Courier New, Courier, monospace',
            'Georgia, serif',
            'Lucida Sans Unicode, Lucida Grande, sans-serif',
            'Tahoma, Geneva, sans-serif',
            'Times New Roman, Times, serif',
            'Trebuchet MS, Helvetica, sans-serif',
            'Verdana, Geneva, sans-serif'
          ],
          supportAllValues: true
        },
        fontSize: {
          options: [10, 12, 14, 'default', 18, 20, 22],
          supportAllValues: true
        },
        htmlSupport: {
          allow: [
            {
              name: /.*/,
              attributes: true,
              classes: true,
              styles: true
            }
          ]
        },
        htmlEmbed: {
          showPreviews: true
        },
        link: {
          decorators: {
            addTargetToExternalLinks: true,
            defaultProtocol: 'https://',
            toggleDownloadable: {
              mode: 'manual',
              label: 'Downloadable',
              attributes: {
                download: 'file'
              }
            }
          }
        },
        mention: {
          feeds: [
            {
              marker: '@',
              feed: [
                '@apple', '@bears', '@brownie', '@cake', '@cake', '@candy', '@canes', '@chocolate', '@cookie', '@cotton', '@cream',
                '@cupcake', '@danish', '@donut', '@dragée', '@fruitcake', '@gingerbread', '@gummi', '@ice', '@jelly-o',
                '@liquorice', '@macaroon', '@marzipan', '@oat', '@pie', '@plum', '@pudding', '@sesame', '@snaps', '@soufflé',
                '@sugar', '@sweet', '@topping', '@wafer'
              ],
              minimumCharacters: 1
            }
          ]
        },
        removePlugins: [
          'AIAssistant',
          'CKBox',
          // 'CKFinder',
          'EasyImage',
          'RealTimeCollaborativeComments',
          'RealTimeCollaborativeTrackChanges',
          'RealTimeCollaborativeRevisionHistory',
          'PresenceList',
          'Comments',
          'TrackChanges',
          'TrackChangesData',
          'RevisionHistory',
          'Pagination',
          'WProofreader',
          'MathType',
          'SlashCommand',
          'Template',
          'DocumentOutline',
          'FormatPainter',
          'TableOfContents',
          'PasteFromOfficeEnhanced',
          'CaseChange'
        ]
      })
        .then(editor => {
          console.log(`CKEditor initialized successfully for ${id}`);
          // Store the editor instance using its ID
          editorInstances[id] = editor;

          // const currentDate = getCurrentDate();
          // editor.setData(`<p>Date: ${currentDate}</p>`);

          // Adding a button with an icon to the toolbar
          editor.ui.getEditableElement().parentElement.insertBefore(
            editor.ui.view.toolbar.element,
            editor.ui.getEditableElement()
          );
          
          // Create a button element
          const buttonElement = document.createElement('button');
          buttonElement.classList.add('ck', 'ck-button', 'ck-off');
          buttonElement.type = 'button';
          buttonElement.tabIndex = '-1';

          // Add ARIA attributes
          buttonElement.setAttribute('aria-labelledby', 'ck-editor__aria-label_e0d2de3a778d1fd978e3d5ef78eb2a327');
          buttonElement.setAttribute('aria-pressed', 'false');
          buttonElement.setAttribute('data-cke-tooltip-text', 'Time&Date');
          buttonElement.setAttribute('data-cke-tooltip-position', 's');

          // Create an imgElement element
          const imgElement = document.createElement('img');
          imgElement.src = '<%- BASE_URL %>icons/timestamp.png';
          imgElement.setAttribute('class', 'ck ck-icon ck-reset_all-excluded ck-icon_inherit-color ck-button__icon');
          imgElement.setAttribute('viewBox', '0 0 20 20');

          // Create the path for the SVG icon
          const pathElement = document.createElementNS("http://www.w3.org/2000/svg", "path");
          pathElement.setAttribute('d', 'M7 16.4c-.8-.4-1.5-.9-2.2-1.5a.6.6 0 0 1-.2-.5l.3-.6h1c1 1.2 2.1 1.7 3.7 1.7 1 0 1.8-.3 2.3-.6.6-.4.6-1.2.6-1.3.2-1.2-.9-2.1-.9-2.1h2.1c.3.7.4 1.2.4 1.7v.8l-.6 1.2c-.6.8-1.1 1-1.6 1.2a6 6 0 0 1-2.4.6c-1 0-1.8-.3-2.5-.6zM6.8 9 6 8.3c-.4-.5-.5-.8-.5-1.6 0-.7.1-1.3.5-1.8.4-.6 1-1 1.6-1.3a6.3 6.3 0 0 1 4.7 0 4 4 0 0 1 1.7 1l.3.7c0 .1.2.4-.2.7-.4.2-.9.1-1 0a3 3 0 0 0-1.2-1c-.4-.2-1-.3-2-.4-.7 0-1.4.2-2 .6-.8.6-1 .8-1 1.5 0 .8.5 1 1.2 1.5.6.4 1.1.7 1.9 1H6.8z');

          // Append the pathElement to the imgElement element
          imgElement.appendChild(pathElement);

          // Append the imgElement to the button element
          buttonElement.appendChild(imgElement);

          // span element for the text content
          const spanElement = document.createElement('span');
          spanElement.classList.add('ck', 'ck-button__label');
          spanElement.textContent = 'Time&Date';

          // append the text content to the button element
          buttonElement.appendChild(spanElement);

          // add time and date property
          buttonElement.addEventListener('click', function () {
            insertDateTime(editor); // Call your function when the button is clicked
          });

          // Append the button to wherever you want it in the document
          editor.ui.view.toolbar.element.appendChild(buttonElement);


        })
        .catch(error => {
          console.error(`Error initializing CKEditor for ${id}:`, error);
        });
    }));


    // Function for inserting Chronicle Edition Data 
    const insertChronicleEdition = async (url, editorId) => {
      const editor = editorInstances[editorId];
      console.log('editor ==>>>', editor)
      if (editor) {
        const chronicalEditorData = editor.getData();
        console.log('chronicalEditorData ===>>>>', chronicalEditorData)
        if (chronicalEditorData) {
          const editorData = {
            chronicalEditorData: chronicalEditorData
          };

          await fetch(url, {
            method: 'POST',
            headers: {
              'content-type': 'application/json'
            },
            body: JSON.stringify(editorData)
          })
            .then(response => {
              if (response.ok) {
                return response.json()
              }
            })
            .then(data => {
              if(data.status === 'done'){
                console.log('Server response:', data);
              }
              alert('Content Inserted  SuccessFully')
            })
            .catch(error => {
              console.error('Error sending data to server:', error);
            });
        } else {
          console.error('CKEditor instance not available.');
        }
      } else {
        console.error(`CKEditor instance not found for ${editorId}`);
      }
    }

    // Event listener for the submit button
    document.addEventListener('click', async function (event) {
      const button = event.target.closest('button');
      if (button && button.classList.contains('insert-chronicle')) {
        const buttonId = button.id;
        console.log('buttonId ===>>>', buttonId);
        const editorId = `#${buttonId}-editor`;
        console.log('editorId ===>>>', editorId)
        await insertChronicleEdition(`<%- BASE_URL %>chronicle-edition/${buttonId}/insert`, editorId);
      }
    });


    // function getCurrentDate() {
    //   const now = new Date();
    //   const options = { day: 'numeric', month: 'long', year: 'numeric' };
    //   return now.toLocaleDateString('en-US', options);
    // }

    function insertDateTime(editor) {
        const currentDate = new Date();
        const options = {
          day: 'numeric',
          month: 'long',
          year: 'numeric',
          hour: 'numeric',
          minute: 'numeric',
          second: 'numeric'
        };
        // for getting date string only 
        // var dateTimeString = currentDate.toLocaleString(); 
        const dateTimeString = currentDate.toLocaleString(undefined, options);
        editor.model.change(writer => {
          writer.insertText(dateTimeString, editor.model.document.selection.getFirstPosition());
        });
      }

      // Function to create a button with a label and icon class
      function createButton(label, iconClass) {
          const button = document.createElement('button');
          button.innerHTML = label;
          button.classList.add('ck-button'); // Adding CKEditor button class
          const icon = document.createElement('span');
          icon.classList.add('ck-icon', iconClass); // Adding CKEditor icon class
          button.appendChild(icon);
          return button;
        }

      // function createButton(label, iconClass) {
      //     const imgTag = document.createElement('img');
      //     imgTag.innerHTML = label;
      //     imgTag.classList.add('ck-icon', iconClass);
      //     return imgTag;
      //   }
        
  </script>
<%- include('./partials/pagination') %>
<%- include('./partials/footer') %>
<%- include('./partials/footer-end') %>