<%- include('./partials/head') %>
    <!-- inline csss -->
    <!-- Navbar section -->
    <%- include('./partials/header') %>
        <!-- This is left sidebar  -->
        <%- include('./partials/left-sidebar') %>
            <!-- This is right side section -->
            <main class="main" id="main-content">
                <div class="base-section coustom-section">
                    <!--DASHBOARD CONTENT START-->
                    <div class="errorHtml"></div>
                    <div class="breadcrumbs-container">
                        <ul class="breadcrumb">
                            <li class="breadcrumb-link">
                                <a href="<%- BASE_URL %>dashboard-page"> Dashboard </a>
                            </li>
                            <li class="breadcrumb-link">
                                <a href="<%- BASE_URL %>research"> Research </a>
                            </li>
                            <li class="breadcrumb-link"> Conference</li>
                        </ul>
                    </div>
                    <div>
                        <div class="table-card-header text-uppercase d-flex align-items-center justify-content-between">
                            <div>
                                <h5 class="pl-2">Conference LIST</h5>
                            </div>
                            <div>
                                <button id="confrence-modal-form" type="button" class="btn btn-primary add-modal"
                                    data-toggle="modal" data-target="#conference-publication-modal">ADD
                                    <i class="fas fa-plus plus"></i></button>
                                </button>
                            </div>
                        </div>
                        <div class="card-body table-responsive">
                            <div class="d-flex justify-content-between">
                                <div>
                                    <!-- <label>Show Entries</label>
                                    <select class="form-select" id="changeEntry">
                                        <option value="5">5</option>
                                        <option value="10">10</option>
                                        <option value="25">25</option>
                                        <option value="50">50</option>
                                        <option value="100">100</option>
                                        <option value="150">150</option>
                                        <option value="200">200</option>
                                        <option value="250">250</option>
                                        <option value="300">300</option>
                                        <option value="350">350</option>
                                        <option value="400">400</option>
                                        <option value="500">500</option>
                                        <option value="800">800</option>
                                        <option value="1000">1000</option>
                                    </select> -->
                                </div>
                                <div>
                                    <!-- <div class="table-searchbar-container">
                                        <button type="button" id="searchBtn"><i class="fas fa-search"></i></button>
                                        <input type="search" id="searchKeyword" placeholder="Enter keywords"
                                            class="table-searchbar">
                                    </div> -->
                                </div>
                            </div>
                            <table class="table vertical-lines custom-table table-responsive research-pagination"
                                id="conference-publication-list">
                                <thead>
                                    <th class="col-lg-1">Serial no</th>
                                    <th class="col-lg-1 campus">Campus</th>
                                    <th class="col-lg-1 school">School</th>
                                    <th class="col-lg-1">Title of the Paper</th>
                                    <th class="col-lg-1">Name of Conference</th>
                                    <th class="col-lg-1">Proceedings Details</th>
                                    <th class="col-lg-1">ISSN/ISNB No</th>
                                    <th class="col-lg-1">Action</th>
                                </thead>
                                <tbody class="data-list">
                                    <% conferenceData.forEach(function(conference,index) { %>
                                        <% const externalEmp=externalEmpList[index]; %>
                                            <tr data-conference-id="<%- conference.id %>"
                                                data-is-presenter="<%- conference.is_presenter %>"
                                                data-presenting-author="<%- conference.presenting_authors %>"
                                                data-organizing-body="<%- conference.organizing_body %>"
                                                data-vol-and-issue-no="<%- conference.vol_and_issue_no %>"
                                                data-doi-weblink="<%- conference.doi_id %>"
                                                data-upload-files="<%- conference.upload_files %>"
                                                data-sponsored="<%- conference.sponsored %>"
                                                data-award-for-presentation="<%- conference.award_for_presentation %>"
                                                data-spent-amount="<%- conference.spent_amount %>"
                                                data-authors-name="<%- conference.authors_name %>"
                                                data-conference-place="<%- conference.conference_place%>"
                                                data-conference-type="<%- conference.conference_type %>"
                                                data-publication-date="<%- conference.publication_date %>"
                                                data-upload-proof="<%- conference.upload_proof %>">
                                                <td><%- index+1 %> </td>
                                                <td class="col-lg-1 campus"><%- conference.nmims_campus %></td>
                                                <td class="col-lg-1 school"><%- conference.nmims_school %></td>
                                                <td class="title-of-paper col-lg-1"><%- conference.title_of_paper %>
                                                </td>
                                                <td class="col-lg-1 conference-name"><%- conference.conference_name %>
                                                </td>
                                                <td class="proceedings-detail col-lg-1"><%-
                                                        conference.proceedings_detail %></td>
                                                <td class="issn-isbn-no col-lg-1"><%- conference.issn_isbn_no %></td>

                                                <!-- <td colspan="3px" style="display: flex;justify-content: center;">
                                    <p class="view" data-conference-id="<%- conference.id %>">
                                        <i class="fa-solid fa-eye view text-danger"
                                            data-conference-id="<%- conference.id %>"></i>
                                    </p>
                                    <p class="edit" data-conference-id="<%- conference.id %>">
                                        <i class="fa fa-edit edit text-danger"
                                            data-conference-id="<%- conference.id %>"></i>
                                    </p>
                                    <p class="delete" data-conference-id="<%- conference.id %>">
                                        <i class="fa-solid fa-trash delete text-danger"
                                            data-conference-id="<%- conference.id %>"></i>
                                    </p>
                                </td> -->

                                                <td style="display: flex;justify-content: center;">
                                                    <b title="View" data-conference-id="<%- conference.id %>"
                                                        class="view border-right-0" style="cursor: pointer;">
                                                        &#128065;
                                                    </b>&ensp;&ensp;&ensp;
                                                    <b title="Edit" data-conference-id="<%- conference.id %>"
                                                        class="edit border-right-0" style="cursor: pointer;">
                                                        &#9998;
                                                    </b>&ensp;&ensp;&ensp;
                                                    <b title="Delete" data-conference-id="<%- conference.id %>"
                                                        class="delete border-right-0" style="cursor: pointer;">
                                                        &#128465;

                                                    </b>
                                                </td>

                                            </tr>
                                            <% }); %>
                                </tbody>
                                <tr>
                                    <div id="no-records-message"
                                        style="display: none; color: red; margin-top: 10px; padding-left: 40%;">
                                        <b class="no-record">No records found.</b>
                                    </div>
                                </tr>
                                </tbody>
                            </table>

                        </div>
                    </div>
                    <div class="d-flex justify-content-between">
                        <div>
                            <label id="total-row-count"></label>
                            <label class="d-none" id="row-count"></label>
                        </div>
                        <div>
                            <!-- <button id="prevBtn" class="btn btn-primary">Previous</button>
                            <button id="nextBtn" class="btn btn-primary">Next</button>
                            <p id="pagination" class="pagination-search"></p> -->
                        </div>
                    </div>
                    <!--Import Modal -->
                    <div class="modal fade" id="open-program-modal" tabindex="-1" aria-labelledby="open-program-modal"
                        aria-hidden="true">
                    </div>
                    <!-- EDIT PROGRAM AND UPDATE -->
                    <div class="modal fade" id="edit-program-modal" tabindex="-1" aria-labelledby="editModalLabel"
                        aria-hidden="true">
                        <div class="modal-dialog">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title" id="editModalLabel">Update Program</h5>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal"
                                        aria-label="Close"></button>
                                </div>
                                <div id="errorHtml"></div>
                                <div class="modal-body">
                                    <div class="mb-3">
                                        <label for="exampleInputEmail1" class="form-label">Program Name</label>
                                        <input type="text" class="form-control" id="program_name" name="program_name">
                                        <input type="hidden" class="form-control" id="hidden_id" name="hidden_id">
                                    </div>
                                    <div class="mb-3">
                                        <label for="exampleInputPassword1" class="form-label">Program Type</label>
                                        <select class="form-control" name="program_type_lid" id="program_type_lid">

                                            <option value="1">Full Time</option>

                                            <option value="2">Part Time</option>

                                        </select>
                                    </div>

                                    <div class="mb-3">
                                        <label for="abbr" class="form-label">Program Abbr</label>
                                        <input type="text" class="form-control" id="abbr" name="abbr">
                                    </div>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary"
                                        data-bs-dismiss="modal">Close</button>
                                    <button type="button" class="btn btn-primary updateProgram">Update</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </main>
            <!-- Modal form for conference publication -->
            <div class="modal fade " id="conference-publication-modal" tabindex="-1" role="dialog"
                aria-labelledby="case-study" aria-hidden="true">
                <div class="modal-dialog modal-dialog-scrollable modal-lg modal-fullscreen p-5" role="document">
                    <div class="modal-content modal-content-data validate-input">
                        <div class="modal-header">
                            <div style="width:80%;" class="d-flex justify-content-center">
                                <h5 class="modal-title ml-4" id="conference-publication">CONFERENCE</h5>
                            </div>

                            <div class="close" id="headerClose" data-dismiss="modal" aria-label="Close">
                                <span type="button"><i class="fas fa-times "></i></span>
                            </div>
                        </div>
                        <div class="modal-body">
                            <div class="row">
                                <!-- Campus -->
                                <div class="form-group col-lg-4 col-md-6 col-sm-12 mb-4">
                                    <label for="application-no" class="form-label fw-bold"> NMIMS Campus </label>
                                    <input type="text" id="nmims-campus" data-validate="isEmpty,isExist,isAlphabeticWords
                                        data data-err-msg=" Provide Valid Input" class="form-control number" required>
                                </div>
                                <!-- school -->
                                <div class="form-group col-lg-4 col-md-6 col-sm-12 mb-4">
                                    <label for="application-no" class="form-label fw-bold"> NMIMS School </label>
                                    <input type="text" id="nmims-school"
                                        data-validate="isEmpty,isExist,isAlphabeticWords" data
                                        data-err-msg="Provide Valid Input" class="form-control number" required>
                                </div>
                                <!--  Title of the Paper -->
                                <div class="form-group col-lg-4 col-md-6 col-sm-12 mb-4">
                                    <label for="title-of-paper" class="form-label  fw-bold">Title Of The Paper</label>
                                    <input type="text" name="title-project" id="title-of-paper" class="form-control"
                                        data-validate="isEmpty,isAllNumeric,isExist,isLength:2:255"
                                        data-err-msg="Provide Valid Input" required />
                                </div>
                                <!-- Name of Conferencend  -->
                                <div class="form-group col-lg-4 col-md-6 col-sm-12 mb-4">
                                    <label for="conference-name" class="form-label  fw-bold"> Name of Conference
                                    </label>
                                    <input type="text" name="conference-name" id="conference-name"
                                        data-validate="isEmpty,isAlphabeticWords,isExist,isLength:2:255"
                                        data-err-msg="Provide Valid Input" class="form-control" required />
                                </div>

                                <!-- Author's Name  -->
                                <div class="form-group col-lg-4 col-md-6 col-sm-12 mb-4">
                                    <label for="conference-name" class="form-label  fw-bold">Author's Name
                                    </label>
                                    <input type="text" name="conference-name" id="author-name"
                                        data-validate="isEmpty,isAlphabeticWords,isExist,isLength:2:255"
                                        data-err-msg="Provide Valid Input" class="form-control" required />
                                </div>

                                <!-- Place of Conferencend  -->
                                <div class="form-group col-lg-4 col-md-6 col-sm-12 mb-4">
                                    <label for="conference-name" class="form-label  fw-bold"> Place of Conference
                                    </label>
                                    <input type="text" name="conference-name" id="conference-place"
                                        data-validate="isEmpty,isAlphaNumeric,isExist,isLength:2:255"
                                        data-err-msg="Provide Valid Input" class="form-control" required />
                                </div>

                                <!--  Proceedings published Yes/No -->
                                <div class="form-group col-lg-4 col-md-6 col-sm-12 mb-4">
                                    <label for="proceedings-detail" class="form-label fw-bold"> Proceedings published
                                        Yes/No </label></br>
                                    <div class="form-check-inline">
                                        <label for="is-published-yes" class="form-check-label">
                                            <input type="radio" class="form-check-input" id="is-published-yes"
                                                name="Proceedings-details" value="Yes"> Yes
                                        </label>
                                    </div>
                                    <div class="form-check-inline">
                                        <label for="is-published-no" class="form-check-label">
                                            <input type="radio" class="form-check-input" id="is-published-no"
                                                name="Proceedings-details" value="No" checked> No
                                        </label>
                                    </div>
                                </div>
                                <!-- Type Of Conference  -->
                                <div class="form-group col-lg-4 col-md-6 col-sm-12 mb-4">
                                    <label for="publisher-category" class="form-label fw-bold mb-3">Type Of
                                        Conference</label><br>
                                    <div class="form-check-inline">
                                        <label for="international" class="form-check-label">
                                            <input type="radio" class="form-check-input" id="is-international"
                                                name="conference-type" value="International"> International
                                        </label>
                                    </div>
                                    <div class="form-check-inline">
                                        <label for="national" class="form-check-label">
                                            <input type="radio" class="form-check-input" id="is-national"
                                                name="conference-type" value="National" checked> National
                                        </label>
                                    </div>
                                </div>
                                <!-- Are you the Presenter? -->
                                <!-- <div class="form-group col-lg-4 col-md-6 col-sm-12 mb-4">
                                    <label for="is-presenter" class="form-label fw-bold mb-3 d-none"> Are You The
                                        Presenter ?
                                    </label><br>
                                    <div class="form-check-inline">
                                        <label for="Yes" class="form-check-label d-none">
                                            <input type="radio" class="form-check-input d-none" id="is-presenter-yes"
                                                name="is-presenter" value="Yes">
                                            Yes
                                        </label>
                                    </div>
                                    <div class="form-check-inline">
                                        <label for="no" class="form-check-label d-none">
                                            <input type="radio" class="form-check-input d-none" id="is-presenter-no"
                                                name="is-presenter" value="No" checked> No
                                        </label>
                                    </div>
                                </div> -->


                                <!-- Presenting Author-->
                                <div class="form-group col-lg-4 col-md-6 col-sm-12 mb-4">
                                    <label for="presenting-author" class="form-label fw-bold">
                                        Presenting Author
                                    </label>
                                    <input type="text" name="presenting-author" id="presenting-author"
                                        data-validate="isEmpty,isAlphabeticWords,isExist,isLength:2:255"
                                        data-err-msg="Provide Valid Input" class="form-control" required>
                                </div>

                                <!-- Organizing Body -->
                                <div class="form-group col-lg-4 col-md-6 col-sm-12 mb-4">
                                    <label for="organizing-body" class="form-label fw-bold">
                                        Organizing Body
                                    </label>
                                    <input type="text" name="publicaton-detail" id="organizing-body"
                                        data-validate="isEmpty,isNotNumber,isExist,isLength:2:255"
                                        data-err-msg="Provide Valid Input" class="form-control" required>
                                </div>
                                <!-- Any award for presentation -->
                                <div class="form-group col-lg-4 col-md-6 col-sm-12  mb-4">
                                    <label for="award-for-presentation" class="form-label fw-bold mb-3">Any Award For
                                        Presentation (Upload Proof,If Any)</label><br>
                                    <div class="form-check-inline">
                                        <label for="award-yes" class="form-check-label">
                                            <input type="radio" class="form-check-input" id="is-award-yes"
                                                name="award-for-presentation" value="Yes">
                                            Yes
                                        </label>
                                    </div>
                                    <div class="form-check-inline">
                                        <label for="award-no" class="form-check-label">
                                            <input type="radio" class="form-check-input" id="is-award-no"
                                                name="award-for-presentation" value="No" checked>
                                            No
                                        </label>
                                    </div>
                                </div>
                                <!-- Vol and issue no [e.g 9 (12)] -->
                                <div class="form-group col-lg-4 col-md-6 col-sm-12 mb-4">
                                    <label for="volAndIssue" class="form-label fw-bold">
                                        Vol and issue no [e.g 9 (12)]
                                    </label>
                                    <input type="number" name="vol-issues" id="vol-and-issue-no"
                                        data-validate="isEmpty,isNumber" data-err-msg="Numeric value is required."
                                        class="form-control" required>
                                </div>
                                <!-- ISSN/ISNB No -->
                                <div class="form-group col-lg-4 col-md-6 col-sm-12 mb-4">
                                    <label for="issn-isbn-no" class="form-label fw-bold">
                                        ISSN/ISNB No.
                                    </label>
                                    <input type="number" name="ISBN-Number" id="issn-isbn-no"
                                        data-validate="isEmpty,isNumber" data-err-msg="Numeric value is required."
                                        class="form-control" required>
                                </div>
                                <!-- DOI/Weblink of paper -->
                                <div class="form-group col-lg-4 col-md-6 col-sm-12 mb-4">
                                    <label for="doi-weblink" class="form-label  fw-bold">
                                        DOI/Weblink of paper ID
                                    </label>
                                    <input data-validate="isEmpty,isExist"
                                        data-err-msg="Link is required and provide valid input" type="text"
                                        name="web-link" id="doi-weblink-id" class="form-control" required />
                                </div>

                                <!-- Sponsored By NMIMS/Other -->
                                <div class="form-group col-lg-4 col-md-6 col-sm-12  mb-4">
                                    <label for="award-for-presentation" class="form-label fw-bold mb-3"> Sponsored By
                                        NMIMS/Other </label><br>
                                    <div class="form-check-inline">
                                        <label for="is-nmims" class="form-check-label">
                                            <input type="radio" class="form-check-input" id="is-nmims" name="sponsored"
                                                value="NMIMS">
                                            NMIMS
                                        </label>
                                    </div>
                                    <div class="form-check-inline">
                                        <label for="award-no" class="form-check-label">
                                            <input type="radio" class="form-check-input" id="is-other" name="sponsored"
                                                value="Others" checked>
                                            Other
                                        </label>
                                    </div>
                                </div>

                                <!-- Amount spent In Rs. -->
                                <div class="form-group col-lg-4 col-md-6 col-sm-12 mb-4">
                                    <label for="conference-place" class="form-label  fw-bold"> Amount spent In Rs.
                                    </label>
                                    <input type="number" name="conference-place" id="spent-amount"
                                        data-validate="isEmpty,isNumber" data-err-msg="Numeric value is required."
                                        class="form-control" required />
                                </div>

                                <!-- Publication Date. -->
                                <div class="form-group col-lg-4 col-md-6 col-sm-12 mb-4">
                                    <label for="conference-place" class="form-label  fw-bold"> Publication Date </label>
                                    <input type="Date" name="conference-place" id="publication-date"
                                        data-validate="isEmpty,isExist" data-err-msg="Date is required"
                                        class="form-control" required />
                                </div>

                                <!-- Upload Files -->
                                <div class="form-group col-lg-4 col-md-6 col-sm-12 mb-4">
                                    <label for="upload" class="form-label fw-bold ">Upload Files
                                        <div id="uploadNewSupportDocumentDiv">
                                            <label for="uploadNewSupportDocument"><small>Click to Upload New
                                                    File</small></label>
                                            <input type="checkbox" name="uploadNewSupportDocument"
                                                id="uploadNewSupportDocument">
                                        </div>
                                    </label>
                                    <div class="d-flex">
                                        <input type="file" id="conference-documnets"
                                            data-validate="isEmpty,isExist,isFile" data-err-msg="File is required"
                                            name="conferenceDocument" class="col-md-12 form-control " required multiple>
                                        <button id="conference-file-edit" class="download-btn download-file"><i
                                                class="fas fa-download text-danger"></i>Download</button>
                                    </div>
                                </div>
                                <!-- upload proof -->
                                <div class="form-group col-lg-4 col-md-6 col-sm-12 mb-4">

                                    <label for="upload" class="form-label fw-bold ">Upload Proof
                                        <div id="uploadNewSupportDocumentDivOne">
                                            <label for="uploadNewSupportDocument"><small>Click to Upload New
                                                    File</small></label>
                                            <input type="checkbox" name="uploadNewSupportDocumentOne"
                                                id="uploadNewSupportDocumentOne">
                                        </div>
                                    </label>&ensp;
                                    <span style="color:red" id="proofError"></span>
                                    <div class="d-flex">
                                        <input type="file" id="conference-proofs" name="conferenceProof"
                                            data-validate="isEmpty,isExist,isFile" data-err-msg="File is required"
                                            class="col-md-12 form-control " required multiple>
                                        <button class="download-btn download-file" id="conference-proof-edit"><i
                                                class="fas fa-download text-danger"></i>Download</button>
                                    </div>
                                </div>

                                <!-- Faculty Type -->

                                <!-- Inventor -->
                                <div class="form-group col-lg-4 col-md-6 col-sm-12 mb-4">
                                    <label for="investor-details" class="form-label fw-bold mb-3">Name Of Co-Authors</label><br>
                                    <div class="form-check-inline">
                                        <label for="is-internal" class="form-check-label enter-faculty-type">
                                            <input type="radio" class="form-check-input enternal-type"
                                                name="author-type" id="is-internal" value="Internal">
                                            <span id="enternal-text">Internal</span>
                                        </label>
                                        <div class=" col-lg-1 p-6 w-100 d-none" id="employee-list">
                                            <select id="emp-name" style="width: 200px;" 
                                                multiple>
                                                <option value="">select employee name</option>
                                                <% internalEmpList.forEach(function(employee) { %>
                                                    <option value="<%= employee.id %>">
                                                        <%= employee.faculty_name %>
                                                    </option>
                                                    <% }); %>
                                            </select>
                                        </div>
                                    </div>

                                    <div class="form-check-inline">

                                        <label for="is-external" class="form-check-label external-faculty">
                                            <input type="radio" class="form-check-input" id="is-external"
                                                name="author-type" value="External">
                                            <span id="external-text">External</span>
                                        </label>

                                    </div>


                                    <div class="form-check-inline">

                                        <label for="is-external" class="form-check-label external-faculty">
                                            <input type="radio" class="form-check-input d-none" id="is-external-update"
                                                name="author-type" value="External">
                                            <span id="external-text-upd" class="d-none">External</span>
                                        </label>

                                    </div>

                                    <div>
                                        <table style="width:100%;" class="table table-responsive-lg d-none "
                                            id="externalfacultyTable">
                                            <thead>
                                                <th>Sr.No</th>
                                                <th>Faculty Name</th>
                                                <th>Faculty Address</th>
                                                <th>Faculty Designation</th>
                                                <th>Employee Id</th>
                                                <th colspan>Action</th>
                                            </thead>
                                            <tbody id="appendFaculty">



                                            </tbody>

                                        </table>
                                    </div>
                                </div>

                                <div></div>
                                <div></div>

                                <table id="faculty-table-list-upd">
                                    <div class="form-group col-lg-3 col-md-6 col-sm-12 mb-4 d-none" id="name-class-upd">
                                        <label for="faculty-name-upd" class="form-label fw-bold">Faculty
                                            Name</label>
                                        <input type="text" class="form-control" id="faculty-name-upd" required>
                                        <span style="color:red;" id="facultyInsertError"></span>
                                    </div>
                                    <div class="form-group col-lg-3 col-md-6 col-sm-12 mb-4 d-none" id="dsg-class-upd">
                                        <label for="" class="form-label fw-bold">Faculty Designation :</label>
                                        <input type="text" class="form-control" id="faculty-designation-upd" required>
                                        <span style="color:red;" id="desInsertError"></span>
                                    </div>
                                    <div class="form-group col-lg-3 col-md-6 col-sm-12 mb-4 d-none" id="id-class-upd">
                                        <label for="faculty-emp-id-upd" class="form-label fw-bold">Faculty Id
                                        </label>
                                        <input type="text" class="form-control" id="faculty-emp-id-upd">
                                        <span style="color:red;" id="empInsertError"></span>

                                    </div>
                                    <div class="form-group col-lg-3 col-md-6 col-sm-12 mb-4 d-none"
                                        id="address-class-upd">
                                        <label for="faculty-address" class="form-label fw-bold">Faculty
                                            Address</label>
                                        <input type="text" class="form-control" id="faculty-address-upd" required>
                                        <span style="color:red;" id="addrInsertError"></span>
                                    </div>

                                    <div class="form-group col-lg-6 col-md-6 col-sm-12 mb-4 d-none" id="add-btn-upd">
                                        <button id="insert-details-upd" data-bs-target="#"
                                            class="btn col-lg-4 col-md-6 col-sm-12 btn-primary" type="button">Insert
                                            Faculty Details</button>
                                    </div>
                                </table>

                                <div id="author-details" class="form-group col-md-12 col-sm-12 mb-4 d-none">
                                    <div class="author-details-section col-lg-12 col-md-8 col-sm-12">
                                        <label for="author-name " class="form-label fw-bold col-lg-12"> External Authors
                                            Details:</label>
                                        <div id="dynamic-rows" class="col-lg-12 col-md-8 col-sm-12 mb-4">
                                        </div>
                                    </div>
                                </div>
                                <table class="table custom-table table-responsive research-pagination"
                                    id="faculty-table-list">
                                    <div class="form-group col-lg-2 col-md-6 col-sm-12 mb-4 d-none" id="name-class">
                                        <label for="faculty-name" class="form-label fw-bold">Faculty Name</lable>
                                            <input type="text" class="form-control" id="faculty-name">
                                    </div>
                                    <div class="form-group col-lg-2 col-md-6 col-sm-12 mb-4 d-none" id="dsg-class">
                                        <label for="" class="form-label fw-bold">Faculty Designation :</lable>
                                            <input type="text" class="form-control" id="faculty-designation">
                                    </div>
                                    <div class="form-group col-lg-2 col-md-6 col-sm-12 mb-4 d-none" id="id-class">
                                        <label for="faculty-emp-id" class="form-label fw-bold">Faculty Id
                                            </lable>
                                            <input type="text" class="form-control" id="faculty-emp-id">
                                    </div>
                                    <div class="form-group col-lg-2 col-md-6 col-sm-12 mb-4 d-none" id="address-class">
                                        <label for="faculty-address" class="form-label fw-bold">Faculty Address</lable>
                                            <input type="text" class="form-control" id="faculty-address">
                                    </div>

                                    <div class="form-group col-lg- col-md-6 col-sm-12 mb-4 d-none" id="add-btn">
                                        <button id="insert-details" data-bs-target="#"
                                            class="btn col-lg-4 col-md-6 col-sm-12 btn-primary" type="button">Insert
                                            Faculty Details</button>
                                        <button id="add-more-details" data-bs-target="#"
                                            class="btn col-lg-4 col-md-6 col-sm-12 btn-primary" type="button">Add More
                                            Details</button>

                                    </div>
                                </table>
                                <div id="author-details" class="form-group col-lg-6 col-md-8 col-sm-12 mb-4 d-none">
                                    <div class="author-details-section col-lg-6 col-md-8 col-sm-12">
                                        <label for="author-name " class="form-label fw-bold">Author Name:</label>
                                        <input type="text" id="author-name" class="col-md-12 form-control"
                                            placeholder="Enter author name">
                                        <button id="add-more-details"
                                            class="btn col-md-12 btn-md btn-primary submit-btn update-btn"
                                            type="button">Add
                                            More Details</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <!-- footer button -->
                        <div class="modal-footer">
                            <button type="button" id="footerClose" class="btn btn-danger"
                                data-dismiss="modal">Close</button>
                            <button type="button" class="btn btn-primary " id="submit-btn">Submit</button>
                            <button type="button" class="btn btn-primary d-none" id="update-btn">update</button>
                        </div>
                    </div>
                </div>
            </div>
            <!-- conference-publication-view-modal -->
            <div class="modal fade " id="conference-publication-view-modal" tabindex="-1" role="dialog"
                aria-labelledby="conference-publication-view-modal" aria-hidden="true">
                <div class="modal-dialog modal-dialog-scrollable modal-lg modal-fullscreen p-5" role="document">
                    <div class="modal-content modal-content-data">
                        <div class="modal-header">

                            <div style="width:80%;" class="d-flex justify-content-center">
                                <h5 class="modal-title ml-4" id="conference-publication">CONFERENCE View</h5>
                            </div>
                            <div class="close" data-dismiss="modal" aria-label="Close">
                                <span type="button"><i class="fas fa-times "></i></span>
                            </div>
                        </div>
                        <div class="modal-body">
                            <div class="row">
                                <!-- NMIMS School -->
                                <div class=" col-lg-4 col-md-6  col-sm-12 p-3">
                                    <div class="box">
                                        <div class="task-sub-title sub-title-text"> NMIMS School:</div>
                                        <label class="view-content" id="view-school"></label>
                                    </div>
                                </div>
                                <!-- NMIMS Campus -->
                                <div class=" col-lg-4 col-md-6  col-sm-12 p-3">
                                    <div class="box">
                                        <div class="task-sub-title sub-title-text"> NMIMS Campus:</div>
                                        <label class="view-content" id="view-campus"></label>
                                    </div>
                                </div>
                                <!-- Title of the Paper -->
                                <div class=" col-lg-4 col-md-6  col-sm-12 p-3">
                                    <div class="box">
                                        <div class="task-sub-title sub-title-text"> Title Of The Paper:</div>
                                        <label class="view-content" id="view-title-of-paper"></label>
                                    </div>
                                </div>

                                <!-- Name  of Conference -->
                                <div class="col-lg-4 col-md-6  col-sm-12 p-3">
                                    <div class="box">
                                        <div class="task-sub-title sub-title-text">Name of Conference:</div>
                                        <label class="view-content" id="view-conference-name"></label>
                                    </div>
                                </div>

                                <!-- Name  Authors-->
                                <div class="col-lg-4 col-md-6  col-sm-12 p-3">
                                    <div class="box">
                                        <div class="task-sub-title sub-title-text">Author's Name:</div>
                                        <label class="view-content" id="view-author-name"></label>
                                    </div>
                                </div>


                                <!-- Place of Conference -->
                                <div class="col-lg-4 col-md-6  col-sm-12 p-3">
                                    <div class="box">
                                        <div class="task-sub-title sub-title-text"> Place of Conference:</div>
                                        <label class="view-content" id="view-conference-place"></label>
                                    </div>
                                </div>
                                <!-- Proceedings published Yes/No -->
                                <div class="col-lg-4 col-md-6  col-sm-12 p-3">
                                    <div class="box">
                                        <div class="task-sub-title sub-title-text">Proceedings published Yes/No:</div>
                                        <label class="view-content" id="view-proceedings-detail"></label>
                                    </div>
                                </div>
                                <!-- Type Of Conference -->
                                <div class="col-lg-4 col-md-6  col-sm-12 p-3">
                                    <div class="box">
                                        <div class="task-sub-title sub-title-text">Type Of Conference :</div>
                                        <label class="view-content" id="view-conference-type"></label>
                                    </div>
                                </div>
                                <!-- Are you the Presenter ? -->
                                <div class="col-lg-4 col-md-6  col-sm-12 p-3">
                                    <div class="box">
                                        <div class="task-sub-title sub-title-text d-none">Are you the Presenter ?:</div>
                                        <label class="view-content" id="view-is-presenter"></label>
                                    </div>
                                </div>

                                <!-- Author Details  ? -->
                                <!-- Faculty Type -->
                                <div class="col-lg-12 col-md-6  col-sm-12 p-3">
                                    <div class="box">
                                        <div class="task-sub-title sub-title-text fw-bold d-none"> Faculty Details Id
                                            And Name:
                                        </div>
                                        <label class="view-content" id="faculty-details-container"></label>
                                    </div>
                                </div>

                                <!-- Presenting Author  ? -->
                                <div class="col-lg-4 col-md-6  col-sm-12 p-3">
                                    <div class="box">
                                        <div class="task-sub-title sub-title-text">Presenting Author:</div>
                                        <label class="view-content" id="view-presenting-author"></label>
                                    </div>
                                </div>

                                <!-- Organizing Body -->
                                <div class="col-lg-4 col-md-6  col-sm-12 p-3">
                                    <div class="box">
                                        <div class="task-sub-title sub-title-text">Organizing Body:</div>
                                        <label class="view-content" id="view-organization-body"></label>
                                    </div>
                                </div>

                                <!-- Sponsored By NMIMS/Other -->
                                <div class="col-lg-4 col-md-6  col-sm-12 p-3">
                                    <div class="box">
                                        <div class="task-sub-title sub-title-text">Sponsored By NMIMS/Other:</div>
                                        <label class="view-content" id="view-sponsored"></label>
                                    </div>
                                </div>
                                <!--Vol and issue no [e.g 9 (12)]-->
                                <div class="col-lg-4 col-md-6  col-sm-12 p-3">
                                    <div class="box">
                                        <div class="task-sub-title sub-title-text">Vol And Issue No :</div>
                                        <label class="view-content" id="view-vol-and-issue-no"></label>
                                    </div>
                                </div>
                                <!-- ISSN/ISNB No. -->
                                <div class="col-lg-4 col-md-6  col-sm-12 p-3">
                                    <div class="box">
                                        <div class="task-sub-title sub-title-text">ISSN/ISNB NO.:</div>
                                        <label class="view-content" id="view-issn-isbn-no"></label>
                                    </div>
                                </div>
                                <!-- DOI/Weblink of paper -->
                                <div class="col-lg-4 col-md-6  col-sm-12 p-3">
                                    <div class="box">
                                        <div class="task-sub-title sub-title-text">DOI/Weblink of paper ID:</div>
                                        <label class="view-content" id="view-doi-weblink-id"></label>
                                    </div>
                                </div>

                                <!-- Amount spent In Rs. -->
                                <div class="col-lg-4 col-md-6  col-sm-12 p-3">
                                    <div class="box">
                                        <div class="task-sub-title sub-title-text">Amount spent In Rs.:</div>
                                        <label class="view-content" id="view-spent-amount"></label>
                                    </div>
                                </div>

                                <!-- Publication Date. -->
                                <div class="col-lg-4 col-md-6  col-sm-12 p-3">
                                    <div class="box">
                                        <div class="task-sub-title sub-title-text">Publication Date:</div>
                                        <label class="view-content" id="view-publication-date"></label>
                                    </div>
                                </div>
                                <!-- Upload Files -->
                                <div class="col-lg-4 col-md-6  col-sm-12 p-3">
                                    <div class="box">
                                        <div class="task-sub-title sub-title-text"><button
                                                class="btn btn-primary h-10 w-10 download-file"
                                                id="conference-doc-file-view">
                                                <i class="fas fa-download text-danger"></i> Download ConferenceDocument
                                            </button>
                                        </div>
                                        <label class="view-content d-none" id="view-conference-document"></label>
                                    </div>
                                </div>
                                <!-- Any award for presentation -->
                                <div class="col-lg-4 col-md-6  col-sm-12 p-3">
                                    <div class="box">
                                        <div class="task-sub-title sub-title-text">Any Award For Presentation:</div>
                                        <label class="view-content" id="view-award-for-presentation"></label>
                                    </div>
                                </div>
                                <!-- Upload Proof -->
                                <div class="col-lg-4 col-md-6  col-sm-12 p-3">
                                    <div class="box">
                                        <div class="task-sub-title sub-title-text"><button
                                                class="btn btn-primary h-10 w-10 download-file"
                                                id="conference-proof-file-view">
                                                <i class="fas fa-download text-danger"></i> Download ConferenceProof
                                            </button>
                                        </div>
                                        <label class="view-content d-none" id="view-conference-proof"></label>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <!-- footer button -->
                        <div class="modal-footer">
                            <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
                        </div>
                    </div>
                </div>
            </div>
            <div id="employees-list-data" data-employees='<%- JSON.stringify(internalEmpList) %>'
                style="display: none;"></div>
            <!-- inline script -->
            <script src="https://cdnjs.cloudflare.com/ajax/libs/tom-select/2.3.1/js/tom-select.complete.min.js"
                integrity="sha512-zdXqksVc9s0d2eoJGdQ2cEhS4mb62qJueasTG4HjCT9J8f9x5gXCQGSdeilD+C7RqvUi1b4DdD5XaGjJZSlP9Q=="
                crossorigin="anonymous" referrerpolicy="no-referrer"></script>
            <!-- inline script -->
            <script>
                //   for index icrement
                const rowCount = document.getElementById('row-count');
                const InsertDetails = document.getElementById('insert-details');
                let externalFacultyIdArray = [];
                let facultycontainer = []
                let rowIndex = rowCount.innerText;
                let indexValue = parseInt(rowIndex, 10);
                const facultyTableList = document.getElementById('faculty-table-list')
                console.log('indexValue ==>', indexValue)
                const conferencePublicationList = document.getElementById('conference-publication-list');
                const employeeDropdown = document.getElementById("emp-name");
                const addMoreDetailsButton = document.getElementById("add-more-details");
                let conferenceId, conferenceRowToBeUpdated, storedFacultyValue, InternalAuthorValue, externalAuthorValue;
                const conferenceAddModal = document.getElementById('confrence-modal-form');
                const submitBtn = document.getElementById('submit-btn');
                const updateBtn = document.getElementById('update-btn');


                //modal for button visualization
                conferenceAddModal.addEventListener('click', function (event) {

                    //    let proofError = document.getElementById('proofError');
                    //    proofError.innerText= '';

                    if (event.target.tagName === 'BUTTON' && event.target.classList.contains('add-modal') || event.target.classList.contains('plus')) {

                        document.getElementById('conference-publication').innerText = 'CONFERENCE';

                        document.querySelector('#uploadNewSupportDocumentOne').classList.add('d-none');
                        document.querySelector('#conference-proof-edit').classList.add('d-none');
                        document.querySelector('#uploadNewSupportDocument').classList.add('d-none');
                        document.querySelector('#conference-file-edit').classList.add('d-none');


                        updateBtn.classList.add('d-none');
                        submitBtn.classList.remove('d-none');
                        // document.querySelector('#conferenceHeader').innerHTML = 'Conference';
                        document.querySelector('#uploadNewSupportDocumentDiv').classList.add('d-none');
                        document.querySelector('#uploadNewSupportDocumentDivOne').classList.add('d-none');
                        document.querySelector('#conference-documnets').classList.remove('d-none');
                        document.querySelector('#conference-proofs').classList.remove('d-none');
                        document.querySelector('#uploadNewSupportDocument').checked = false;
                        document.querySelector('#uploadNewSupportDocumentOne').checked = false;
                        removeErrorMsg()

                        $('#conference-publication-modal').modal({
                            backdrop: 'static'
                        });
                        // downloadConferenceFile.classList.add('d-none');
                        // downloadConferenceProof.classList.add('d-none');
                        // for downloadfile button
                        employeeList.classList.add('d-none');
                        authorDetails.classList.add('d-none');
                        const conferenceDocFiles = document.querySelector('#conference-file-edit');
                        const conferenceProofFiles = document.querySelector('#conference-proof-edit');
                        conferenceDocFiles.classList.add('d-none');
                        conferenceProofFiles.classList.add('d-none');
                        InternalAuthorValue = '';
                        externalAuthorValue = '';
                        storedFacultyValue = '';
                        const titleOfPaper = document.getElementById('title-of-paper');
                        const publicationDetails = document.getElementById('presenting-author');
                        const volAndIssueNo = document.getElementById('vol-and-issue-no');
                        const issnIsbnNo = document.getElementById('issn-isbn-no');
                        const conferenceDocument = document.querySelector('input[name="conferenceDocument"]');
                        const conferenceProof = document.querySelector('input[name="conferenceProof"]');
                        document.getElementById('nmims-campus').value = '';
                        document.getElementById('nmims-school').value = '';
                        document.getElementById('conference-name').value = '';
                        document.getElementById('conference-place').value = '';
                        document.getElementById('publication-date').value = '';
                        document.getElementById('presenting-author').value = '';
                        document.getElementById('organizing-body').value = '';
                        document.getElementById('spent-amount').value = '';
                        document.getElementById('doi-weblink-id').value = '';
                        document.getElementById('author-name').value = '';
                        employeeList.classList.add('d-none');
                        authorDetails.classList.add('d-none');
                        titleOfPaper.value = '';
                        publicationDetails.value = '';
                        volAndIssueNo.value = '';
                        issnIsbnNo.value = '';
                        conferenceDocument.value = '';
                        conferenceProof.value = '';


                        const employeesListData = document.getElementById('employees-list-data').dataset.employees;
                        const employeesDataObj = JSON.parse(employeesListData);
                        let employeeListArray = [];


                        // ajax for search bar to search employee name 
                        const facultyOptions = employeesDataObj.map(faculty => ({
                            value: faculty.id,
                            text: ` ${faculty.faculty_name}`
                        }));
                        new TomSelect("#emp-name", {
                            options: facultyOptions,
                            placeholder: "Select Employee Name",
                            hidePlaceholder: true,
                            create: true,
                            plugins: ['remove_button'],
                            onItemAdd: function () {
                                this.setTextboxValue('');
                                this.refreshOptions();
                            },
                            render: {
                                option: function (data, escape) {
                                    return '<div class=""><span>' + escape(data.value) + ' - </span><span class="ms-auto text-muted">' + escape(data.text) + '</span></div>';
                                },
                                item: function (data, escape) {
                                    return '<div>' + escape(data.text) + '</div>';
                                }
                            }
                        });
                    }
                })

                const insertConferencePublicationForm = async (url) => {
                    const conferenceData = new FormData();
                    const titleOfPaper = document.getElementById('title-of-paper').value;
                    const volAndIssueNo = document.getElementById('vol-and-issue-no').value;
                    const issnIsbnNo = document.getElementById('issn-isbn-no').value;
                    const doiWebLinkId = document.getElementById('doi-weblink-id').value;
                    const isPresenter = 'Yes';
                    const authorType = document.querySelector('input[name="author-type"]:checked');
                    const nmimsCampus = document.getElementById('nmims-campus').value;
                    const nmimsSchool = document.getElementById('nmims-school').value;
                    const conferenceName = document.getElementById('conference-name').value;
                    const conferencePlace = document.getElementById('conference-place').value;
                    const publicationDate = document.getElementById('publication-date').value;
                    const presentingAuthor = document.getElementById('presenting-author').value;
                    const organizingBody = document.getElementById('organizing-body').value;
                    const spentAmount = document.getElementById('spent-amount').value;
                    const authorsName = document.getElementById('author-name').value
                    const sponsored = document.querySelector('input[name="sponsored"]:checked').value;
                    const procedingDetail = document.querySelector('input[name="Proceedings-details"]:checked').value;
                    const conferenceType = document.querySelector('input[name="conference-type"]:checked').value;

                    const presentationAward = document.querySelector('input[name="award-for-presentation"]:checked').value;
                    // function call 
                    await insertFacultyNameString(authorType, conferenceData);
                    const conferenceDocument = document.getElementById('conference-documnets');
                    const conferenceProof = document.getElementById('conference-proofs');
                    const conferenceDocumentsData = conferenceDocument.files;
                    const conferenceProofsData = conferenceProof.files;
                    conferenceDocumentsData ? Array.from(conferenceDocumentsData).forEach(file => conferenceData.append('conferenceDocument', file)) : conferenceData.append('conferenceDocument', null);
                    conferenceProofsData ? Array.from(conferenceProofsData).forEach(file => conferenceData.append('conferenceProof', file)) : conferenceData.append('conferenceProof', null);
                    // for conference documents
                    // if(conferenceDocumentsData.length > 0){
                    //     for(let i = 0; i <= conferenceDocumentsData.length - 1; i++){
                    //         console.log('conferenceDocumentsData file name ==>>', conferenceDocumentsData[i].name);
                    //         if(conferenceDocumentsData[i].name){
                    //             conferenceData.append('conferenceDocument' , conferenceDocumentsData[i]);
                    //         }
                    //     }
                    // }
                    // // for conference proof
                    // if(conferenceProofsData.length > 0){
                    //     for(let i = 0; i <= conferenceProofsData.length - 1; i++){
                    //         console.log('conferenceProofsData file name ==>', conferenceProofsData[i].name);
                    //         if(conferenceProofsData[i].name){
                    //             conferenceData.append('conferenceProof' , conferenceProofsData[i]);
                    //         }
                    //     }
                    // }

                    // for setup of key value paire to send form data

                    conferenceData.append('facultycontainer', JSON.stringify(facultycontainer))

                    conferenceData.append('titleOfPaper', titleOfPaper);
                    conferenceData.append('conferenceName', conferenceName);
                    conferenceData.append('procedingDetail', procedingDetail);
                    conferenceData.append('conferencePlace', conferencePlace);
                    conferenceData.append('volAndIssueNo', volAndIssueNo);
                    conferenceData.append('issnIsbnNo', issnIsbnNo);
                    conferenceData.append('doiWebLinkId', doiWebLinkId);
                    conferenceData.append('conferenceType', conferenceType);
                    conferenceData.append('isPresenter', isPresenter);
                    conferenceData.append('publicationDate', publicationDate);
                    conferenceData.append('spentAmount', spentAmount);
                    conferenceData.append('presentationAward', presentationAward);
                    conferenceData.append('sponsored', sponsored);
                    conferenceData.append('organizingBody', organizingBody);
                    conferenceData.append('presentingAuthor', presentingAuthor);
                    conferenceData.append('nmimsCampus', nmimsCampus);
                    conferenceData.append('nmimsSchool', nmimsSchool);
                    conferenceData.append('authorsName', authorsName)

                    fetch(url, {
                        method: 'POST',
                        body: conferenceData
                    })
                        .then((result) => {
                            return result.json()
                        })
                        .then((data) => {
                            if (data.status == 'Done') {
                                //                 console.log('data ==>>', data);
                                //                 const rowCountInteger = parseInt(data.rowCount, 10);
                                //                 const IndexEntry = rowCountInteger + indexValue
                                //                 console.log('IndexEntry ===>>>', IndexEntry);
                                //                 const newConferenceFormData = document.createElement('tr');
                                //                 newConferenceFormData.setAttribute('data-is-presenter', data.conferenceData.isPresenter);
                                //                 newConferenceFormData.setAttribute('data-author-type', data.conferenceData.authorType);
                                //                 newConferenceFormData.setAttribute('data-presenting-author', data.conferenceData.presentingAuthor);
                                //                 newConferenceFormData.setAttribute('data-vol-and-issue-no', data.conferenceData.volAndIssueNo);
                                //                 newConferenceFormData.setAttribute('data-doi-weblink', data.conferenceData.doiWebLinkId);
                                //                 newConferenceFormData.setAttribute('data-upload-files', data.conferenceDocument);
                                //                 newConferenceFormData.setAttribute('data-award-for-presentation', data.conferenceData.isPresenter);
                                //                 newConferenceFormData.setAttribute('data-upload-proof', data.conferenceProofFile);
                                //                 newConferenceFormData.setAttribute('data-organizing-body', data.conferenceData.organizingBody);
                                //                 newConferenceFormData.setAttribute('data-spent-amount', data.conferenceData.spentAmount);
                                //                 newConferenceFormData.setAttribute('data-conference-place', data.conferenceData.conferencePlace);
                                //                 newConferenceFormData.setAttribute('data-conference-type', data.conferenceData.conferenceType);
                                //                 newConferenceFormData.setAttribute('data-publication-date', data.conferenceData.publicationDate);
                                //                 newConferenceFormData.innerHTML = `
                                //     <td>${IndexEntry}</td>
                                //     <td class="campus">${data.conferenceData.nmimsCampus}</td>
                                //     <td class="school">${data.conferenceData.nmimsSchool}</td>
                                //     <td class="title-of-paper">${data.conferenceData.titleOfPaper}</td>
                                //     <td class="conference-name">${data.conferenceData.conferenceName}</td>
                                //     <td class="proceedings-detail">${data.conferenceData.procedingDetail}</td>
                                //     <td class="issn-isbn-no">${data.conferenceData.issnIsbnNo}</td>
                                //     <td>
                                //         // <label class="view" data-conference-id="${data.conferenceId}"><i class="fa-solid fa-eye view text-danger"
                                //         // data-conference-id="${data.conferenceId}"></i></label>
                                //         // <label class="edit"data-conference-id="${data.conferenceId}"><i class="fa fa-edit edit text-danger"
                                //         // data-conference-id="${data.conferenceId}"></i></label>
                                //         // <label class="delete"data-conference-id="${data.conferenceId}"><i class="fa-solid fa-trash delete text-danger"
                                //         // data-conference-id="${data.conferenceId}"></i></label>

                                //          <td title="View" data-conference-id="${data.conferenceId}"
                                //                                     class="view border-right-0" style="cursor: pointer;" id="label-cals">
                                //                                     &#128065;
                                //                                 </td>
                                //                                 <td title="Edit" data-conference-id="${data.conferenceId}"
                                //                                     class="edit border-right-0" style="cursor: pointer;" id="label-cals">
                                //                                     &#9998;
                                //                                 </td>
                                //                                 <td title="Delete" data-conference-id="${data.conferenceId}"
                                //                                     class="delete border-right-0" style="cursor: pointer;" id="label-cals">
                                //                                     &#128465;

                                //                                 </td>
                                //          </td>
                                // `;
                                //                 conferencePublicationList.append(newConferenceFormData)
                                $('#conference-publication-modal').modal('hide');
                                Swal.fire({
                                    position: "top-center",
                                    icon: "success",
                                    title: `${data.message}`,
                                    showConfirmButton: true,
                                    confirmButtonText: "OK",
                                    confirmButtonColor: "#DD6B55"
                                    // timer: 1500
                                }).then(() => {
                                    document.location.reload()
                                });
                            }
                            else {
                                console.log('data ====>>>>>', data);
                                Swal.fire({
                                    position: "top-center",
                                    icon: "error",
                                    title: `${data.errorCode}`,
                                    color: "red",
                                    with: "20PX",
                                    html: `<span style="color: red;">${data.message}</span>`,
                                    showConfirmButton: true,
                                    confirmButtonText: "OK",
                                    confirmButtonColor: "#DD6B55"
                                });
                            }
                        })
                        .catch((error) => {
                            console.error('Error ==>', error)
                            const message = error;
                            Swal.fire({
                                position: "top-center",
                                icon: "error",
                                title: "Data Insertion Failed",
                                color: "red",
                                with: "20PX",
                                html: `<span style="color: red;">${message}</span>`,
                                showConfirmButton: true,
                                confirmButtonText: "OK",
                                confirmButtonColor: "#DD6B55"
                            });
                        })
                }

                submitBtn.addEventListener('click', async () => {
                    const isValid = validateRequiredFormFields(submitBtn);
                    if (isValid) {
                        await insertConferencePublicationForm('<%- BASE_URL %>research/conference-publication/insert');
                    }
                    else {
                        Swal.fire({
                            position: "top-center",
                            icon: "error",
                            allowOutsideClick: false,
                            title: "Validation Failed",
                            color: "red",
                            showConfirmButton: true,
                            confirmButtonText: "OK",
                            confirmButtonColor: "#DD6B55"
                        });
                    }
                });

                // for delete
                conferencePublicationList.addEventListener('click', async (event) => {
                    if (event.target.classList.contains('delete')) {
                        conferenceId = event.target.getAttribute('data-conference-id');
                        console.log('id for deletion ==>', conferenceId);
                        conferenceRowToBeDelete = event.target.closest('tr');
                        let confirmDelete = "Do you want to delete the Book  Publication?";
                        if (confirmDelete) {
                            Swal.fire({
                                title: "Are you sure?",
                                text: "You won't be able to revert this!",
                                icon: "warning",
                                showCancelButton: true,
                                confirmButtonColor: "#3085d6",
                                cancelButtonColor: "#d33",
                                confirmButtonText: "Yes, delete it!"
                            }).then((result) => {
                                if (result.isConfirmed) {
                                    // Execute fetch request here after confirmation
                                    fetch('<%- BASE_URL %>research/conference-publication/delete', {
                                        method: 'POST',
                                        headers: {
                                            'content-type': 'application/json'
                                        },
                                        body: JSON.stringify({ conferenceId })
                                    })
                                        .then((result) => result.json())
                                        .then((data) => {
                                            if (data.status === 'Done') {
                                                console.log('data ==>>', data);
                                                conferenceRowToBeDelete.remove();
                                                Swal.fire({
                                                    title: "Deleted!",
                                                    text: "Record has been deleted.",
                                                    icon: "success",
                                                    showConfirmButton: true,
                                                    confirmButtonText: "OK",
                                                    confirmButtonColor: "#DD6B55"
                                                }).then(() => {
                                                    location.reload();
                                                });
                                            }
                                        })
                                        .catch((error) => {
                                            console.error('Error:', error);
                                            const message = error;
                                            Swal.fire({
                                                position: "top-center",
                                                icon: "error",
                                                title: `${message}`,
                                                color: "red",
                                                showConfirmButton: true,
                                                confirmButtonText: "OK",
                                                confirmButtonColor: "#DD6B55"
                                            });
                                        });
                                }
                            });
                        }
                        else {
                            return
                        }
                    }

                    // for view the form data
                    if (event.target.classList.contains('view')) {
                        console.log('clickeddd');
                        $('#conference-publication-view-modal').modal({
                            backdrop: 'static'
                        });
                        const conferenceRowToBeViewed = event.target.closest('tr');
                        conferenceId = event.target.getAttribute('data-conference-id');
                        console.log('conferenceId ==>>', conferenceId);
                        const viewConferenceDocument = document.getElementById('view-conference-document');
                        const viewConferenceProof = document.getElementById('view-conference-proof');
                        const viewTitleOfPaper = document.getElementById('view-title-of-paper');
                        const viewConferenceName = document.getElementById('view-conference-name');
                        const viewConferencePlace = document.getElementById('view-conference-place');
                        const viewProcedingDetail = document.getElementById('view-proceedings-detail');
                        const viewSponsored = document.getElementById('view-sponsored');
                        const viewVolAndIssueNo = document.getElementById('view-vol-and-issue-no');
                        const viewIssnIsbnNo = document.getElementById('view-issn-isbn-no');
                        const viewDoiWebLinkId = document.getElementById('view-doi-weblink-id');
                        const viewConferenceType = document.getElementById('view-conference-type');
                        const viewIsPresenter = document.getElementById('view-is-presenter');
                        const viewAuthortype = document.getElementById('view-author-type');
                        const viewAward = document.getElementById('view-award-for-presentation');
                        const viewPresentingAuthor = document.getElementById('view-presenting-author')
                        const viewOrganizationBoy = document.getElementById('view-organization-body');
                        const viewSpentAmount = document.getElementById('view-spent-amount');
                        const viewPublicationDate = document.getElementById('view-publication-date');
                        const viewNmimsCampus = document.getElementById('view-campus');
                        const viewNmimsSchool = document.getElementById('view-school')


                        fetch('<%- BASE_URL %>research/conference-publication/view', {
                            method: 'POST',
                            headers: {
                                'content-type': 'application/json'
                            },
                            body: JSON.stringify({ conferenceId })
                        })
                            .then((result) => {
                                return result.json()
                            })
                            .then((data) => {
                                if (data.status === 'Done') {
                                    console.log('data ==>>', data);
                                    setFileNameInButtons(data);
                                    // viewConferenceDocumentd = data.viewConferenceData[0].upload_files; 
                                    // viewConferenceProofd = data.viewConferenceData[0].upload_proof;
                                    viewNmimsCampus.innerText = data.viewConferenceData[0].nmims_campus;
                                    viewNmimsSchool.innerText = data.viewConferenceData[0].nmims_school;
                                    viewTitleOfPaper.innerText = data.viewConferenceData[0].title_of_paper;
                                    viewConferenceName.innerText = data.viewConferenceData[0].conference_name;
                                    viewConferencePlace.innerText = data.viewConferenceData[0].conference_place;
                                    viewProcedingDetail.innerText = data.viewConferenceData[0].proceedings_detail;
                                    viewSponsored.innerText = data.viewConferenceData[0].sponsored;
                                    viewVolAndIssueNo.innerText = data.viewConferenceData[0].vol_and_issue_no;
                                    viewIssnIsbnNo.innerText = data.viewConferenceData[0].issn_isbn_no;
                                    viewDoiWebLinkId.innerText = data.viewConferenceData[0].doi_id;
                                    viewConferenceType.innerText = data.viewConferenceData[0].conference_type;
                                    viewIsPresenter.innerText = data.viewConferenceData[0].is_presenter;
                                    document.getElementById('view-author-name').innerText = data.viewConferenceData[0].authors_name;
                                    // viewAuthortype.innerText = data.viewConferenceData[0].author_type.replace(/,/g, ' ');



                                    viewAward.innerText = data.viewConferenceData[0].award_for_presentation;
                                    viewPresentingAuthor.innerText = data.viewConferenceData[0].presenting_authors;
                                    viewOrganizationBoy.innerText = data.viewConferenceData[0].organizing_body;
                                    viewSpentAmount.innerText = data.viewConferenceData[0].spent_amount;
                                    viewPublicationDate.innerText = formatDateToYYYYMMDD(data.viewConferenceData[0].publication_date);

                                    let facultyDetailsHTML = `
                                        <table class="table" border='1px'>
                                            <thead>
                                                <th>#</th>
                                                <th>Faculty Name</th>
                                                <th>Designation</th>
                                                <th>Address</th>
                                                <th>Employee ID</th>
                                            </thead>
                                            <tbody>`;

                                    data.facultyDetails.forEach((faculty, index) => {
                                        facultyDetailsHTML += `
                            <tr>
                                <td class="view-content">${index + 1}</td>
                                <td class="view-content">${faculty.faculty_name}</td>
                                <td class="view-content">${faculty.designation}</td>
                                <td class="view-content">${faculty.address}</td>
                                <td class="view-content">${faculty.employee_id}</td>
                            </tr>`;
                                    });

                                    facultyDetailsHTML += `
                            </tbody>
                        </table>`;

                                    // Set the generated faculty details HTML
                                    document.getElementById('faculty-details-container').innerHTML = facultyDetailsHTML;


                                }
                            })
                            .catch((error) => {
                                console.log('error ==>>', error);
                            })


                        $('#conference-publication-view-modal').modal('show');


                    }
                    // for update
                    if (event.target.classList.contains('edit')) {
                        conferenceId = event.target.getAttribute('data-conference-id');

                        let isExternalUpd = document.getElementById('is-external')
                        let isExternalUpdNew = document.getElementById('is-external-update')

                        let text = document.getElementById('external-text');
                        let textnew = document.getElementById('external-text-upd');

                        isExternalUpd.classList.add('d-none');
                        isExternalUpdNew.classList.remove('d-none');

                        text.classList.add('d-none');
                        textnew.classList.remove('d-none');

                        document.getElementById('name-class').classList.add('d-none');
                        document.getElementById('dsg-class').classList.add('d-none');
                        document.getElementById('id-class').classList.add('d-none');
                        document.getElementById('address-class').classList.add('d-none');
                        document.getElementById('add-btn').classList.add('d-none');

                        let externalFacultyDetails = await fetchFacultyData('<%- BASE_URL %>research/external/facultyDataForConference');
                        console.log('faculty JSON', JSON.stringify(externalFacultyDetails.facultyData))

                        console.log('patentId ankit ====>>>>>', conferenceId)
                        let externalFaculty = externalFacultyDetails.facultyData.filter(fdata => conferenceId == fdata.conference_id).map(facultyData => facultyData);
                        console.log('new external faculty ', JSON.stringify(externalFaculty))

                        let appendFaculty = document.getElementById('appendFaculty');
                        appendFaculty.innerHTML = ''


                        externalFaculty.forEach((ef, index) => {
                            let htmlData = `<tr data-facultyId = ${ef.id}>
                            
                        <td>${index + 1}</td>
                        <td><input id="updateFacultyName" type="text" value="${ef.faculty_name}" /></br><span style="color:red;" id='facultyUpdError'></span></td>
                        <td ><input id="updateFacultyAddr" type="text" value="${ef.address}" /></br><span style="color:red;" id='addrUpdError'></span></td>
                        <td ><input id="updateFacultyDes" type="text" value="${ef.designation}" /></br><span style="color:red;" id='desUpdError'></span></td>
                        <td ><input id="updateFacultyId" type="text" value="${ef.employee_id}" /></br><span style="color:red;" id='empUpdError'></span></td>
                        <td><button class="btn btn-primary updateFaculty">Update</button></td>
                        </tr>`

                            appendFaculty.insertAdjacentHTML('beforeEnd', htmlData);
                        })





                        const employeesListData = document.getElementById('employees-list-data').dataset.employees;
                        const employeesDataObj = JSON.parse(employeesListData);
                        let employeeListArray = [];

                        const internalFaculty = JSON.parse('<%- JSON.stringify(internalFaculty) %>')
                        let confEmp = internalFaculty.filter(data => conferenceId == data.conference_id).map(emp => emp)

                        Array.from(employeesDataObj).forEach(data => {
                            Array.from(confEmp).forEach(emp => {
                                if (data.id == emp.faculty_id) {
                                    employeeListArray.push(data.id)
                                }
                            })
                        })

                        // ajax for search bar to search employee name 
                        const facultyOptions = employeesDataObj.map(faculty => ({
                            value: faculty.id,
                            text: ` ${faculty.faculty_name}`
                        }));
                        new TomSelect("#emp-name", {
                            options: facultyOptions,
                            items: employeeListArray,
                            // placeholder: "Select Employee Name",
                            hidePlaceholder: true,
                            create: true,
                            plugins: ['remove_button'],
                            onItemAdd: function () {
                                this.setTextboxValue('');
                                this.refreshOptions();
                            },
                            render: {
                                option: function (data, escape) {
                                    return '<div class=""><span>' + escape(data.value) + ' - </span><span class="ms-auto text-muted">' + escape(data.text) + '</span></div>';
                                },
                                item: function (data, escape) {
                                    return '<div>' + escape(data.text) + '</div>';
                                }
                            }
                        });




                        document.getElementById('conference-publication').innerText = 'CONFERENCE Edit';
                        console.log('clickedddd');
                        $('#conference-publication-modal').modal({
                            backdrop: 'static'
                        });

                        document.querySelector('#uploadNewSupportDocumentDiv').classList.remove('d-none');
                        document.querySelector('#uploadNewSupportDocumentDivOne').classList.remove('d-none');
                        document.querySelector('#conference-documnets').classList.add('d-none');
                        document.querySelector('#conference-proofs').classList.add('d-none');

                        InternalAuthorValue = '';
                        externalAuthorValue = '';
                        storedFacultyValue = '';
                        conferenceRowToBeUpdated = event.target.closest('tr');
                        console.log('conferenceRowToBeUpdated ====>>>>>', conferenceRowToBeUpdated)
                        console.log('ID ==>>', conferenceId);
                        $('#conference-publication-modal').modal('show');
                        updateBtn.classList.remove('d-none');
                        // document.querySelector('#conferenceHeader').innerHTML = 'Conference Edit';
                        submitBtn.classList.add('d-none');
                        employeeList.classList.add('d-none');
                        authorDetails.classList.add('d-none');
                        setFileNameAttributeToBeDownload(conferenceRowToBeUpdated);
                        const titleOfPaper = document.getElementById('title-of-paper');
                        const volAndIssueNo = document.getElementById('vol-and-issue-no');
                        const issnIsbnNo = document.getElementById('issn-isbn-no');
                        const doiWebLinkId = document.getElementById('doi-weblink-id');
                        const nmimsCampus = document.getElementById('nmims-campus');
                        const nmimsSchool = document.getElementById('nmims-school');
                        const conferenceName = document.getElementById('conference-name');
                        const conferencePlace = document.getElementById('conference-place');
                        const publicationDate = document.getElementById('publication-date');
                        const presentingAuthor = document.getElementById('presenting-author');
                        const organizingBody = document.getElementById('organizing-body');
                        const spentAmount = document.getElementById('spent-amount');
                        const isNmimsSponsored = document.getElementById('is-nmims');
                        const isOtherSponsored = document.getElementById('is-other');
                        const isInternationalConference = document.getElementById('is-international');
                        const isNationalConference = document.getElementById('is-national');
                        const isAwardYes = document.getElementById('is-award-yes');
                        const isAwardno = document.getElementById('is-award-no');
                        const isPresenterYes = document.getElementById('is-presenter-yes');
                        const isPresenterNo = document.getElementById('is-presenter-no');
                        const proceedingCategoryYes = document.getElementById('is-published-yes');
                        const proceedingCategoryNo = document.getElementById('is-published-no');
                        const externalAuthor = document.getElementById('external-text');
                        const internalAuthor = document.getElementById('enternal-text');
                        const authorName = document.getElementById('author-name')
                        authorName.value = conferenceRowToBeUpdated.getAttribute('data-authors-name');
                        console.log('authorName ===>>>>>', authorName)
                        // assigning value which already stored
                        titleOfPaper.value = conferenceRowToBeUpdated.querySelector('.title-of-paper').innerText;
                        conferenceName.value = conferenceRowToBeUpdated.querySelector('.conference-name').innerText;
                        nmimsCampus.value = conferenceRowToBeUpdated.querySelector('.campus').innerText;
                        nmimsSchool.value = conferenceRowToBeUpdated.querySelector('.school').innerText;
                        issnIsbnNo.value = conferenceRowToBeUpdated.querySelector('.issn-isbn-no').innerText;
                        conferencePlace.value = conferenceRowToBeUpdated.getAttribute('data-conference-place');
                        presentingAuthor.value = conferenceRowToBeUpdated.getAttribute('data-presenting-author');
                        organizingBody.value = conferenceRowToBeUpdated.getAttribute('data-organizing-body');
                        volAndIssueNo.value = conferenceRowToBeUpdated.getAttribute('data-vol-and-issue-no');
                        doiWebLinkId.value = conferenceRowToBeUpdated.getAttribute('data-doi-weblink');
                        console.log('doiWebLinkId ===>>>', doiWebLinkId.value)
                        spentAmount.value = conferenceRowToBeUpdated.getAttribute('data-spent-amount');
                        publicationDate.value = formatDateToYYYYMMDD(conferenceRowToBeUpdated.getAttribute('data-publication-date'));
                        const procedingDetails = conferenceRowToBeUpdated.querySelector('.proceedings-detail').innerText;
                        console.log('procedingDetails ===>>>', procedingDetails)
                        procedingDetails === 'Yes' ? proceedingCategoryYes.checked = true : proceedingCategoryNo.checked = true;
                        const conferenceType = conferenceRowToBeUpdated.getAttribute('data-conference-type');
                        conferenceType === 'National' ? isNationalConference.checked = true : isInternationalConference.checked = true;
                        const isPresenter = conferenceRowToBeUpdated.getAttribute('data-is-presenter');
                        // isPresenter === 'Yes' ? isPresenterYes.checked = true : isPresenterNo.checked = true;

                        const presentationAward = conferenceRowToBeUpdated.getAttribute('data-award-for-presentation');
                        presentationAward === 'Yes' ? isAwardYes.checked = true : isAwardno.checked = true;
                        const sponsored = conferenceRowToBeUpdated.getAttribute('data-sponsored');
                        sponsored === 'NMIMS' ? isNmimsSponsored.checked = true : isOtherSponsored.checked = true;
                        const authorType = conferenceRowToBeUpdated.getAttribute('data-author-type');
                        authorType === 'External' ? externalAuthor.checked = true : internalAuthor.checked = true;
                        console.log('authorType ===>>>', authorType);

                        storedFacultyValue = authorType;

                        let conferenceDocumentData = conferenceRowToBeUpdated.getAttribute('data-upload-files');
                        const conferenceFileName = document.getElementById('conference-file-name');
                        if (conferenceFileName && conferenceDocumentData) {
                            conferenceFileName.textContent = conferenceDocumentData
                            console.log('conferenceFileName', conferenceFileName.textContent)
                        }
                        let conferenceProof = conferenceRowToBeUpdated.getAttribute('data-upload-proof');
                        const conferenceProofName = document.getElementById('conference-proof-name');
                        if (conferenceProofName && conferenceProof) {
                            conferenceProofName.textContent = conferenceProof
                        }
                    }
                });



                const updateConferencePublication = async (url) => {
                    console.log('clickedddd')
                    const updatedConferenceData = new FormData();
                    const updatedAuthorType = document.querySelector('input[name="author-type"]:checked');
                    const titleOfPaper = document.getElementById('title-of-paper').value;
                    const volAndIssueNo = document.getElementById('vol-and-issue-no').value;
                    const issnIsbnNo = document.getElementById('issn-isbn-no').value;
                    const doiWebLinkId = document.getElementById('doi-weblink-id').value;
                    // const isPresenter = document.querySelector('input[name="is-presenter"]:checked').value;
                    const authorType = document.querySelector('input[name="author-type"]:checked');
                    const nmimsCampus = document.getElementById('nmims-campus').value;
                    const nmimsSchool = document.getElementById('nmims-school').value;
                    const conferenceName = document.getElementById('conference-name').value;
                    const conferencePlace = document.getElementById('conference-place').value;
                    const publicationDate = document.getElementById('publication-date').value;
                    const presentingAuthor = document.getElementById('presenting-author').value;
                    const organizingBody = document.getElementById('organizing-body').value;
                    const spentAmount = document.getElementById('spent-amount').value;
                    const sponsored = document.querySelector('input[name="sponsored"]:checked').value;
                    const procedingDetail = document.querySelector('input[name="Proceedings-details"]:checked').value;
                    const conferenceType = document.querySelector('input[name="conference-type"]:checked').value;
                    const presentationAward = document.querySelector('input[name="award-for-presentation"]:checked').value;
                    const authorsName = document.getElementById('author-name').value;

                    console.log('storedFacultyValue ===>>>>', storedFacultyValue)
                    //function call 
                    await updateFacultyNameString(updatedAuthorType, updatedConferenceData, storedFacultyValue);
                    const updatedConferenceFiles = document.getElementById('conference-documnets');
                    const updatedConferenceProof = document.getElementById('conference-proofs');
                    const updatedConferenceFilesData = updatedConferenceFiles.files;
                    const updatedConferenceProofsData = updatedConferenceProof.files;

                    //appending key and value in object updatedConferenceData
                    updatedConferenceFilesData ? Array.from(updatedConferenceFilesData).forEach(file => updatedConferenceData.append('conferenceDocument', file)) : updatedConferenceData.append('conferenceDocument', null);
                    updatedConferenceProofsData ? Array.from(updatedConferenceProofsData).forEach(file => updatedConferenceData.append('conferenceProof', file)) : updatedConferenceData.append('conferenceProof', null);

                    updatedConferenceData.append('conferenceId', conferenceId)
                    updatedConferenceData.append('titleOfPaper', titleOfPaper);
                    updatedConferenceData.append('conferenceName', conferenceName);
                    updatedConferenceData.append('procedingDetail', procedingDetail);
                    updatedConferenceData.append('conferencePlace', conferencePlace);
                    updatedConferenceData.append('volAndIssueNo', volAndIssueNo);
                    updatedConferenceData.append('issnIsbnNo', issnIsbnNo);
                    updatedConferenceData.append('doiWebLinkId', doiWebLinkId);
                    updatedConferenceData.append('conferenceType', conferenceType);
                    // updatedConferenceData.append('isPresenter', isPresenter);
                    updatedConferenceData.append('publicationDate', publicationDate);
                    updatedConferenceData.append('spentAmount', spentAmount);
                    updatedConferenceData.append('authorsName', authorsName);
                    updatedConferenceData.append('presentationAward', presentationAward);
                    updatedConferenceData.append('sponsored', sponsored);
                    updatedConferenceData.append('organizingBody', organizingBody);
                    updatedConferenceData.append('presentingAuthor', presentingAuthor);
                    updatedConferenceData.append('nmimsCampus', nmimsCampus);
                    updatedConferenceData.append('nmimsSchool', nmimsSchool);

                    fetch(url, {
                        method: 'POST',
                        body: updatedConferenceData
                    })
                        .then((result) => {
                            return result.json()
                        })
                        .then((data) => {
                            if (data.status === "Done") {
                                console.log('updated Data ==>>', data);
                                conferenceRowToBeUpdated.querySelector('.school').innerText = data.upadtedConferenceData.nmimsSchool;
                                conferenceRowToBeUpdated.querySelector('.campus').innerText = data.upadtedConferenceData.nmimsCampus;
                                conferenceRowToBeUpdated.querySelector('.title-of-paper').innerText = data.upadtedConferenceData.titleOfPaper;
                                conferenceRowToBeUpdated.querySelector('.conference-name').innerText = data.upadtedConferenceData.conferenceName;
                                conferenceRowToBeUpdated.querySelector('.proceedings-detail').innerText = data.upadtedConferenceData.procedingDetail;
                                conferenceRowToBeUpdated.querySelector('.issn-isbn-no').innerText = data.upadtedConferenceData.issnIsbnNo;
                                conferenceRowToBeUpdated.setAttribute('data-is-presenter', data.upadtedConferenceData.isPresenter);
                                conferenceRowToBeUpdated.setAttribute('data-author-type', data.upadtedConferenceData.authorType);
                                conferenceRowToBeUpdated.setAttribute('data-presenting-author', data.upadtedConferenceData.presentingAuthor);
                                conferenceRowToBeUpdated.setAttribute('data-vol-and-issue-no', data.upadtedConferenceData.volAndIssueNo);
                                conferenceRowToBeUpdated.setAttribute('data-doi-weblink', data.upadtedConferenceData.doiWebLinkId);
                                conferenceRowToBeUpdated.setAttribute('data-upload-files', data.conferenceDocument);
                                conferenceRowToBeUpdated.setAttribute('data-award-for-presentation', data.upadtedConferenceData.isPresenter);
                                conferenceRowToBeUpdated.setAttribute('data-upload-proof', data.conferenceProofFile);
                                conferenceRowToBeUpdated.setAttribute('data-organizing-body', data.upadtedConferenceData.organizingBody);
                                conferenceRowToBeUpdated.setAttribute('data-spent-amount', data.upadtedConferenceData.spentAmount);
                                conferenceRowToBeUpdated.setAttribute('data-conference-place', data.upadtedConferenceData.conferencePlace);
                                conferenceRowToBeUpdated.setAttribute('data-conference-type', data.upadtedConferenceData.conferenceType);
                                conferenceRowToBeUpdated.setAttribute('data-publication-date', data.upadtedConferenceData.publicationDate);
                                updatedConferenceFiles.files ? conferenceRowToBeUpdated.setAttribute('data-upload-files', data.confernceDocString) : null;
                                updatedConferenceProof.files ? conferenceRowToBeUpdated.setAttribute('data-upload-proof', data.conferenceProofString) : null;

                                Swal.fire({
                                    position: "top-center",
                                    icon: "success",
                                    title: `${data.message}`,
                                    showConfirmButton: true,
                                    confirmButtonText: "OK",
                                    confirmButtonColor: "#DD6B55",
                                    timer: 1500
                                });
                                $('#conference-publication-modal').modal('hide');
                            }
                            else {
                                const message = data.message;
                                console.log('data ===>>>', data)
                                console.log('message ==:::', message);
                                Swal.fire({
                                    position: "top-center",
                                    icon: "error",
                                    title: `${data.errorCode}`,
                                    color: "red",
                                    with: "20PX",
                                    html: `<span style="color: red;">${data.message}</span>`,
                                    showConfirmButton: true,
                                    confirmButtonText: "OK",
                                    confirmButtonColor: "#DD6B55"
                                });
                            }

                        }).catch((error) => {
                            const message = error
                            Swal.fire({
                                position: "top-center",
                                icon: "error",
                                title: `${message}`,
                                color: "red",
                                showConfirmButton: true,
                                confirmButtonText: "OK",
                                confirmButtonColor: "#DD6B55"
                            });
                        })

                };

                updateBtn.addEventListener('click', async () => {
                    formGroup = updateBtn.closest('.validate-input')
                    console.log("formGroup::::::::", formGroup)
                    formGroup.querySelectorAll('input[type="file"]')?.forEach(elm => {
                        console.log("elm:::::::::", elm);
                        elm.removeAttribute('data-validate')
                    })
                    
                    // formGroup.querySelectorAll('.select-option')?.forEach(elm => {
                    //     console.log("elm:::::::::", elm);
                    //     elm.removeAttribute('data-validate')
                    // });
                    const isValid = validateRequiredFormFields(updateBtn);
                    if (isValid) {
                        await updateConferencePublication('<%- BASE_URL %>research/conference-publication/update');
                    }
                    else {
                        Swal.fire({
                            position: "top-center",
                            icon: "error",
                            title: "Validation Failed",
                            color: "red",
                            showConfirmButton: true,
                            confirmButtonText: "OK",
                            confirmButtonColor: "#DD6B55"
                        });
                    }

                })

                function setFileNameInButtons(data) {
                    console.log('data ==>>', data);
                    const conferenceDocDataFile = document.getElementById('conference-doc-file-view');
                    const conferenceProofDataFile = document.getElementById('conference-proof-file-view');
                    conferenceDocDataFile.setAttribute('data-filename', data.viewConferenceData[0].upload_files);
                    conferenceProofDataFile.setAttribute('data-filename', data.viewConferenceData[0].upload_proof);

                }

                //eventlistner for download files
                document.addEventListener('click', async function (event) {
                    const button = event.target.closest('button');
                    if (button && button.id && button.classList.contains('download-file')) {
                        console.log('button ===>>>', button)
                        try {
                            const fileDataString = button.getAttribute('data-filename');
                            if (!fileDataString) {
                                throw new Error('Data filename attribute not found on button.');
                            }

                            const fileArray = fileDataString.split(',').map(fileName => fileName.trim()).filter(Boolean);
                            if (fileArray.length === 0) {
                                throw new Error('No file names found in data filename attribute.');
                            }

                            const downloadPromises = fileArray.map(async (fileName) => {

                                const fileUrl = `<%- BASE_URL %>research/conference-publication/download/${fileName}`;
                                downloadFile(fileName, fileUrl)
                                try {
                                    const response = await fetch(fileUrl);
                                    if (!response.ok) {
                                        throw new Error(`Failed to download file: ${fileName}`);
                                    }
                                    console.log('File downloaded successfully:', fileName);
                                    return fileName;
                                } catch (error) {
                                    console.error('Error downloading file:', error);
                                    throw error;
                                }
                            });

                            const downloadedFiles = await Promise.all(downloadPromises);
                            console.log('All files downloaded successfully:', downloadedFiles);
                        } catch (error) {
                            console.error('Error downloading files:', error);
                            alert(`There was a problem downloading files: ${error.message}`);
                        }
                    }
                });


                // set string file value into button
                function setFileNameAttributeToBeDownload(data) {
                    // console.log('data row in side function ===>>', data);
                    const conferenceDocFiles = document.getElementById('conference-file-edit');
                    const conferenceProofFiles = document.getElementById('conference-proof-edit');
                    conferenceDocFiles.classList.remove('d-none');
                    conferenceProofFiles.classList.remove('d-none');
                    const conferenceDocString = data.getAttribute('data-upload-files');
                    const conferenceProofString = data.getAttribute('data-upload-proof');

                    //  setAttribute in button
                    conferenceDocFiles.setAttribute('data-filename', conferenceDocString);
                    conferenceProofFiles.setAttribute('data-filename', conferenceProofString);
                };


                // EVENT LIST THAT WILL USE USE TO OPEN DROP DOWN LIST  
                const externaltype = document.querySelector('.external-faculty');
                const enternalFacultyType = document.getElementById('is-internal');
                const externalFacultyType = document.getElementById('is-external');
                const employeeList = document.getElementById('employee-list');
                const authorDetails = document.getElementById('author-details');

                // let storedSelectedValue;
                let additionalDetails = [];

                const enternalText = document.getElementById('enternal-text');

                // employeesListData data came from backend
                // const employeesListData = document.getElementById('employees-list-data').dataset.employees;
                // const employeesDataObj = JSON.parse(employeesListData);
                // let employeeListArray = [];


                // // ajax for search bar to search employee name 
                // const facultyOptions = employeesDataObj.map(faculty => ({
                //     value: faculty.id,
                //     text: ` ${faculty.faculty_name}`
                // }));
                // new TomSelect("#emp-name", {
                //     options: facultyOptions,
                //     placeholder: "Select Employee Name",
                //     hidePlaceholder: true,
                //     create: true,
                //     plugins: ['remove_button'],
                //     onItemAdd: function () {
                //         this.setTextboxValue('');
                //         this.refreshOptions();
                //     },
                //     render: {
                //         option: function (data, escape) {
                //             return '<div class=""><span>' + escape(data.value) + ' - </span><span class="ms-auto text-muted">' + escape(data.text) + '</span></div>';
                //         },
                //         item: function (data, escape) {
                //             return '<div>' + escape(data.text) + '</div>';
                //         }
                //     }
                // });
                const authorNamesArray = [];
                // function for select author name from drop down list
                function handleEmployeeDropdownChange() {
                    const selectedValues = Array.from(employeeDropdown.options)
                        .filter(option => option.selected)
                        .map(option => option.value);
                    InternalAuthorValue = selectedValues.length === 0 ? "" : selectedValues;
                    authorNamesArray.push({ 'internalEmpList': InternalAuthorValue })
                    facultycontainer.push(InternalAuthorValue)
                    console.log("Selected employee values:", InternalAuthorValue);

                }

                //function for handle add more details for storing current value of clicked
                function handleAddMoreDetailsClick() {
                    const nameStringArray = [];
                    const authorName = document.getElementById("author-name").value;
                    console.log('authorName ====>>>>', authorName)
                    nameStringArray.push(authorName);
                    externalAuthorValue = ',' + nameStringArray.join(",");
                    console.log('nameStringArray ====>>>', nameStringArray.join(","))
                    authorNamesArray.push({ 'externalEmpList': externalAuthorValue });
                    console.log("Stored external author names:", externalAuthorValue);
                }
                //event listner for handleAddMoreDetailsClick and handleEmployeeDropdownChange
                addMoreDetailsButton.addEventListener("click", handleAddMoreDetailsClick);
                employeeDropdown.addEventListener("change", handleEmployeeDropdownChange);

                // function for add drop down list or  add new faculty data
                async function insertFacultyNameString(authorType, conferenceData) {
                    console.log('authorType in side my function ====>>>', authorType);
                    // console.log('InternalAuthorValue ====>>>>>', InternalAuthorValue);
                    // console.log('externalAuthorValue ===>>>', externalAuthorValue)
                    const facultytype = authorType.value;
                    console.log('facultytype ===>>>', facultytype);
                    console.log('authorNamesArray ===>>>>', authorNamesArray)
                    const authorNameSting = JSON.stringify(authorNamesArray);
                    conferenceData.append('authorName', authorNameSting);
                }

                // fuction for updated faculty type
                async function updateFacultyNameString(updatedAuthorType, updatedConferenceData, storedFacultyValue) {
                    console.log('storedFacultyValue in side update function ===>>>', storedFacultyValue)
                    console.log('updatedAuthorType ====>>>', updatedAuthorType);
                    console.log('externalAuthorValue ===>>>', externalAuthorValue);
                    console.log('InternalAuthorValue ====>>>>>', InternalAuthorValue);
                    console.log('storedFacultyValue ====>>> ', storedFacultyValue);
                    const updatedAuthorNameArrays = [];
                    if (!externalAuthorValue && !InternalAuthorValue) {
                        updatedAuthorNameArrays.push({ 'existingNameValue': storedFacultyValue })
                        const updatedAuthorNameString = JSON.stringify(updatedAuthorNameArrays);
                        updatedConferenceData.append('authorName', updatedAuthorNameString)
                    }
                    else {
                        updatedAuthorNameArrays.push({ 'externalEmpList': externalAuthorValue })
                        updatedAuthorNameArrays.push({ 'internalEmpList': InternalAuthorValue })
                        const updatedAuthorNameString = JSON.stringify(updatedAuthorNameArrays);
                        console.log('updatedAuthorNameString ===>>>>', updatedAuthorNameString);
                        updatedConferenceData.append('authorName', updatedAuthorNameString)
                    }
                }

                function enternalFacultyDropDownList() {
                    employeeList.classList.remove('d-none');
                    authorDetails.classList.add('d-none');
                }

                function externalFacultyDetails() {
                    employeeList.classList.add('d-none');
                    addMoreDetailsButton.classList.add('d-none');
                    document.getElementById('insert-details').classList.remove('d-none');
                    document.getElementById('name-class').classList.remove('d-none')
                    document.getElementById('dsg-class').classList.remove('d-none')
                    document.getElementById('id-class').classList.remove('d-none')
                    document.getElementById('address-class').classList.remove('d-none');
                    document.getElementById('add-btn').classList.remove('d-none')

                    document.getElementById('name-class-upd').classList.add('d-none');
                    document.getElementById('dsg-class-upd').classList.add('d-none');
                    document.getElementById('id-class-upd').classList.add('d-none');
                    document.getElementById('address-class-upd').classList.add('d-none');
                    document.getElementById('add-btn-upd').classList.add('d-none');

                    document.getElementById('externalfacultyTable').classList.add('d-none')
                }

                // making d-none external faculty
                enternalFacultyType.addEventListener('click', enternalFacultyDropDownList)
                //making d-none internal faculty
                externalFacultyType.addEventListener('click', externalFacultyDetails)

                $("#conference-publication-list").DataTable({
                    "pageLength": 5,
                    "lengthMenu": [[5, 10, 25, 50, -1], [5, 10, 25, 50, "All"]],
                })

                document.getElementById('is-award-yes').addEventListener('click', () => {
                    let isAward = document.getElementById('is-award-yes');
                    let proofError = document.getElementById('proofError');
                    if (isAward.checked) {
                        proofError.innerText = '*Please upload the documents'
                    }
                })

                document.getElementById('is-award-no').addEventListener('click', () => {
                    let isAward = document.getElementById('is-award-no');
                    let proofError = document.getElementById('proofError');
                    if (isAward.checked) {
                        proofError.innerText = ''
                    }
                })

                document.getElementById('headerClose').addEventListener('click', () => {
                    document.location.reload();
                })

                document.getElementById('footerClose').addEventListener('click', () => {
                    document.location.reload();

                })

                document.querySelector('#uploadNewSupportDocument').addEventListener('click', function (e) {
                    let is_checked = document.querySelector('#uploadNewSupportDocument').checked;
                    console.log("is_checked :", is_checked);
                    if (is_checked) {
                        document.querySelector('#conference-documnets').classList.remove('d-none');
                    } else {
                        document.querySelector('#conference-documnets').classList.add('d-none');
                    }
                });

                const insertExternalDetails = async (url) => {
                    // Define externalFacultyArray and externalFacultyData outside the function
                    const externalFacultyDetails = {};
                    externalFacultyDetails.facultyName = document.getElementById('faculty-name').value;
                    externalFacultyDetails.facultyDsg = document.getElementById('faculty-designation').value;
                    externalFacultyDetails.facultyAddr = document.getElementById('faculty-address').value;
                    externalFacultyDetails.facultyEmpId = document.getElementById('faculty-emp-id').value;

                    const payload = {
                        externalFacultyDetails: externalFacultyDetails
                    }

                    console.log('payload ====>>>>>>', payload);

                    fetch(url, {
                        method: 'POST',
                        headers: {
                            'content-type': 'application/json'
                        },
                        body: JSON.stringify(payload)
                    })
                        .then((result) => {
                            return result.json()
                        })
                        .then((data) => {
                            console.log('data ===>>>>> ankit ', data);

                            if (data.status === 'Done') {
                                console.log('data ===>>>>> ankit ', data);
                                facultycontainer.push(data.externalFacultyId)
                                // let rowCountInteger = parseInt(data.rowCount, 10);
                                // let indexCount = rowCountInteger;
                                // rowCountInteger = indexCount + rowCountInteger;
                                // console.log('rowCountInteger ===>>>>>>', rowCountInteger);

                                externalFacultyIdArray.push(data.externalFacultyId);
                                document.getElementById('name-class').classList.add('d-none');
                                document.getElementById('dsg-class').classList.add('d-none');
                                document.getElementById('id-class').classList.add('d-none');
                                document.getElementById('address-class').classList.add('d-none');
                                document.getElementById('insert-details').classList.add('d-none');
                                document.getElementById('add-more-details').classList.remove('d-none');
                                const newFacultyDataRow = document.createElement('tr');
                                newFacultyDataRow.innerHTML = `
                                <td class="name-class"> ${data.facultyData.facultyName} </td>
                                <td class="dsg-class"> ${data.facultyData.facultyDsg} </td>
                                <td class="id-class"> ${data.facultyData.facultyEmpId} </td>
                                <td class="address-class"> ${data.facultyData.facultyAddr} </td>
                    `
                                facultyTableList.classList.remove('d-none')
                                facultyTableList.appendChild(newFacultyDataRow);
                                Swal.fire({
                                    position: "top-center",
                                    icon: "success",
                                    title: `${data.message}`,
                                    showConfirmButton: true,
                                    confirmButtonText: "OK",
                                    confirmButtonColor: "#DD6B55"
                                    // timer: 1500
                                })
                            }


                        }).catch((error) => {
                            console.log('error ===>>>>>', error);
                            Swal.fire({
                                position: "center",
                                icon: "error",
                                title: "Failed to insert",
                                color: "red",
                                showConfirmButton: true,
                                confirmButtonText: "OK",
                                confirmButtonColor: "#DD6B55"
                            });
                        })

                    // event listner for insert exetrnal faculty details details
                    document.getElementById('add-more-details').addEventListener('click', () => {

                        console.log('clicked add more button');
                        // making input field empty
                        document.getElementById('faculty-name').value = '';
                        document.getElementById('faculty-designation').value = '';
                        document.getElementById('faculty-address').value = '';
                        document.getElementById('faculty-emp-id').value = '';
                        document.getElementById('name-class').classList.remove('d-none');
                        document.getElementById('dsg-class').classList.remove('d-none');
                        document.getElementById('id-class').classList.remove('d-none');
                        document.getElementById('address-class').classList.remove('d-none');
                        document.getElementById('insert-details').classList.remove('d-none');
                        document.getElementById('add-more-details').classList.add('d-none');

                    })
                }

                //  addEventListener   for insert external details
                InsertDetails.addEventListener('click', async () => {
                    console.log('clickedd insert details buttons')
                    await insertExternalDetails('<%- BASE_URL %>research/external/faculty-insert');

                });


                document.querySelector('#uploadNewSupportDocumentOne').addEventListener('click', function (e) {
                    let is_checked = document.querySelector('#uploadNewSupportDocumentOne').checked;
                    console.log("is_checked :", is_checked);
                    if (is_checked) {
                        document.querySelector('#conference-proofs').classList.remove('d-none');
                    } else {
                        document.querySelector('#conference-proofs').classList.add('d-none');
                    }
                });

                document.getElementById('is-external-update').addEventListener('click', () => {
                    let is_checked = document.getElementById('is-external-update');
                    console.log('check box checked')

                    if (is_checked.checked) {
                        document.getElementById('externalfacultyTable').classList.remove('d-none')
                        document.getElementById('name-class-upd').classList.remove('d-none');
                        document.getElementById('dsg-class-upd').classList.remove('d-none');
                        document.getElementById('id-class-upd').classList.remove('d-none');
                        document.getElementById('address-class-upd').classList.remove('d-none');
                        document.getElementById('add-btn-upd').classList.remove('d-none');
                    } else {
                        document.getElementById('externalfacultyTable').classList.add('d-none')
                        document.getElementById('faculty-table-list-upd').classList.add('d-none');

                    }
                })

                document.addEventListener('click', (event) => {

                    if (event.target.classList.contains('updateFaculty')) {
                        let facultyId = event.target.closest('tr').getAttribute('data-facultyId')
                        console.log('button clicked with id ', facultyId)
                        let tr = event.target.closest('tr');
                        let facultyName = tr.querySelector('#updateFacultyName').value
                        let facultyDesignation = tr.querySelector('#updateFacultyDes').value
                        let facultyAddr = tr.querySelector('#updateFacultyAddr').value
                        let empId = tr.querySelector('#updateFacultyId').value

                        let addrError = (facultyAddr != '') ? true : false;
                        if (addrError) {
                            document.getElementById('addrUpdError').innerText = '';
                        } else {
                            document.getElementById('addrUpdError').innerText = 'Address is Required';
                        }

                        let facultyError = checkAlphabets(facultyName, 'facultyUpdError');
                        let designationError = checkAlphabets(facultyDesignation, 'desUpdError');
                        let empError = checkEmpError(empId, 'empUpdError');
                        let externalFacultyDetails;

                        if (addrError && facultyError && designationError && empError) {

                            externalFacultyDetails = {
                                facultyId: facultyId, facultyName: facultyName,
                                facultyDesignation: facultyDesignation, facultyAddr: facultyAddr, empId: empId
                            }

                            let obj = externalFacultyDetails
                            upsertFacultyData('<%- BASE_URL %>research/external/faculty-updateData', obj, tr)
                        }

                    }
                })


                function upsertFacultyData(url, obj, tr) {
                    fetch(url, {
                        method: 'POST',
                        headers: {
                            'content-type': 'application/json'
                        },
                        body: JSON.stringify(obj)
                    })
                        .then((result) => {
                            return result.json()
                        })
                        .then((data) => {
                            if (data.status === 'Done') {

                                console.log('response >> ', data)

                                Swal.fire({
                                    position: "top-center",
                                    icon: "success",
                                    title: `${data.message}`,
                                    showConfirmButton: true,
                                    confirmButtonText: "OK",
                                    confirmButtonColor: "#DD6B55"
                                }).then(() => {
                                    console.log('object ', JSON.stringify(obj))
                                    tr.querySelector('#updateFacultyName').value = obj.facultyName
                                    tr.querySelector('#updateFacultyDes').value = obj.facultyDesignation
                                    tr.querySelector('#updateFacultyAddr').value = obj.facultyAddr
                                    tr.querySelector('#updateFacultyId').value = obj.empId
                                })
                            }
                        })
                }

                function checkAlphabets(facultyName, idName) {

                    let facultyError = document.getElementById(idName);

                    // if (facultyName.length == 0 && idName === 'facultyError' || ) {
                    //     facultyError.innerText = "Name is Required";
                    //     return false;
                    // }

                    // if (facultyName.length == 0 && idName === 'desError') {
                    //     facultyError.innerText = "Designation is Required";
                    //     return false;
                    // }

                    if (!facultyName || facultyName.trim() === "") {
                        facultyError.innerText = "Provide Valid Input";
                        return false;
                    }

                    const words = facultyName.split(" ");

                    for (const word of words) {
                        for (let i = 0; i < word.length; i++) {
                            const charCode = word.charCodeAt(i);
                            if (
                                (charCode < 65 || charCode > 90) &&
                                (charCode < 97 || charCode > 122)
                            ) {
                                facultyError.innerText = "Provide Valid Input";
                                return false;
                            }
                        }
                    }

                    facultyError.innerText = "";
                    return true;
                }

                function checkEmpError(facultyEmpId, errid) {
                    let empError = document.getElementById(errid);
                    let bool = true;

                    if (facultyEmpId.length === 0) {
                        empError.innerText = 'Provide Valid Input';
                        return false;
                    }

                    for (let i = 0; i < facultyEmpId.length; i++) {
                        const charCode = facultyEmpId.charAt(i);
                        if (!(charCode >= '0' && charCode <= '9')) {
                            empError.innerText = 'Provide Valid Input';
                            bool = false;
                            break;
                        }
                    }

                    if (bool) {
                        empError.innerText = '';
                    }

                    return bool;
                }


                document.getElementById('insert-details-upd').addEventListener('click', () => {


                    let facultyNameUpd = document.getElementById('faculty-name-upd');
                    let facultyDesignationUpd = document.getElementById('faculty-designation-upd');
                    let facultyAddrUpd = document.getElementById('faculty-address-upd');
                    let facultyEmpUpd = document.getElementById('faculty-emp-id-upd');

                    let facultyName = facultyNameUpd.value;
                    let facultyDesignation = facultyDesignationUpd.value;
                    let facultyAddr = facultyAddrUpd.value;
                    let facultyEmp = facultyEmpUpd.value;

                    let addrError = (facultyAddr != '') ? true : false;
                    if (addrError) {
                        document.getElementById('addrInsertError').innerText = '';
                    } else {
                        document.getElementById('addrInsertError').innerText = 'Address is Required';
                    }

                    let facultyError = checkAlphabets(facultyName, 'facultyInsertError');
                    let designationError = checkAlphabets(facultyDesignation, 'desInsertError');
                    let empError = checkEmpError(facultyEmp, 'empInsertError');

                    if (addrError && facultyError && designationError && empError) {

                        console.log('clickedd insert details buttons')
                        upsertExternalDetails('<%- BASE_URL %>research/external/faculty-conferenceInsert');
                    }
                });


                const upsertExternalDetails = (url) => {
                    let facultyNameUpd = document.getElementById('faculty-name-upd');
                    let facultyDesignationUpd = document.getElementById('faculty-designation-upd');
                    let facultyAddrUpd = document.getElementById('faculty-address-upd');
                    let facultyEmpUpd = document.getElementById('faculty-emp-id-upd');

                    let facultyName = facultyNameUpd.value;
                    let facultyDesignation = facultyDesignationUpd.value;
                    let facultyAddr = facultyAddrUpd.value;
                    let facultyEmp = facultyEmpUpd.value;


                    let externalFacultyDetails = {
                        facultyEmpId: facultyEmp,
                        facultyName: facultyName,
                        facultyDsg: facultyDesignation,
                        facultyAddr: facultyAddr,
                    }

                    console.log('json string ', JSON.stringify(externalFacultyDetails))

                    let payload = { externalFacultyDetails, conferenceId };

                    fetch(url, {
                        method: 'POST',
                        headers: {
                            'content-type': 'application/json'
                        },
                        body: JSON.stringify(payload)
                    })
                        .then((result) => {
                            return result.json()
                        })
                        .then((data) => {
                            if (data.status === 'Done') {

                                console.log('response >> ', data)

                                Swal.fire({
                                    position: "top-center",
                                    icon: "success",
                                    title: `${data.message}`,
                                    showConfirmButton: true,
                                    confirmButtonText: "OK",
                                    confirmButtonColor: "#DD6B55"
                                }).then(() => {

                                    let appendFaculty = document.getElementById('appendFaculty');
                                    let allTds = appendFaculty.querySelectorAll('tr');

                                    let htmlData = `<tr data-facultyId = ${data.conferenceId}>

                                                                        <td>${allTds.length + 1}</td>
                                                                        <td><input id="updateFacultyName" type="text" value=${facultyName} /></br><span style="color:red;" id='facultyUpdError'></span></td>
                                                                        <td ><input id="updateFacultyAddr" type="text" value=${facultyAddr} /></br><span style="color:red;" id='addrUpdError'></span></td>
                                                                        <td ><input id="updateFacultyDes" type="text" value=${facultyDesignation} /></br><span style="color:red;" id='desUpdError'></span></td>
                                                                        <td ><input id="updateFacultyId" type="text" value=${facultyEmp} /></br><span style="color:red;" id='empUpdError'></span></td>
                                                                        <td><button class="btn btn-primary updateFaculty">Update</button></td>
                                                                        </tr>`

                                    appendFaculty.insertAdjacentHTML('beforeEnd', htmlData);



                                });
                            }
                        }).catch((error) => {
                            console.error("ERROR:", error);
                        })
                }


                async function fetchFacultyData(url) {
                    let requestDetails = {
                        method: 'GET',
                        headers: {
                            'Accept': 'application/json'
                        }
                    }

                    let data;
                    let response = await fetch(url, requestDetails);
                    if (response.ok) {
                        data = await response.json();
                        return data;
                    } else {
                        throw new Error('Error in fetching data')
                    }
                }




            </script>
            <!-- <%- include('./partials/pagination') %> -->
            <%- include('./partials/footer') %>
                <%- include('./partials/footer-end') %>s