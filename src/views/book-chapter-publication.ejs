<%- include('./partials/head') %>
<!-- inline css -->
<!-- Navbar section -->
<%- include('./partials/header') %>
<!-- This is left sidebar  -->
<%- include('./partials/left-sidebar') %>
<!-- This is right side section -->
<main class="main" id="main-content">
    <div class="base-section coustom-section">
        <!--DASHBOARD CONTENT START-->
        <div class="errorHtml"></div>
        <div class="breadcrumbs-container">
            <ul class="breadcrumb">
                <li class="breadcrumb-link">
                    <a href="<%- BASE_URL %>research"> Research </a>
                </li>
                <li class="breadcrumb-link">
                    <a href="<%- BASE_URL %>research/book-publication-main"> Book Publication Dashboard </a>
                </li>
                <li class="breadcrumb-link"> BOOK PUBLICATION CHAPTER </li>
            </ul>
        </div>
        <div>
            <div class="table-card-header text-uppercase d-flex align-items-center justify-content-between">
                <div>
                    <h5 class="pl-2">BOOK CHAPTER PUBLICATION LIST</h5>
                </div>
                <div >
                    <button id="book-chapter-add-modal" type="button" class="btn btn-primary add-modal" data-toggle="modal"
                        data-target="#book-chapter-modal">
                        <i class="fas fa-plus plus"></i></button>
                    </button>
                </div>
            </div>
            <div class="card-body table-responsive">
                <div class="d-flex justify-content-between">
                    <div>
                        <label>Show Entries</label>
                        <select class="form-select" id="changeEntry">
                            <option value="5">5</option>
                            <option value="10">10</option>
                            <option value="25">25</option>
                            <option value="50">50</option>
                            <option value="100">100</option>
                            <option value="150">150</option>
                            <option value="200">200</option>
                            <option value="250">250</option>
                            <option value="300">300</option>
                            <option value="350">350</option>
                            <option value="400">400</option>
                            <option value="500">500</option>
                            <option value="800">800</option>
                            <option value="1000">1000</option>
                        </select>
                    </div>
                    <div>
                        <div class="table-searchbar-container">
                            <button type="button" id="searchBtn"><i class="fas fa-search"></i></button>
                            <input type="search" id="searchKeyword" placeholder="Enter keywords" class="table-searchbar">
                        </div>
                    </div>
                </div>
                <table class="table custom-table research-pagination" id="book-chapter-list">
                    <thead>
                        <th class="col-lg-1">#</th>
                        <th class="col-lg-1">Author's name</th>
                        <th class="col-lg-1">Publication year</th>
                        <th class="col-lg-1">Book title</th>
                        <th class="col-lg-1">ISBN Number</th>
                        <th class="col-lg-1">Publisher Name</th>
                        <th class="col-lg-1">Action</th>
                    </thead>
                    <% bookChapterData.forEach(function(bookChapter,index) { %>
                        <tr row="scope" data-bookChapter-id="<%- bookChapter.id %>"
                            data-page-number="<%- bookChapter.page_number %>" data-edition="<%- bookChapter.edition %>"
                            data-volume-number="<%- bookChapter.volume_number %>"
                            data-book-editor="<%- bookChapter.book_editor %>"
                            data-publisher-category="<%- bookChapter.publisher_category %>"
                            data-book-url="<%- bookChapter.book_url %>" data-doi-book-id="<%-bookChapter.doi_id %>"
                            data-number-of-nmims-authors="<%- bookChapter.number_of_nmims_authors %>"
                            data-nmims-authors="<%- bookChapter.nmims_authors %>"
                            data-nmims-campus-authors="<%- bookChapter.nmims_campus_authors %>"
                            data-nmims-school-authors="<%- bookChapter.nmims_school_authors %>"
                            data-supporting-documents="<%- bookChapter.supporting_documents %>"
                            data-chapter-title="<%- bookChapter.chapter_title %>"
                            data-editor-name="<%-bookChapter.editor_name %>">
                            <td><%- index+1 %></td>
                            <td class="author-name col-lg-1"><%- bookChapter.author_name %></td>
                            <td class="publication-year col-lg-1"><%- bookChapter.publication_year %></td>
                            <td class="book-title col-lg-1"><%- bookChapter.book_title %></td>
                            <td class="isbn-no col-lg-1"><%- bookChapter.isbn %></td>
                            <td class="publisher-name col-lg-1"><%- bookChapter.publisher_name %></td>
                            <td>
                                <label class="view" data-bookChapter-id="<%- bookChapter.id %>"><i
                                        class="fa-solid fa-eye view text-danger"
                                        data-bookChapter-id="<%- bookChapter.id %>"></i></label>
                                <label class="edit" data-bookChapter-id="<%- bookChapter.id %>"><i
                                        class="fa fa-edit edit text-danger"
                                        data-bookChapter-id="<%- bookChapter.id %>"></i></label>
                                <label class="delete" data-bookChapter-id="<%- bookChapter.id %>"><i
                                        class="fa-solid fa-trash delete text-danger"
                                        data-bookChapter-id="<%- bookChapter.id %>"></i></label>
                            </td>
                        </tr>
                        <% }); %>
                </table>
                <div class="d-flex justify-content-between">
                    <div>
                        <label>Total entries : <%- rowCount %> </label>
                        <label class="d-none" id="row-count"> <%- rowCount %> </label>
                    </div>
                    <div>
                        <button id="prevBtn" class="btn btn-primary">Previous</button>
                        <button id="nextBtn" class="btn btn-primary">Next</button>
                        <p id="pagination" class="pagination-search"></p>
                    </div>
                </div>
            </div>
        </div>
        <!--Import Modal -->
        <div class="modal fade" id="open-program-modal" tabindex="-1" aria-labelledby="open-program-modal"
            aria-hidden="true">
        </div>
        <!-- EDIT PROGRAM AND UPDATE -->
        <div class="modal fade" id="edit-program-modal" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="editModalLabel">Update Program</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div id="errorHtml"></div>
                    <div class="modal-body">
                        <div class="mb-3">
                            <label for="exampleInputEmail1" class="form-label">Program Name</label>
                            <input type="text" class="form-control" id="program_name" name="program_name">
                            <input type="hidden" class="form-control" id="hidden_id" name="hidden_id">
                        </div>
                        <div class="mb-3">
                            <label for="exampleInputPassword1" class="form-label">Program Type</label>
                            <select class="form-control" name="program_type_lid" id="program_type_lid">
                                <option value="1">Full Time</option>
                                <option value="2">Part Time</option>
                            </select>
                        </div>
    
                        <div class="mb-3">
                            <label for="abbr" class="form-label">Program Abbr</label>
                            <input type="text" class="form-control" id="abbr" name="abbr">
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        <button type="button" class="btn btn-primary updateProgram">Update</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</main>
<!-- Book Chapter Modal  form -->
<div class="modal fade " id="book-chapter-modal" tabindex="-1" role="dialog" aria-labelledby="book-chapter-modal"
    aria-hidden="true">
    <div class="modal-dialog modal-dialog-scrollable modal-lg modal-fullscreen p-5" role="document">
        <div class="modal-content modal-content-data validate-input">
            <div class="modal-header">
                <h5 class="modal-title" id="book-chapter">BOOK CHAPTER PUBLICATION </h5>
                <div class="close" data-dismiss="modal" aria-label="Close">
                    <span TYPE="button" aria-hidden="true"><i class="fas fa-times"></i></span>
                </div>
            </div>
            <div class="modal-body">
                <div class="row">
                    <!-- author's name -->
                    <div class="form-group col-lg-4 col-md-6 col-sm-12 mb-4">
                        <label for="author-first-name" class="form-label fw-bold">Author's Name</label>
                        <input type="text" name="author-name" id="author-name" data-validate="isEmpty,isAlphabeticWords,isLength:2:255" data-err-msg="This field is required and min length > 1." class="form-control" data-validate="isEmpty,isAlphabeticWords" required>
                    </div>
                    <!-- Title of chapter -->
                    <div class="form-group col-lg-4 col-md-6 col-sm-12 mb-4">
                        <label for="chapter-title" class="form-label fw-bold">Title Of Chapter</label>
                        <input type="text" name="titleOfBook" id="chapter-title" class="form-control" data-validate="isEmpty,isNotNumber,isExist,isLength:2:255" data-err-msg="This field is required and min length > 1." required>
                    </div>
                      <!-- Editor(s) names -->
                      <div class="form-group col-lg-4 col-md-6 col-sm-12 mb-4">
                        <label for="edition" class="form-label fw-bold">Editor(s) names</label>
                        <input type="text" name="case-study" id="editor-name" class="form-control" data-validate="isEmpty,isAlphaNumeric" data-err-msg="AlphaNumeric value is required." required>
                    </div>
                    <!-- Book Title -->
                    <div class="form-group col-lg-4 col-md-6 col-sm-12 mb-4">
                        <label for="book-title" class="form-label fw-bold">Book Title</label>
                        <input type="text" name="titleOfBook" id="book-title" class="form-control" data-validate="isEmpty,isNotNumber,isExist,isLength:2:255" data-err-msg="This field is required and min length > 1." required>
                    </div>
                    <!-- Edition -->
                    <div class="form-group col-lg-4 col-md-6 col-sm-12 mb-4">
                        <label for="edition" class="form-label fw-bold">Edition (if it isn't the first)</label>
                        <input type="text" name="case-study" id="edition" class="form-control" data-validate="isEmpty,isAlphaNumeric" data-err-msg="AlphaNumeric value is required." required>
                    </div>
                    <!-- Editor(s) Of The Book -->
                    <div class="form-group col-lg-4 col-md-6 col-sm-12 mb-4">
                        <label for="book-editor" class="form-label fw-bold">Editor(s) Of The Book</label>
                        <input type="text" name="editor" id="book-editor" class="form-control" data-validate="isEmpty,isAlphabeticWords,isLength:2:255" data-err-msg="This field is required and min length > 1." required>
                    </div>
                    <!-- Page numbers of the Chapter -->
                    <div class="form-group col-lg-4 col-md-6 col-sm-12 mb-4">
                        <label for="page-number" class="form-label fw-bold">Page numbers Of The Chapter</label>
                        <input type="number" name="vol" id="page-number" data-validate="isEmpty,isNumber" data-err-msg="Numeric value is required." class="form-control" required>
                    </div>
                    <!-- Publisher Name -->
                    <div class="form-group col-lg-4 col-md-6 col-sm-12 mb-4">
                        <label for="publisher-name" class="form-label fw-bold">Publisher Name</label>
                        <input type="text" name="vol" id="publisher-name" class="form-control" data-validate="isEmpty,isAlphabeticWords" data-err-msg="This field is required and min length > 1." required>
                    </div>
                   <!-- Publisher Category  -->
                   <div class="form-group col-lg-4 col-md-6 col-sm-12 mb-4">
                        <label for="publisher-category" id="publisher-category" class="form-label fw-bold mb-3">Publisher Category</label><br>
                        <div class="form-check-inline">
                            <label for="inter-national" class="form-check-label">
                                <input type="radio" class="form-check-input" id="inter-national" name="publisher-category" value="International"> International
                            </label>
                        </div>
                        <div class="form-check-inline">
                            <label for="national" class="form-check-label">
                                <input type="radio" class="form-check-input" id="national" name="publisher-category" value="National" checked> National
                            </label>
                        </div>
                    </div>
                    <!-- Publication Year -->
                    <div class="form-group col-lg-4 col-md-6 col-sm-12 mb-4">
                        <label for="publication-year" class="form-label fw-bold">Publication Year</label>
                        <input type="number" name="Year" id="publication-year" class="form-control" data-validate="isEmpty,isNumber,isValidYear" data-err-msg="Publication year required." required>
                    </div>
                    <!-- URL of the book publication -->
                    <div class="form-group col-lg-4 col-md-6 col-sm-12 mb-4">
                        <label for="book-url" class="form-label fw-bold">URL of book</label>
                        <input type="text" name="URL" id="book-url" class="form-control" data-validate="isEmpty,isNotNumber.isExist,isLength:2:255" data-err-msg="This field is required and min length > 1." required>
                    </div>
                     <!-- ISBN Number -->
                    <div class="form-group col-lg-4 col-md-6 col-sm-12 mb-4">
                        <label for="ISBN-Number" class="form-label fw-bold">ISBN Number</label>
                        <input type="number" name="ISBN-Number" id="isbn-no" class="form-control" data-validate="isEmpty,isNumber" data-err-msg="Numeric value is required" required>
                    </div>
                     <!-- DOI of Book Chapter -->
                    <div class="form-group col-lg-4 col-md-6 col-sm-12 mb-4">
                        <label for="doi-book-id" class="form-label fw-bold">DOI ID Of Book Chapter</label>
                        <input type="number" name="doi-book-id" id="doi-book-id" class="form-control">
                    </div>
                     <!-- volume number -->
                    <div class="form-group col-lg-4 col-md-6 col-sm-12 mb-4">
                        <label for="volume-number" class="form-label fw-bold">Volume Number</label>
                        <input type="number" name="volume-number" id="volume-number" class="form-control" data-validate="isEmpty,isNumber" data-err-msg="numeric value is required." required>
                    </div>
                    <!-- No. of NMIMS Authors -->
                    <div class="form-group col-lg-4 col-md-6 col-sm-12 mb-4">
                        <label for="number-of-nmims-authors" class="form-label fw-bold ">No. of NMIMS Authors</label>
                        <input type="number" name="nmims-authors" id="number-of-nmims-authors" class="form-control" data-validate="isEmpty,isNumber" data-err-msg="numeric value is required." required/>
                    </div>
                    <!-- Name of NMIMS Authors -->
                    <div class="form-group col-lg-4 col-md-6 col-sm-12 mb-4">
                        <label for="nmims-authors" class="form-label fw-bold ">Name of NMIMS Authors</label>
                        <input type="text" name="nmims-authors" id="nmims-authors" class="form-control" data-validate="isEmpty,isAlphabeticWords,isLength:2:255"  data-err-msg="This field is required and min length > 1." required/>
                    </div>
                    <!-- NMIMS Campus - Author -->
                    <div class="form-group col-lg-4 col-md-6 col-sm-12 mb-4">
                        <label for="nmims-campus-authors" class="form-label fw-bold ">NMIMS Campus Author</label>
                        <input type="url" name="nmims-campus-authors" id="nmims-campus-authors" placeholder="NMIMS Campus Author" data-validate="isEmpty,isAlphabeticWords,isLength:2:255" class="form-control"  data-err-msg="This field is required and min length > 1." required/>
                    </div>
                    <!--NMIMS School - Author-->
                    <div class="form-group col-lg-4 col-md-6 col-sm-12 mb-4">
                        <label for="nmims-school-authors" class="form-label fw-bold ">NMIMS School Author</label>
                        <input type="url" name="nmimsSchoolAuthors" id="nmims-school-authors" data-validate="isEmpty,isAlphabeticWords,isLength:2:255"  data-err-msg="This field is required and min length > 1." class="form-control " required/>
                    </div>
                    <!-- Upload Supporting Documents-->
                    <div class="form-group col-lg-6 col-md-8 col-sm-12 mb-4">
                        <div class="col-lg-6 col-md-8 col-sm-12">
                            <label for="supporting-documents" class="form-label fw-bold ">
                                Upload Supporting Documents
                            </label>
                            <div class="d-flex">
                                <input type="file" name="researchSupportingDocument" id="supporting-documents"data-validate="isEmpty,isExist,isFile" data-err-msg="File is required."
                                    class="col-md-12 form-control " required multiple>
                                    <button class="download-btn download-file" id="book-chapter-edit"><i class="fas fa-download text-danger"></i></button>
                            </div>
                        </div>
                    </div>
                    <div class="form-group col-lg-6 col-md-2 col-sm-12 mb-4">
                        <div id="file-view" class="h-10 w-10">
                        </div>
                    </div>
                </div>
            </div>
            <!-- footer button -->
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary d-none" id="submit-btn">Submit</button>
                <button type="button" class="btn btn-primary d-none" id="update-btn">Update</button>
            </div>
        </div>
    </div>
</div>
<!--   BOOK CHAPTER  publication view modal -->
<div class="modal fade " id="book-chapter-view" tabindex="-1" role="dialog" aria-labelledby="book-chapter-modal"
    aria-hidden="true">
    <div class="modal-dialog modal-dialog-scrollable modal-lg modal-fullscreen p-5" role="document">
        <div class="modal-content modal-content-data">
            <div class="modal-header">
                <h5 class="modal-title" id="book-chapter">BOOK CHAPTER PUBLICATION </h5>
                <div class="close" data-dismiss="modal" aria-label="Close">
                    <span TYPE="button" aria-hidden="true"><i class="fas fa-times"></i></span>
                </div>
            </div>
            <div class="modal-body">
                <div class="row">
                    <!-- author's first name -->
                    <div class="col-lg-4 col-md-6  col-sm-12 p-3">
                        <div class="box">
                            <div class="task-sub-title sub-title-text">Author's Name :</div>
                            <label class="view-content" id="view-first-name"></label>
                        </div>
                    </div>
                    <!-- Title of case study -->
                    <div class="col-lg-4 col-md-6  col-sm-12 p-3">
                        <div class="box">
                            <div class="task-sub-title sub-title-text">Title Of Book :</div>
                            <label class="view-content" id="view-book-title"></label>
                        </div>
                    </div>
                    <!-- Edition -->
                    <div class="col-lg-4 col-md-6  col-sm-12 p-3">
                        <div class="box">
                            <div class="task-sub-title sub-title-text">Edition :</div>
                            <label class="view-content" id="view-edition"></label>
                        </div>
                    </div>
                    <!-- Editor name -->
                    <div class="col-lg-4 col-md-6  col-sm-12 p-3">
                        <div class="box">
                            <div class="task-sub-title sub-title-text">Editor Name :</div>
                            <label class="view-content" id="view-editor-name"></label>
                        </div>
                    </div>
                      <!--book  Editor name -->
                      <div class="col-lg-4 col-md-6  col-sm-12 p-3">
                        <div class="box">
                            <div class="task-sub-title sub-title-text">Book Editor :</div>
                            <label class="view-content" id="view-book-editor"></label>
                        </div>
                    </div>
                    <!-- chapter title -->
                    <div class="col-lg-4 col-md-6  col-sm-12 p-3">
                        <div class="box">
                            <div class="task-sub-title sub-title-text">Chapter Title :</div>
                            <label class="view-content" id="view-chapter-title"></label>
                        </div>
                    </div>
                    <!-- publisher category -->
                    <div class="col-lg-4 col-md-6  col-sm-12 p-3">
                        <div class="box">
                            <div class="task-sub-title sub-title-text">Publisher Category :</div>
                            <label class="view-content" id="view-publisher-category"></label>
                        </div>
                    </div>
                    <!-- page number -->
                    <div class="col-lg-4 col-md-6  col-sm-12 p-3">
                        <div class="box">
                            <div class="task-sub-title sub-title-text">Page Number :</div>
                            <label class="view-content" id="view-page-number"></label>
                        </div>
                    </div>
                    <!-- doi book id -->
                    <div class="col-lg-4 col-md-6  col-sm-12 p-3 doi-book-id d-none">
                        <div class="box">
                            <div class="task-sub-title sub-title-text">DOI ID Of Book :</div>
                            <label class="view-content" id="view-doi-book-id"></label>
                        </div>
                    </div>
                    <!-- Publisher Name -->
                    <div class="col-lg-4 col-md-6  col-sm-12 p-3">
                        <div class="box">
                            <div class="task-sub-title sub-title-text">Publisher Name :</div>
                            <label class="view-content" id="view-publisher-name"></label>
                        </div>
                    </div>
            
                    <!-- Publication Year -->
                    <div class="col-lg-4 col-md-6  col-sm-12 p-3">
                        <div class="box">
                            <div class="task-sub-title sub-title-text">Publication Year :</div>
                            <label class="view-content" id="view-publication-year"></label>
                        </div>
                    </div>
                    <!-- ISBN Number  -->
                    <div class="col-lg-4 col-md-6  col-sm-12 p-3">
                        <div class="box">
                            <div class="task-sub-title sub-title-text">ISBN Number :</div>
                            <label class="view-content" id="view-isbn-no"></label>
                        </div>
                    </div>
                    <!-- URL Of Book  -->
                    <div class="col-lg-4 col-md-6  col-sm-12 p-3">
                        <div class="box">
                            <div class="task-sub-title sub-title-text">URL Of Book :</div>
                            <label class="view-content" id="view-book-url"></label>
                        </div>
                    </div>
                    <!-- Number of nmims authors -->
                    <div class="col-lg-4 col-md-6  col-sm-12 p-3">
                        <div class="box">
                            <div class="task-sub-title sub-title-text"> No. Of NMIMS Authors :</div>
                            <label class="view-content" id="view-no-of-nmims-authors"></label>
                        </div>
                    </div>
                    <!-- Publication Year -->
                    <div class="col-lg-4 col-md-6  col-sm-12 p-3">
                        <div class="box">
                            <div class="task-sub-title sub-title-text"> Name Of NMIMS Auhthors :</div>
                            <label class="view-content" id="view-nmims-authors"></label>
                        </div>
                    </div>
                    <!-- NMIMS CAMPUS AUTHOR -->
                    <div class="col-lg-4 col-md-6  col-sm-12 p-3">
                        <div class="box">
                            <div class="task-sub-title sub-title-text">NMIMS Campus Authors:</div>
                            <label class="view-content" id="view-nmims-campus-authors"></label>
                        </div>
                    </div>
                    <!-- NMIMS SCHOOL AUTHOR -->
                    <div class="col-lg-4 col-md-6  col-sm-12 p-3">
                        <div class="box">
                            <div class="task-sub-title sub-title-text">NMIMS School Authors :</div>
                            <label class="view-content" id="view-nmims-school-authors"></label>
                        </div>
                    </div>
                    <!-- Supporting Document -->
                    <div class="col-lg-4 col-md-6  col-sm-12 p-3">
                        <div class="box">
                            <div class="task-sub-title sub-title-text"><button class="btn btn-primary h-10 w-10 download-file" id="book-chapter-file-view">
                                    <i class="fas fa-download text-danger"></i> Download supportingDocuments
                                </button>
                            </div>
                            <label class="view-content" id="view-support-document"></label>
                        </div>
                    </div>
                </div>
            </div>
            <!-- footer button -->
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
<!-- inline javascript -->
<script>
    //   for index icrement
    const rowCount = document.getElementById('row-count');
    let rowIndex = rowCount.innerText;
    let indexValue = parseInt(rowIndex, 10);
    const doiIdBookDisplay = document.querySelector('.doi-book-id')
    
    const bookChapterList = document.getElementById('book-chapter-list');
    const submitBtn = document.getElementById('submit-btn');
    const updateBtn = document.getElementById('update-btn');
    const addnewBookChapter = document.getElementById('book-chapter-add-modal');
    let bookChapterId , bookChapterRowToBeUpdated;
    // const fileView = document.getElementById('file-view');
    // const downloadLink = document.getElementById('downloadLink');
   
    addnewBookChapter.addEventListener('click' , function(event) {
        console.log('clikeddd')
        if(event.target.tagName === 'BUTTON' && event.target.classList.contains('add-modal') || event.target.classList.contains('plus')){
            updateBtn.classList.add('d-none');
            submitBtn.classList.remove('d-none');
            // fileView.classList.add('d-none');
            // modalImage.classList.add('d-none');
            // making download button d-none
            const bookChapterDataFiles = document.querySelector('#book-chapter-edit');
            bookChapterDataFiles.classList.add('d-none');

            const authorName = document.getElementById('author-name');
            const bookTitle = document.getElementById('book-title');
            const edition = document.getElementById('edition');
            const editorName = document.getElementById('editor-name');
            const chapterTitle= document.getElementById('chapter-title');
            const isbnNo = document.getElementById('isbn-no');
            const volumeNumber = document.getElementById('volume-number');
            const publisherCategoryNational = document.getElementById('national');
            const publisherCategoryInternational = document.getElementById('inter-national');
            const pageNumber = document.getElementById('page-number');
            const publisherName = document.getElementById('publisher-name');
            const publicationYear = document.getElementById('publication-year');
            const bookUrl = document.getElementById('book-url');
            const doiBookId = document.getElementById('doi-book-id');
            const numberOfNmimsAuthors = document.getElementById('number-of-nmims-authors');
            const nmimsAuthors = document.getElementById('nmims-authors');
            const BookEditor = document.getElementById('book-editor')
            const nmimsCampusAuthors = document.getElementById('nmims-campus-authors');
            const nmimsSchoolAuthors = document.getElementById('nmims-school-authors');
            const supportingDocuments = document.querySelector('input[type="file"]');

            // making input fields empty
            authorName.value = '';
            bookTitle.value = '';
            edition.value = '';
            editorName.value = '';
            chapterTitle.value = ''; 
            isbnNo.value = '';
            volumeNumber.value = '';
            pageNumber.value = '';
            publisherName.value = '';
            publicationYear.value = '';
            bookUrl.value = '';
            doiBookId.value = '';
            BookEditor.value = '';
            numberOfNmimsAuthors.value = '';
            nmimsAuthors.value = '';
            nmimsCampusAuthors.value = '';
            nmimsSchoolAuthors.value = '';
            supportingDocuments.value = '';
        }
    })
    
    const insertbookChapter = async(url) =>{
        const bookChapter = new FormData();
        const authorName = document.getElementById('author-name').value;
        const bookTitle = document.getElementById('book-title').value;
        const edition = document.getElementById('edition').value;
        const isbnNo = document.getElementById('isbn-no').value;
        const editorName = document.getElementById('editor-name').value;
        const bookEditor = document.getElementById('book-editor').value;
        const chapterTitle = document.getElementById('chapter-title').value;
        const volumeNumber = document.getElementById('volume-number').value;
        const publisherCategory = document.querySelector('input[name="publisher-category"]:checked').value;
        const pageNumber = document.getElementById('page-number').value;
        const publisherName = document.getElementById('publisher-name').value;
        const publicationYear = document.getElementById('publication-year').value;
        const bookUrl = document.getElementById('book-url').value;
        const doiBookId = document.getElementById('doi-book-id').value;
        const numberOfNmimsAuthors = document.getElementById('number-of-nmims-authors').value;
        const nmimsAuthors = document.getElementById('nmims-authors').value;
        const nmimsCampusAuthors = document.getElementById('nmims-campus-authors').value;
        const nmimsSchoolAuthors = document.getElementById('nmims-school-authors').value;
        // supporting data files and  appending value
        const supportingDocuments = document.getElementById('supporting-documents');
        const bookchapterFilesData = supportingDocuments.files;
        if(bookchapterFilesData){
            for(let i = 0; i<= bookchapterFilesData.length - 1; i++ ){
                if(bookchapterFilesData && bookchapterFilesData[i].name){
                    console.log('bookchapterFilesData[i].name ===>>>>', bookchapterFilesData[i].name);
                    bookChapter.append('researchSupportingDocument' , bookchapterFilesData[i]);

                }
            }
        }

        bookChapter.append('authorName' , authorName);
        bookChapter.append('bookTitle' , bookTitle);
        bookChapter.append('edition' , edition);
        bookChapter.append('isbnNo' , isbnNo);
        bookChapter.append('editorName' , editorName);
        bookChapter.append('bookEditor' , bookEditor);
        bookChapter.append('chapterTitle' , chapterTitle);
        bookChapter.append('volumeNumber' , volumeNumber);
        bookChapter.append('publisherCategory' , publisherCategory);;
        bookChapter.append('pageNumber' , pageNumber);
        bookChapter.append('publisherName' , publisherName);
        bookChapter.append('publicationYear' , publicationYear);
        bookChapter.append('bookUrl' , bookUrl);
        bookChapter.append('doiBookId' , doiBookId);
        bookChapter.append('numberOfNmimsAuthors' , numberOfNmimsAuthors);
        bookChapter.append('nmimsAuthors' , nmimsAuthors);
        bookChapter.append('nmimsCampusAuthors' , nmimsCampusAuthors);
        bookChapter.append('nmimsSchoolAuthors' , nmimsSchoolAuthors);

        fetch(url , {
            method : 'POST',
            body : bookChapter
        })
        .then((result) => {
            return result.json()
        })
        .then((data) => {
           if(data.status === 'Done'){
            console.log('data ==>>', data)
            const message = data.message;
            console.log('message ====>>>>>', message)
            const newBookChapter = document.createElement('tr');
            newBookChapter.setAttribute('data-page-number' , data.bookChapter.pageNumber);
            newBookChapter.setAttribute('data-edition' , data.bookChapter.edition);
            newBookChapter.setAttribute('data-editor-name' , data.bookChapter.editorName);
            newBookChapter.setAttribute('data-book-editor' , data.bookChapter.bookEditor);
            newBookChapter.setAttribute('data-chapter-title' , data.bookChapter.chapterTitle);
            newBookChapter.setAttribute('data-volume-number' , data.bookChapter.volumeNumber);
            newBookChapter.setAttribute('data-publisher-category' , data.bookChapter.publisherCategory);
            newBookChapter.setAttribute('data-book-url' , data.bookChapter.bookUrl);
            newBookChapter.setAttribute('data-doi-book-id' , data.bookChapter.doiBookId);
            newBookChapter.setAttribute('data-number-of-nmims-authors' , data.bookChapter.numberOfNmimsAuthors);
            newBookChapter.setAttribute('data-nmims-authors' , data.bookChapter.nmimsAuthors);
            newBookChapter.setAttribute('data-nmims-campus-authors' , data.bookChapter.nmimsCampusAuthors);
            newBookChapter.setAttribute('data-nmims-school-authors' , data.bookChapter.nmimsSchoolAuthors);
            newBookChapter.setAttribute('data-supporting-documents' , data.bookChapter.supportingDocuments);
            newBookChapter.innerHTML = `
                        <td >${data.bookChapterId}</td>
                            <td class="author-name">${data.bookChapter.authorName}</td>
                            <td class="publication-year">${data.bookChapter.publicationYear}</td>
                            <td class="book-title">${data.bookChapter.bookTitle}</td>
                            <td class="isbn-no">${data.bookChapter.isbnNo}</td>
                            <td class="publisher-name">${data.bookChapter.publisherName}</td>
                            <td>
                                <label class="view" data-bookChapter-id="${data.bookChapterId}"><i class="fa-solid fa-eye view text-danger"
                                    data-bookChapter-id="${data.bookChapterId}"></i></label>
                                <label class="edit"data-bookChapter-id="${data.bookChapterId}"><i class="fa fa-edit edit text-danger"
                                    data-bookChapter-id="${data.bookChapterId}"></i></label>
                                <label class="delete"data-bookChapter-id="${data.bookChapterId}"><i class="fa-solid fa-trash delete text-danger"
                                    data-bookChapter-id="${data.bookChapterId}"></i></label>
                            </td> `;
            bookChapterList.append(newBookChapter);
            Swal.fire({
							position: "top-center",
							icon: "success",
							title: `${message}`,
							showConfirmButton: false,
							timer: 1500
						});
            $('#book-chapter-modal').modal('hide');
           }
           else{
            const message = data.message;
            console.log('data and message ===>>>', data, message)
            Swal.fire({
							position: "top-center",
							icon: "error",
							title: `${data.status}`,
							color : "red",
							with : "20PX",
							html: `<span style="color: red;">${data.message}</span>`,
							showConfirmButton: false,
						});
						
           }
        })
        .catch((error) => {
            Swal.fire({
							position: "top-center",
							icon: "error",
							title: `${error}`,
							color : "red",
						});
        })
    }
    
    submitBtn.addEventListener('click', async function () {
            const isValid = validateRequiredFormFields(submitBtn);
            if (isValid) {
                await insertbookChapter('<%- BASE_URL %>research/book-publication-main/book-chapter-publication/insert');
                indexValue += 1
            }
            else {
                Swal.fire({
							position: "top-center",
							icon: "error",
							title: "Validation Failed",
							color : "red",
							showConfirmButton: false,
						});
            }
    })

    bookChapterList.addEventListener('click', (event) => {
            // for updation
            if (event.target.classList.contains('edit')) {
                console.log('clickeddd');
                removeErrorMsg();
                bookChapterRowToBeUpdated = event.target.closest('tr');
                // console.log('bookChapterRowToBeUpdated ==>>',bookChapterRowToBeUpdated)
                setFileNameAttributeToBeDownload(bookChapterRowToBeUpdated)
                bookChapterId = event.target.getAttribute('data-bookchapter-id');
                console.log('bookChapterId ==>>', bookChapterId);
                $('#book-chapter-modal').modal('show');
                updateBtn.classList.remove('d-none');
                submitBtn.classList.add('d-none');
                // fileView.classList.remove('d-none');
                // modalImage.classList.remove('d-none');

                const authorName = document.getElementById('author-name');
                const bookTitle = document.getElementById('book-title');
                const edition = document.getElementById('edition');
                const editorName = document.getElementById('editor-name');
                const bookEditor = document.getElementById('book-editor');
                const chapterTitle = document.getElementById('chapter-title');
                const isbnNo = document.getElementById('isbn-no');
                const volumeNumber = document.getElementById('volume-number');
                const publisherCategoryNational = document.getElementById('national');
                const publisherCategoryInternational = document.getElementById('inter-national');
                const pageNumber = document.getElementById('page-number');
                const publisherName = document.getElementById('publisher-name');
                const publicationYear = document.getElementById('publication-year');
                const bookUrl = document.getElementById('book-url');
                const doiBookId = document.getElementById('doi-book-id');
                const numberOfNmimsAuthors = document.getElementById('number-of-nmims-authors');
                const nmimsAuthors = document.getElementById('nmims-authors');
                const nmimsCampusAuthors = document.getElementById('nmims-campus-authors');
                const nmimsSchoolAuthors = document.getElementById('nmims-school-authors');
                const supportingDocuments = bookChapterRowToBeUpdated.getAttribute('data-supporting-documents');
                // assigning related row data value
                authorName.value = bookChapterRowToBeUpdated.querySelector('.author-name').innerText;
                bookTitle.value = bookChapterRowToBeUpdated.querySelector('.book-title').innerText;
                edition.value = bookChapterRowToBeUpdated.getAttribute('data-edition');
                editorName.value = bookChapterRowToBeUpdated.getAttribute('data-editor-name');
                bookEditor.value = bookChapterRowToBeUpdated.getAttribute('data-book-editor');
                chapterTitle.value = bookChapterRowToBeUpdated.getAttribute('data-chapter-title');
                publisherName.value = bookChapterRowToBeUpdated.querySelector('.publisher-name').innerText;
                isbnNo.value = bookChapterRowToBeUpdated.querySelector('.isbn-no').innerText;
                volumeNumber.value = bookChapterRowToBeUpdated.getAttribute('data-volume-number');

                const publisherCategory = bookChapterRowToBeUpdated.getAttribute('data-publisher-category');
                if (publisherCategory === 'National') {
                    publisherCategoryNational.checked = true;
                }
                else {
                    publisherCategoryInternational.checked = true;
                }
                pageNumber.value = bookChapterRowToBeUpdated.getAttribute('data-page-number');
                publicationYear.value = bookChapterRowToBeUpdated.querySelector('.publication-year').innerText;
                bookUrl.value = bookChapterRowToBeUpdated.getAttribute('data-book-url');
                doiBookId.value = bookChapterRowToBeUpdated.getAttribute('data-doi-book-id');
                numberOfNmimsAuthors.value = bookChapterRowToBeUpdated.getAttribute('data-number-of-nmims-authors');
                nmimsAuthors.value = bookChapterRowToBeUpdated.getAttribute('data-nmims-authors');
                nmimsCampusAuthors.value = bookChapterRowToBeUpdated.getAttribute('data-nmims-campus-authors');
                nmimsSchoolAuthors.value = bookChapterRowToBeUpdated.getAttribute('data-nmims-school-authors');
                supportingDocuments.textContent = bookChapterRowToBeUpdated.getAttribute('data-supporting-documents');
            };

            //  for delete book chapter   
            if (event.target.classList.contains('delete')) {
                console.log('clickedddd');
                const bookChapterPublicatRowToBeDeleted = event.target.closest('tr');
                bookChapterId = event.target.getAttribute('data-bookChapter-id');
                console.log('ID ==>>', bookChapterId);
                let confirmDelete = "Do you want to delete the Book  Publication?";
                if (confirmDelete) {
                    Swal.fire({
                        title: "Are you sure?",
                        text: "You won't be able to revert this!",
                        icon: "warning",
                        showCancelButton: true,
                        confirmButtonColor: "#3085d6",
                        cancelButtonColor: "#d33",
                        confirmButtonText: "Yes, delete it!"
                    }).then((result) => {
                        if (result.isConfirmed) {
                            // Execute fetch request here after confirmation
                            fetch('<%- BASE_URL %>research/book-publication-main/book-chapter-publication/delete', {
                                method: 'POST',
                                headers: {
                                    'content-type': 'application/json'
                                },
                                body: JSON.stringify({ bookChapterId })
                            })
                                .then((result) => result.json())
                                .then((data) => {
                                    if (data.status === 'Done') {
                                        console.log('data ==>>', data);
                                        // Assuming bookPublicatRowToBeDeleted is correctly defined earlier in your code
                                        bookChapterPublicatRowToBeDeleted.remove();
                                        Swal.fire({
                                            title: "Deleted!",
                                            text: `${data.message}`,
                                            icon: "success"
                                        }).then(() => {
                                            location.reload();
                                        });
                                    }
                                else{
                                    Swal.fire({
                                        position: "top-center",
                                        icon: "error",
                                        title: `${data.errorCode}`,
                                        color : "red",
                                        with : "20PX",
                                        html: `<span style="color: red;">${data.message}</span>`,
                                        showConfirmButton: false,
                                    });
                                }
                                })
                                .catch((error) => {
                                    console.error('Error:', error);
                                    Swal.fire({
                                        position: "top-center",
                                        icon: "error",
                                        title: `${error}`,
                                        color : "red"
                                    });

                                });
                        }
                    });
                }
                else {
                    return
                }
            }

            //  for  book chapter view
            if (event.target.classList.contains('view')) {
                console.log('clickedddd');
                const bookChapterRowToBeViewed = event.target.closest('tr');
                bookChapterId = event.target.getAttribute('data-bookChapter-id');
                console.log('ID ==>>', bookChapterId);
                $('#book-chapter-view').modal('show');
                const viewauthorName = document.getElementById('view-first-name');
                const viewBookTitle = document.getElementById('view-book-title');
                const viewEditorName = document.getElementById('view-editor-name');
                const viewBookEditor = document.getElementById('view-book-editor');
                const viewChapterTitle = document.getElementById('view-chapter-title');
                const viewEdition = document.getElementById('view-edition');
                const viewIsbnNo = document.getElementById('view-isbn-no');
                const viewVolumeNumber = document.getElementById('view-volume-number');
                const viewPublisherCategory = document.getElementById('view-publisher-category');
                const viewPageNumber = document.getElementById('view-page-number');
                const viewPublisherName = document.getElementById('view-publisher-name');
                const viewPublicationYear = document.getElementById('view-publication-year');
                const viewBookUrl = document.getElementById('view-book-url');
                const viewDoiBookId = document.getElementById('view-doi-book-id');
                const viewNumberOfNmimsAuthors = document.getElementById('view-no-of-nmims-authors');
                const viewNmimsAuthors = document.getElementById('view-nmims-authors');
                const viewNmimsCampusAuthors = document.getElementById('view-nmims-campus-authors');
                const viewNmimsSchoolAuthors = document.getElementById('view-nmims-school-authors');
                const viewSupportingDocuments = document.getElementById('view-support-document');

                fetch('<%- BASE_URL %>research/book-publication-main/book-chapter-publication/view', {
                    method: 'POST',
                    headers: {
                        'content-type': 'application/json'
                    },
                    body: JSON.stringify({ bookChapterId })
                })
                    .then((result) => {
                        return result.json()
                    })
                    .then((data) => {
                        if (data.status === 'done') {
                            console.log('data ==>>', data);
                            setFileNameInButtons(data);
                            viewauthorName.innerText = data.bookChapterView.author_name;
                            viewBookTitle.innerText = data.bookChapterView.book_title;
                            viewEdition.innerText = data.bookChapterView.edition;
                            viewEditorName.innerText = data.bookChapterView.editor_name;
                            viewBookEditor.innerText = data.bookChapterView.book_editor;
                            viewChapterTitle.innerText = data.bookChapterView.chapter_title;
                            viewIsbnNo.innerText = data.bookChapterView.isbn;
                            viewPublisherCategory.innerText = data.bookChapterView.publisher_category
                            viewPageNumber.innerText = data.bookChapterView.page_number;
                            viewPublisherName.innerText = data.bookChapterView.publisher_name;
                            viewPublicationYear.innerText = data.bookChapterView.publication_year;
                            viewBookUrl.innerText = data.bookChapterView.book_url;
                            if(!data.bookChapterView.doi_id){
                                doiIdBookDisplay.classList.add('d-none')
                            }else{
                                doiIdBookDisplay.classList.remove('d-none');
                            }
                            viewDoiBookId.innerText = data.bookChapterView.doi_id;
                            viewNumberOfNmimsAuthors.innerText = data.bookChapterView.number_of_nmims_authors;
                            viewNmimsAuthors.innerText = data.bookChapterView.nmims_authors;
                            viewNmimsCampusAuthors.innerText = data.bookChapterView.nmims_campus_authors;
                            viewNmimsSchoolAuthors.innerText = data.bookChapterView.nmims_school_authors;
                            viewSupportingDocuments.innerText = data.bookChapterView.supporting_documents;
                        }

                    })
            }
        });
        
    // for updating existing value
    const updateBookChapter = async (url) => {
        const updatedBookChapter = new FormData();
        const updatedAuthorName = document.getElementById('author-name').value;
        const updatedBookTitle = document.getElementById('book-title').value;
        const updatedEdition = document.getElementById('edition').value;
        const updatedIsbnNo = document.getElementById('isbn-no').value;
        const updatedEditorName = document.getElementById('editor-name').value;
        const updatedBookEditor = document.getElementById('book-editor').value;
        const updatedChapterTitle = document.getElementById('chapter-title').value;
        const updatedVolumeNumber = document.getElementById('volume-number').value;
        const updatedPublisherCategory = document.querySelector('input[name="publisher-category"]:checked').value;
        const updatedPageNumber = document.getElementById('page-number').value;
        const updatedPublisherName = document.getElementById('publisher-name').value;
        const updatedPublicationYear = document.getElementById('publication-year').value;
        const updatedBookUrl = document.getElementById('book-url').value;
        const updatedDoiBookId = document.getElementById('doi-book-id').value;
        const updatedNumberOfNmimsAuthors = document.getElementById('number-of-nmims-authors').value;
        const updatedNmimsAuthors = document.getElementById('nmims-authors').value;
        const updatedNmimsCampusAuthors = document.getElementById('nmims-campus-authors').value;
        const updatedNmimsSchoolAuthors = document.getElementById('nmims-school-authors').value;
        // for multiple files uploading
        const updatedDocuments = document.getElementById('supporting-documents');
        let updatedBookchapterDataFiles = updatedDocuments.files;
        if(updatedBookchapterDataFiles.length > 0){
            for(let i = 0; i <= updatedBookchapterDataFiles.length - 1; i++ ){
                console.log('file name ==>>>', updatedBookchapterDataFiles[i].name);
                updatedBookChapter.append('researchSupportingDocument' , updatedBookchapterDataFiles[i]);
            }
        }
        else{
            updatedBookchapterDataFiles = null;
            updatedBookChapter.append('researchSupportingDocument' , updatedBookchapterDataFiles);
         }
        updatedBookChapter.append('bookChapterId' , bookChapterId);
        updatedBookChapter.append('authorName' , updatedAuthorName);
        updatedBookChapter.append('bookTitle' , updatedBookTitle);
        updatedBookChapter.append('edition' , updatedEdition);
        updatedBookChapter.append('editorName' ,updatedEditorName);
        updatedBookChapter.append('bookEditor' ,updatedBookEditor);
        updatedBookChapter.append('chapterTitle' , updatedChapterTitle);
        updatedBookChapter.append('isbnNo' , updatedIsbnNo);
        updatedBookChapter.append('volumeNumber' , updatedVolumeNumber);
        updatedBookChapter.append('publisherCategory' , updatedPublisherCategory);
        updatedBookChapter.append('pageNumber' , updatedPageNumber);
        updatedBookChapter.append('publisherName' , updatedPublisherName);
        updatedBookChapter.append('publicationYear' , updatedPublicationYear);
        updatedBookChapter.append('bookUrl' , updatedBookUrl);
        updatedBookChapter.append('doiBookId' , updatedDoiBookId);
        updatedBookChapter.append('numberOfNmimsAuthors' , updatedNumberOfNmimsAuthors);
        updatedBookChapter.append('nmimsAuthors' , updatedNmimsAuthors);
        updatedBookChapter.append('nmimsCampusAuthors' , updatedNmimsCampusAuthors);
        updatedBookChapter.append('nmimsSchoolAuthors' , updatedNmimsSchoolAuthors);
      
        fetch(url, {
            method : 'POST',
            body : updatedBookChapter
        })
        .then((result) => {
            return result.json()
        })
        .then((data) => {
            if(data.status === 'Done'){
                console.log('data ==>>', data);
                const message = data.message;
                console.log('yes data inside message ===>>>', message)
                bookChapterRowToBeUpdated.setAttribute('data-page-number' , data.updatedBookChapter.pageNumber);
                bookChapterRowToBeUpdated.setAttribute('data-edition' , data.updatedBookChapter.edition);
                bookChapterRowToBeUpdated.setAttribute('data-volume-number' , data.updatedBookChapter.volumeNumber);
                bookChapterRowToBeUpdated.setAttribute('data-publisher-category' , data.updatedBookChapter.publisherCategory);
                bookChapterRowToBeUpdated.setAttribute('data-editor-name' , data.updatedBookChapter.editorName);
                bookChapterRowToBeUpdated.setAttribute('data-book-editor' , data.updatedBookChapter.bookEditor);
                bookChapterRowToBeUpdated.setAttribute('data-chapter-title' , data.updatedBookChapter.chapterTitle);
                bookChapterRowToBeUpdated.setAttribute('data-book-url' , data.updatedBookChapter.bookUrl);
                bookChapterRowToBeUpdated.setAttribute('data-doi-book-id' , data.updatedBookChapter.doiBookId);
                bookChapterRowToBeUpdated.setAttribute('data-number-of-nmims-authors' , data.updatedBookChapter.numberOfNmimsAuthors);
                bookChapterRowToBeUpdated.setAttribute('data-nmims-authors' , data.updatedBookChapter.nmimsAuthors);
                bookChapterRowToBeUpdated.setAttribute('data-nmims-campus-authors' , data.updatedBookChapter.nmimsCampusAuthors);
                bookChapterRowToBeUpdated.setAttribute('data-nmims-school-authors' , data.updatedBookChapter.nmimsSchoolAuthors);
                if(updatedBookchapterDataFiles){
                    bookChapterRowToBeUpdated.setAttribute('data-supporting-documents' , data.updatedFile);
                }
                bookChapterRowToBeUpdated.querySelector('.author-name').innerText = data.updatedBookChapter.authorName;
                bookChapterRowToBeUpdated.querySelector('.book-title').innerText = data.updatedBookChapter.bookTitle;
                bookChapterRowToBeUpdated.querySelector('.publisher-name').innerText = data.updatedBookChapter.publisherName;
                bookChapterRowToBeUpdated.querySelector('.isbn-no').innerText = data.updatedBookChapter.isbnNo;
                bookChapterRowToBeUpdated.querySelector('.publication-year').innerText = data.updatedBookChapter.publicationYear;
                $('#book-chapter-modal').modal('hide');
                Swal.fire({
							position: "top-center",
							icon: "success",
							title: `${data.message}`,
							showConfirmButton: false,
							timer: 1500
						});
                // $('#book-chapter-modal').modal('hide');
                
                }
                else {
                    Swal.fire({
							position: "top-center",
							icon: "error",
							title: `${data.errorCode}`,
							color : "red",
							with : "20PX",
							html: `<span style="color: red;">${data.message}</span>`,
							showConfirmButton: false,
						});
                }
                
            })
            .catch((error) => {
                console.log('Eroor ::', error);
                Swal.fire({
							position: "top-center",
							icon: "error",
							title: "Updation Failed",
							color : "red",
							with : "20PX",
							html: `<span style="color: red;">${error}</span>`,
							showConfirmButton: false,
						});
            })
    }

    updateBtn.addEventListener('click' , async() => {
        formGroup = updateBtn.closest('.validate-input')
        console.log("formGroup::::::::", formGroup)
        formGroup.querySelectorAll('input[type="file"]')?.forEach(elm => {
            console.log("elm:::::::::", elm);
            elm.removeAttribute('data-validate')
        })
        const isValid = validateRequiredFormFields(updateBtn);
            if (isValid) {
                await updateBookChapter('<%- BASE_URL %>research/book-publication-main/book-chapter-publication/update');
            }
            else {
                Swal.fire({
							position: "top-center",
							icon: "error",
							title: "Validation Failed",
							color : "red",
							showConfirmButton: false,
						});
            }
    })

    function setFileNameInButtons(data) {
        console.log('data ==>>', data);
        const bookChapterFileView = document.getElementById('book-chapter-file-view');
        bookChapterFileView.setAttribute('data-filename', data.bookChapterView.supporting_documents);
    }

//    eventlistner for download files
    document.addEventListener('click', async function (event) {
            const button = event.target.closest('button');
            if (button && button.id && button.classList.contains('download-file')) {
                try {
                    const fileDataString = button.getAttribute('data-filename');
                    if (!fileDataString) {
                        throw new Error('Data filename attribute not found on button.');
                    }

                    const fileArray = fileDataString.split(',').map(fileName => fileName.trim()).filter(Boolean); // Remove empty strings
                    if (fileArray.length === 0) {
                        throw new Error('No file names found in data filename attribute.');
                    }

                    const downloadPromises = fileArray.map(async (fileName) => {

                        const fileUrl = `<%- BASE_URL %>research/book-publication-main/book-chapter-publication/download/${fileName}`;
                        downloadFile(fileName, fileUrl)
                        try {
                            const response = await fetch(fileUrl);
                            if (!response.ok) {
                                throw new Error(`Failed to download file: ${fileName}`);
                            }
                            console.log('File downloaded successfully:', fileName);
                            return fileName;
                        } catch (error) {
                            console.error('Error downloading file:', error);
                            throw error;
                        }
                    });

                    const downloadedFiles = await Promise.all(downloadPromises);
                    console.log('All files downloaded successfully:', downloadedFiles);
                } catch (error) {
                    console.error('Error downloading files:', error);
                    alert(`There was a problem downloading files: ${error.message}`);
                }
            }
        });

      // set string file value into button
      function setFileNameAttributeToBeDownload(data){
        console.log('data row in side function ===>>', data);
        const bookChapterDataFiles = document.getElementById('book-chapter-edit');
        bookChapterDataFiles.classList.remove('d-none');
        const bookChapterDataString = data.getAttribute('data-supporting-documents');

        // setAttribute into button
        bookChapterDataFiles.setAttribute('data-filename', bookChapterDataString);
    };

</script>
<!-- pagination -->
<%- include('./partials/pagination') %>
<!-- footer section -->
<%- include('./partials/footer') %>
<%- include('./partials/footer-end') %>

           