--  table for journal paper



	
-- FOR FOR PATENT SUBMISSION updated on 4/03/2024
CREATE TABLE patent_submissions (
    id SERIAL PRIMARY KEY,
    type_of_invention VARCHAR(255),
    title_of_invention VARCHAR(255),
    patent_stage VARCHAR(255),
    sdg_goals VARCHAR(255),
    application_no INTEGER,
    date DATE,
    author_type VARCHAR(255),  --updated is_presenter 
    patent_file VARCHAR(255)
);


-- FOR CASE STUDY 
CREATE TABLE case_studies (
     id SERIAL PRIMARY KEY,
     author_first_name VARCHAR(255) ,
     author_last_name VARCHAR(255), 
     title_of_case_study VARCHAR(255),
     edition VARCHAR(255), 
      volume_number INTEGER, 
      publisher_name VARCHAR(255), 
      publication_year INTEGER,
      page_number INTEGER,
	  publisher_category VARCHAR(20) CHECK(publisher_category IN ('International', 'National')),
      url_of_case_study VARCHAR(255),
      number_of_nmims_authors INTEGER,
      nmims_authors VARCHAR(255), 
      nmims_campus_authors VARCHAR(255), 
      nmims_school_authors VARCHAR(255)
)

-- FOR CONFERENCE PUBLICATION 
CREATE TABLE conference_presentation (
    id SERIAL PRIMARY KEY,
	nmims_campus VARCHAR(255),
	nmims_school VARCHAR(255),
    title_of_paper VARCHAR(255),
    conference_name VARCHAR(255),
	conference_place VARCHAR(255),
    proceedings_detail VARCHAR(255),
    conference_type VARCHAR(20) CHECK(conference_type IN ('International', 'National')),
    is_presenter VARCHAR(3) CHECK(is_presenter IN ('Yes', 'No')),
    author_type VARCHAR(255),
    presenting_authors VARCHAR(255),
	organizing_body VARCHAR(255),
	award_for_presentation VARCHAR(255) CHECK(award_for_presentation IN ('Yes', 'No')),
    vol_and_issue_no INTEGER,
    issn_isbn_no INTEGER,
    doi_id INTEGER NULL UNIQUE,
    upload_files VARCHAR(255),
	sponsored VARCHAR(20) CHECK(sponsored IN ('NMIMS', 'Others')),
	spent_amount INTEGER,
	publication_date DATE,
	upload_proof VARCHAR(255),
	created_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP
);


-- research_award
CREATE TABLE research_award(
	id SERIAL PRIMARY KEY,
	nmims_campus VARCHAR(255),
	nmims_school VARCHAR(255),
    faculty_name VARCHAR(255),
    award_name VARCHAR(255),
    award_details VARCHAR(255),
    organisation_name_coferring_award VARCHAR(255),
    date DATE,
	award_category VARCHAR(20) CHECK(award_category IN ('International', 'National')),
    supporting_documents VARCHAR(255),
	created_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

-- book_publications
CREATE TABLE book_publications (
     id SERIAL PRIMARY KEY,
     author_last_name VARCHAR(255), 
     book_title VARCHAR(255),
     edition VARCHAR(255),
	isbn INTEGER,
     publication_place VARCHAR(255),
     publisher_category VARCHAR(20) CHECK(publisher_category IN ('International', 'National')),
     volume_number INTEGER, 
     publisher_name VARCHAR(255), 
     publication_year INTEGER,
     book_url VARCHAR(255),
	doi_id INTEGER NULL UNIQUE,
     number_of_nmims_authors INTEGER,
     nmims_authors VARCHAR(255), 
     nmims_campus_authors VARCHAR(255), 
     nmims_school_authors VARCHAR(255),
     supporting_documents VARCHAR(255),
	created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- dited_book_publications
CREATE TABLE edited_book_publications (
     id SERIAL PRIMARY KEY,
     author_name VARCHAR(255) ,
     book_title VARCHAR(255),
	chapter_title VARCHAR(255),
	editor_name VARCHAR(255),
     edition VARCHAR(255),
	 publication_place VARCHAR(255),
	 publisher_category VARCHAR(20) CHECK(publisher_category IN ('International', 'National')),
     page_number INTEGER, 
     publisher_name VARCHAR(255), 
     publication_year INTEGER,
     book_url VARCHAR(255),
	 doi_id INTEGER,
	 isbn_no INTEGER,
     number_of_nmims_authors INTEGER,
     nmims_authors VARCHAR(255), 
     nmims_campus_authors VARCHAR(255), 
     nmims_school_authors VARCHAR(255),
	 supporting_documents VARCHAR(255)
    --  type change VARCHAR(50) to VARCHAR(255)
)

-- book_chapter_publications
CREATE TABLE book_chapter_publications (
     id SERIAL PRIMARY KEY,
     author_name VARCHAR(255) ,
     book_title VARCHAR(255),
	chapter_title VARCHAR(255),
	volume_number INTEGER,
	editor_name VARCHAR(255),
	book_editor VARCHAR(255),
    edition VARCHAR(255),
	publisher_category VARCHAR(20) CHECK(publisher_category IN ('International', 'National')),
    page_number INTEGER, 
    publisher_name VARCHAR(255), 
    publication_year INTEGER,
    book_url VARCHAR(255),
	doi_id INTEGER NULL UNIQUE,
	isbn INTEGER,
    number_of_nmims_authors INTEGER,
    nmims_authors VARCHAR(255), 
    nmims_campus_authors VARCHAR(255), 
    nmims_school_authors VARCHAR(255),
	supporting_documents VARCHAR(255),
	created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- teaching_execellance
CREATE TABLE teaching_execellance (
    id SERIAL PRIMARY KEY,
    
    -- Pedagogy Innovation
    pedagogy_innovation VARCHAR(255),
    pedagogy_innovation_file VARCHAR(255),
    pedagogy_innovation_link VARCHAR(255),
    
    -- FDP Program
    fdp_program VARCHAR(255),
    fdp_program_file VARCHAR(255),
    fdp_program_link VARCHAR(255),
    
    -- Workshop for Students
    workshop_details VARCHAR(255),
    workshop_file VARCHAR(255),
    workshop_link VARCHAR(255),
    
    -- Inviting Faculty
    inviting_faculty VARCHAR(255),
    inviting_faculty_file VARCHAR(255),
    inviting_faculty_link VARCHAR(255),
    
    -- Program Orientation
    program_orientation VARCHAR(255),
    program_orientation_file VARCHAR(255),
    program_orientation_link VARCHAR(255)
);

-- research_seminars
 CREATE TABLE research_seminars (
    id SERIAL PRIMARY KEY,
    year INTEGER,
    school VARCHAR(255),
    campus VARCHAR(255),
    nmims_faculty VARCHAR(255),
    title_of_paper VARCHAR(255),
    journal_name VARCHAR(255),
    publisher VARCHAR(255),
    pages VARCHAR(255),
    issn_no VARCHAR(255),
	publisher_category VARCHAR(20) CHECK(publisher_category IN ('International', 'National')),
    date_of_publishing DATE,
    impact_factor VARCHAR(255),
    scs_cite_score INTEGER,
    scs_indexed VARCHAR(255),
    wos_indexed VARCHAR(255),
    gs_indexed VARCHAR(255),
    abdc_indexed VARCHAR(255),
    ugc_indexed VARCHAR(255),
    web_link VARCHAR(255),
    uid VARCHAR(255)
);

-- meeting_stackholders
CREATE TABLE meeting_stackholders (
    id SERIAL PRIMARY KEY,
    
    -- Ranking
    ranking VARCHAR(255),
    ranking_documents VARCHAR(255),
    ranking_link VARCHAR(255),
    
    -- Accreditation
    accreditation VARCHAR(255),
    accreditation_documents VARCHAR(255),
    accreditation_link VARCHAR(255),
    
    -- School/Campus Achievements
    school_campus_achievements VARCHAR(255),
    achievements_documents VARCHAR(255),
    achievements_link VARCHAR(255),
    
    -- Convocation at NMIMS
    convocation VARCHAR(255),
    convocation_documents VARCHAR(255),
    convocation_link VARCHAR(255),
    
    -- Inaugural Program at NMIMS
    inaugural_program VARCHAR(255),
    inaugural_program_documents VARCHAR(255),
    inaugural_program_link VARCHAR(255),
    
    -- Events at NMIMS
    events VARCHAR(255),
    events_documents VARCHAR(255),
    events_link VARCHAR(255)
);

-- branding_and_advertising
CREATE TABLE branding_and_advertising (
    id SERIAL PRIMARY KEY,
    
    -- Faculty Recognition
    faculty_recognition VARCHAR(255),
    faculty_recognition_documents VARCHAR(255),
    faculty_recognition_link VARCHAR(255),

    -- Faculty Awards
    faculty_award VARCHAR(255),
    faculty_award_documents VARCHAR(255),
    faculty_award_link VARCHAR(255),

    -- Staff Awards
    staff_award VARCHAR(255),
    staff_award_documents VARCHAR(255),
    staff_award_link VARCHAR(255),

    -- Alumni Awards
    alumni_award VARCHAR(255),
    alumni_award_documents VARCHAR(255),
    alumni_award_link VARCHAR(255),

    -- Student Awards
    student_award VARCHAR(255),
    student_award_documents VARCHAR(255),
    student_award_link VARCHAR(255),

    -- International Linkage Ventures
    international_linkage VARCHAR(255),
    international_linkage_documents VARCHAR(255),
    international_linkage_link VARCHAR(255),

    -- Conference Participation
    conference_participation VARCHAR(255),
    conference_participation_documents VARCHAR(255),
    conference_participation_link VARCHAR(255),

    -- Organising Conference at NMIMS
    organising_conference VARCHAR(255),
    organising_conference_documents VARCHAR(255),
    organising_conference_link VARCHAR(255),

    -- Student Event Participation
    student_event_participation VARCHAR(255),
    student_event_participation_documents VARCHAR(255),
    student_event_participation_link VARCHAR(255),

    -- Newspaper Article
    newspaper_article VARCHAR(255),
    newspaper_article_documents VARCHAR(255),
    newspaper_article_link VARCHAR(255)
);




-- updated in  editor tables 
-- created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
-- ALTER COLUMN updated_at SET DEFAULT CURRENT_TIMESTAMP,
-- added one more column created_by
-- ALTER TABLE branding_editor_table
-- ADD COLUMN created_by VARCHAR(255); HERE USER ID WILL PLACE IN PLACE OF created_by
-- ALTER TABLE branding_editor_table
-- RENAME COLUMN branding_editor_data TO editor_data;

-- vc_editor_table
CREATE TABLE vc_editor_table (
    id SERIAL PRIMARY KEY,
    date DATE,
	created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    editor_data TEXT,
    created_by VARCHAR(255)
);

-- research_editor_table
CREATE TABLE research_editor_table (
    id SERIAL PRIMARY KEY,
    date DATE,
	created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    editor_data Text,
    created_by VARCHAR(255)
);

-- meeting_editor_table
CREATE TABLE meeting_editor_table (
    id SERIAL PRIMARY KEY,
    date DATE,
	created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
 	updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    editor_data Text,
    created_by VARCHAR(255)
);

-- branding_editor_table
CREATE TABLE branding_editor_table (
    id SERIAL PRIMARY KEY,
    date DATE,
	created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
 	updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    editor_data Text,
    created_by VARCHAR(255)
);




CREATE TABLE e_content_development (
    ID SERIAL PRIMARY KEY,
	faculty_name VARCHAR(255),
	module_name VARCHAR(255),
	platform VARCHAR(255),
	launch_date DATE,
	document_links TEXT,
  	content_development_facilities TEXT,
    media_centre_video_link TEXT
);


CREATE TABLE consultancy_approval_form(
	id SERIAL PRIMARY KEY,
	year INTEGER,
	title text,
	faculty_table_id INT,
	commencement_date DATE,
	completion_date DATE,
	session_count_per_days INTEGER,
	per_session_fees INTEGER,
	total_fees INTEGER,
	gross_fees INTEGER,
	faculty_shares VARCHAR(255),
	nmims_shares VARCHAR(255),
	research_staff_expenses INTEGER,
	travel INTEGER,
	computer_charges INTEGER,
	nmims_facility_charges INTEGER,
	miscellaneous_including_contingency INTEGER,
	advanced_payment INTEGER,
	final_payment INTEGER,
	FOREIGN KEY (faculty_table_id) REFERENCES faculty_table(id),
	created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE faculties (
    id SERIAL PRIMARY KEY,
    faculty_type_id INTEGER REFERENCES faculty_types(id),
    employee_id INTEGER NULL,
	faculty_name VARCHAR(255),
    designation VARCHAR(50),
    address VARCHAR(50),
    updated_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    created_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_by INTEGER, -- Assuming this is a reference to some user or admin table
    active BOOLEAN DEFAULT TRUE
);

CREATE TABLE faculty_types (
    id SERIAL PRIMARY KEY,
    name VARCHAR(50)
);

INSERT INTO faculty_types (name) VALUES 
('Internal'),
('External');


CREATE TABLE faculty_table(
	id SERIAL PRIMARY KEY,
	faculty_name VARCHAR(255),
	designation VARCHAR(255),
	address VARCHAR(255),
	created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP

);

-- Insert into faculty_table
INSERT INTO faculty_table (faculty_name, designation, address)
VALUES ('John Doe', 'Professor', '123 Main St');

-- Insert into consultancy_approval_form
INSERT INTO consultancy_approval_form (year, title, faculty_table_id, commencement_date, completion_date,per_session_fees ,
	days, sessions, total_fees, gross_fees, faculty_shares, nmims_shares, research_staff_expenses, travel, computer_charges, nmims_facility_charges, miscellaneous_including_contingency, advanced_payment, final_payment, total_payment)
VALUES (2024, 'Project Title', 2, '2024-01-01', '2024-12-31',10, 20, 1500, 15000, 15000, '70%', '30%', 1000, 500, 200, 300, 150, 5000, 10000, 15000);



SELECT 
    f.id AS faculty_id,
    f.faculty_name,
    f.designation,
    f.address,
    c.id AS consultancy_id,
    c.year,
    c.title,
    c.commencement_date,
    c.completion_date,
    c.research_staff_expenses,
    c.travel,
    c.computer_charges,
    c.nmims_facility_charges,
    c.miscellaneous_including_contingency,
    c.advanced_payment,
    c.final_payment,
	c.gross_fees,
	c.per_session_fees ,
	c.days ,
	c.sessions ,
	c.total_fees ,
	c.faculty_shares,
	c.nmims_shares
FROM 
    faculty_table f
JOIN 
    consultancy_approval_form c ON f.id = c.faculty_table_id;


CREATE TABLE nmims_seed_grant_non_formacy(
	id SERIAL PRIMARY KEY,
	year INTEGER,
	title text,
	faculty_table_id INT,
	commencement_date DATE,
	completion_date DATE,
	session_count_per_days INTEGER,
	per_session_fees INTEGER,
	total_fees INTEGER,
	gross_fees INTEGER,
	faculty_shares VARCHAR(255),
	nmims_shares VARCHAR(255),
	research_staff_expenses INTEGER,
	travel INTEGER,
	computer_charges INTEGER,
	nmims_facility_charges INTEGER,
	miscellaneous_including_contingency INTEGER,
	advanced_payment INTEGER,
	final_payment INTEGER,
	FOREIGN KEY (faculty_table_id) REFERENCES faculty_table(id),
	created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);


-- CREATE TABLE research_project_grant (
--     id SERIAL PRIMARY KEY,
--     grant_proposal_category VARCHAR(255),
--     type_of_research_grant VARCHAR(50),
--     title_of_project VARCHAR(255),
--     thrust_area_of_research VARCHAR(255),
--     name_of_funding_agency VARCHAR(100),
--     funding_amount NUMERIC,
--     status_of_research_project VARCHAR(50),
--     submission_date DATE,
--     supporting_documents VARCHAR(255),
--     faculty_table_id INTEGER,
--     external_faculty_table_id INTEGER,
--     FOREIGN KEY (faculty_table_id) REFERENCES faculty_table(id),
--     FOREIGN KEY (external_faculty_table_id) REFERENCES external_faculty_table(id),
--     created_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP,
--     updated_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP
-- );

-- INSERT INTO external_faculty_table (external_faculty_name, email, address)
-- VALUES 
--     ('External Faculty 1', 'external1@example.com', '789 Oak St'),
--     ('External Faculty 2', 'external2@example.com', '101 Pine St');

-- create table external_faculty_table(
-- 	 id SERIAL PRIMARY KEY,
--     external_faculty_name VARCHAR(255),
--     email VARCHAR(50),
--     address VARCHAR(255)
-- )






-- -- Insert data into faculty_table
-- INSERT INTO faculty_table (faculty_name, designation, address)
-- VALUES 
--     ('Raj Kumar', 'Professor', 'Banglore'),
--     ('Avinash', 'Associate Professor', 'Mumbai');

-- -- Insert data into external_faculty_table
-- INSERT INTO external_faculty_table (external_faculty_name, email, address)
-- VALUES 
--     ('External Faculty 1', 'external1@example.com', '789 Oak St'),
--     ('External Faculty 2', 'external2@example.com', '101 Pine St');

-- -- Insert data into research_project_grant
-- INSERT INTO research_project_grant (grant_proposal_category, type_of_research_grant, title_of_project, thrust_area_of_research, name_of_funding_agency, funding_amount, status_of_research_project, submission_date, supporting_documents, faculty_table_id,
-- 								   external_faculty_table_id)
-- VALUES 
--     ('Category A', 'Research Grant', 'Project 1', 'Area 1', 'Funding Agency A', 100000.00, 'Approved', '2024-04-15', 'Supporting Docs 1', 1, 2),
--     ('Category B', 'Development Grant', 'Project 2', 'Area 2', 'Funding Agency B', 150000.00, 'Pending', '2024-05-01', 'Supporting Docs 2', 2, 1);

-- SELECT *
-- FROM research_project_grant AS rpg
-- LEFT JOIN faculty_table AS ft ON rpg.faculty_table_id = ft.id
-- LEFT JOIN external_faculty_table AS eft ON rpg.external_faculty_table_id = eft.id;



CREATE TABLE research_project_grant (
    id SERIAL PRIMARY KEY,
    grant_proposal_category VARCHAR(255),
    type_of_research_grant VARCHAR(50),
    title_of_project VARCHAR(255),
    thrust_area_of_research VARCHAR(255),
    name_of_funding_agency VARCHAR(100),
    funding_amount NUMERIC,
    status_of_research_project VARCHAR(50),
    submission_date DATE,
    supporting_documents VARCHAR(255),
    created_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP
);


CREATE TABLE research_project_grant_faculty (
    id SERIAL PRIMARY KEY,
    research_project_grant_id INTEGER REFERENCES research_project_grant(id),
    faculty_id INTEGER REFERENCES faculties(id)
);






INSERT INTO research_project_grant (grant_proposal_category, type_of_research_grant, title_of_project, thrust_area_of_research, name_of_funding_agency, funding_amount, status_of_research_project, submission_date, supporting_documents) VALUES
('Science', 'Basic Research', 'Project A', 'Biology', 'National Institutes of Health', 50000, 'In Progress', '2024-04-01', 'docs/project_a_supporting_docs.pdf'),
('Engineering', 'Applied Research', 'Project B', 'Civil Engineering', 'National Science Foundation', 75000, 'Approved', '2024-05-15', 'docs/project_b_supporting_docs.pdf');


INSERT INTO faculties (faculty_type_id, employee_id, faculty_name, designation, address, updated_by) VALUES

(2, 1003, 'Dr. Ankit Mishra','Software engineer', '7008 Oak panna, City, Country', 1),
(1, 1001, 'Dr. John Doe', 'Software Developer', '123 Main St, City, Country', 1),
(1, 1002, 'Dr. Jane Smith','Software Analysis', '456 Elm St, City, Country', 1),
(1, 1003, 'Dr. Michael Johnson', ' Profecssor', '789 Oak St, City, Country', 1);

select * from  faculties where faculty_type_id = 1;
select * from faculties;

INSERT INTO research_project_grant_faculty (research_project_grant_id, faculty_id) VALUES
(1, 1),
(1, 2),
(2, 2),
(2, 3);

SELECT 
        r.id AS project_id,
        r.title_of_project,
        r.grant_proposal_category,
        r.type_of_research_grant,
        r.thrust_area_of_research,
        r.name_of_funding_agency,
        r.funding_amount,
        r.status_of_research_project,
        r.submission_date,
        r.supporting_documents,
        f.id AS faculty_id,
        f.employee_id,
        f.faculty_name,
        f.designation,
        f.address,
        ft.name AS faculty_type
    FROM 
        research_project_grant AS r
    INNER JOIN 
        research_project_grant_faculty AS rf ON r.id = rf.research_project_grant_id
    LEFT JOIN 
        faculties AS f ON rf.faculty_id = f.id
    LEFT JOIN 
        faculty_types AS ft ON f.faculty_type_id = ft.id
    ORDER BY  r.id



-- for patentSubmission form
CREATE TABLE patent_submission_grant(
	id SERIAL PRIMARY KEY,
	innovation_title  VARCHAR(255),
	application_number INTEGER,
	grant_date DATE,
	supporting_documents VARCHAR(255),
    created_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP
)

CREATE TABLE sdg_goals(
	id SERIAL PRIMARY KEY,
	name  VARCHAR(255),
    created_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP
);


CREATE TABLE invention_type(
	id SERIAL PRIMARY KEY,
	name  VARCHAR(255),
    created_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE pantent_stage_status(
	id SERIAL PRIMARY KEY,
	name  VARCHAR(255),
    created_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE patent_submission_sdg_goals (
    id SERIAL PRIMARY KEY,
    patent_submission_grant_id INTEGER REFERENCES patent_submission_grant(id),
    sdg_goals_id INTEGER REFERENCES sdg_goals(id)
);



CREATE TABLE patent_submission_invention_type (
    id SERIAL PRIMARY KEY,
    patent_submission_grant_id INTEGER REFERENCES patent_submission_grant(id),
    invention_type_id INTEGER REFERENCES invention_type(id),
    created_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP
);



CREATE TABLE patent_submission_stage_status (
    id SERIAL PRIMARY KEY,
    patent_submission_grant_id INTEGER REFERENCES patent_submission_grant(id),
    pantent_stage_status_id INTEGER REFERENCES pantent_stage_status(id),
     created_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP
);



CREATE TABLE patent_submission_faculty (
    id SERIAL PRIMARY KEY,
    patent_submission_grant_id INTEGER REFERENCES patent_submission_grant(id),
    faculty_id INTEGER REFERENCES faculties(id),
    created_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP
);




CREATE TABLE IPR(
	id SERIAL PRIMARY KEY,
	patent_title  VARCHAR(255),
	patent_application_number INTEGER,
	applicant_name  VARCHAR(255),
	patent_filed_date Date,
	patent_published_date Date,
	patent_publication_number INTEGER,
	patent_Grant_number INTEGER,
	institutional_affiliation VARCHAR(255),
    created_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE supporting_documents(
	id SERIAL PRIMARY KEY,
	documents_name VARCHAR(255),
	created_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP
);


CREATE TABLE invention_type(
	id SERIAL PRIMARY KEY,
	name  VARCHAR(255),
    created_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP
);


CREATE TABLE pantent_stage_status(
	id SERIAL PRIMARY KEY,
	name  VARCHAR(255),
    created_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP
);



-- ipr data table
CREATE TABLE ipr_invention_type(
	id SERIAL PRIMARY KEY,
    ipr_id INTEGER REFERENCES IPR(id),
    invention_type_id INTEGER REFERENCES invention_type(id),
    created_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP
)

CREATE TABLE ipr_status_type(
	id SERIAL PRIMARY KEY,
    ipr_id INTEGER REFERENCES IPR(id),
    pantent_stage_status_id INTEGER REFERENCES pantent_stage_status(id),
    created_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP
)

CREATE TABLE ipr_supporting_documents(
	id SERIAL PRIMARY KEY,
    ipr_id INTEGER REFERENCES IPR(id),
    supporting_documents_id INTEGER REFERENCES supporting_documents(id),
    created_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE nmims_school(
	id SERIAL PRIMARY KEY,
	school_name  VARCHAR(255),
    created_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP
	
)

CREATE TABLE nmims_campus(
	id SERIAL PRIMARY KEY,
	campus_name  VARCHAR(255),
    created_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP
)

CREATE TABLE ipr_nmims_school(
	id SERIAL PRIMARY KEY,
    ipr_id INTEGER REFERENCES IPR(id),
    school_id INTEGER REFERENCES nmims_school(id),
    created_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE ipr_nmims_campus(
	id SERIAL PRIMARY KEY,
    ipr_id INTEGER REFERENCES IPR(id),
    campus_id INTEGER REFERENCES nmims_campus(id),
    created_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE ipr_faculty(
	id SERIAL PRIMARY KEY,
    ipr_id INTEGER REFERENCES IPR(id),
    faculty_id INTEGER REFERENCES faculties(id),
    created_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP
);



-- =======================================================================================

CREATE TABLE jorunal_article_type(
	id SERIAL PRIMARY KEY,
	article_type varchar(100)
);
--  table for journal paper




CREATE TABLE nmims_school(
	id SERIAL PRIMARY KEY,
	school_name  VARCHAR(255),
    created_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP
	
)

CREATE TABLE nmims_campus(
	id SERIAL PRIMARY KEY,
	campus_name  VARCHAR(255),
    created_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP
);


CREATE TABLE journal_article_school(
	id SERIAL PRIMARY KEY,
    journal_article_id INTEGER REFERENCES journal_paper_article(id),
    school_id INTEGER REFERENCES nmims_school(id),
	created_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP
);


CREATE TABLE journal_article_campus(
	id SERIAL PRIMARY KEY,
    journal_article_id INTEGER REFERENCES journal_paper_article(id),
    campus_id INTEGER REFERENCES nmims_campus(id),
	created_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP
);


CREATE TABLE nmims_faculties(
	id SERIAL PRIMARY KEY,
    journal_article_id INTEGER REFERENCES journal_paper_article(id),
    faculty_id INTEGER REFERENCES faculties(id)
);

CREATE TABLE supporting_documents(
	id SERIAL PRIMARY KEY,
	documents_name VARCHAR(255),
	created_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP
);


CREATE TABLE journal_article_documents(
	id SERIAL PRIMARY KEY,
    journal_article_id INTEGER REFERENCES journal_paper_article(id),
    supporting_documents_id INTEGER REFERENCES supporting_documents(id),
	created_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP
);


CREATE TABLE policy_cadre(
	id SERIAL PRIMARY KEY,
	cadre_name VARCHAR(255),
	created_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP
);


CREATE TABLE journal_article_policy_cadre(
	id SERIAL PRIMARY KEY,
	journal_article_id INTEGER REFERENCES journal_paper_article(id),
    policy_cadre_id INTEGER REFERENCES policy_cadre(id),
	created_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP
);



CREATE TABLE impact_factor(
	id SERIAL PRIMARY KEY,
	impact_factor VARCHAR(255),
	created_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP
);


CREATE TABLE journal_article_impact_factor(
	id SERIAL PRIMARY KEY,
	journal_article_id INTEGER REFERENCES journal_paper_article(id),
	impact_factor_id INTEGER REFERENCES impact_factor(id),
	created_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP
);







-- Jounal paper articles data base table  ====>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

--  table for journal paper
drop table journal_paper_article;
select * from journal_paper_article;
CREATE TABLE journal_paper_article (
    id SERIAL PRIMARY KEY,
    year INTEGER,
    jorunal_article_type_id INTEGER REFERENCES jorunal_article_type(id),
    all_authors VARCHAR(255),
    total_authors INTEGER,
    nmims_authors_count INTEGER,
    count_other_faculty INTEGER,
    title_of_paper VARCHAR(255),
    journal_name VARCHAR(255),
    publisher VARCHAR(255),
    pages VARCHAR(255),
    issn_no VARCHAR(255),
    date_of_publishing DATE,
    scs_cite_score INTEGER,
    scs_indexed VARCHAR(50),
    wos_indexed VARCHAR(50),
    abdc_indexed VARCHAR(50),
    ugc_indexed VARCHAR(50),
	article_type VARCHAR(255),
	gs_index INTEGER,
	uid INTEGER, 
    web_link_doi_number INTEGER,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);





CREATE TABLE jorunal_article_type(
	id SERIAL PRIMARY KEY,
	article_type varchar(100)
);

CREATE TABLE nmims_school(
	id SERIAL PRIMARY KEY,
	school_name  VARCHAR(255),
    created_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP
	
)

CREATE TABLE nmims_campus(
	id SERIAL PRIMARY KEY,
	campus_name  VARCHAR(255),
    created_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP
);


CREATE TABLE journal_article_school(
	id SERIAL PRIMARY KEY,
    journal_article_id INTEGER REFERENCES journal_paper_article(id),
    school_id INTEGER REFERENCES nmims_school(id),
	created_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP
);


CREATE TABLE journal_article_campus(
	id SERIAL PRIMARY KEY,
    journal_article_id INTEGER REFERENCES journal_paper_article(id),
    campus_id INTEGER REFERENCES nmims_campus(id),
	created_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

select * from nmims_faculties;
CREATE TABLE nmims_faculties(
	id SERIAL PRIMARY KEY,
    journal_article_id INTEGER REFERENCES journal_paper_article(id),
    faculty_id INTEGER REFERENCES faculties(id)
);

CREATE TABLE all_article_authors(
	id SERIAL PRIMARY KEY,
    journal_article_id INTEGER REFERENCES journal_paper_article(id),
    faculty_id INTEGER REFERENCES faculties(id)
);


CREATE TABLE supporting_documents(
	id SERIAL PRIMARY KEY,
	documents_name VARCHAR(255),
	created_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP
);


CREATE TABLE journal_article_documents(
	id SERIAL PRIMARY KEY,
    journal_article_id INTEGER REFERENCES journal_paper_article(id),
    supporting_documents_id INTEGER REFERENCES supporting_documents(id),
	created_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

select * from policy_cadre;

CREATE TABLE policy_cadre(
	id SERIAL PRIMARY KEY,
	cadre_name VARCHAR(255),
	created_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP
);


CREATE TABLE journal_article_policy_cadre(
	id SERIAL PRIMARY KEY,
	journal_article_id INTEGER REFERENCES journal_paper_article(id),
    policy_cadre_id INTEGER REFERENCES policy_cadre(id),
	created_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

select * from faculties;

CREATE TABLE impact_factor(
	id SERIAL PRIMARY KEY,
	impact_factor VARCHAR(255),
	created_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP
);
SELECT 
                    imf.impact_factor,
                    imf.id
                FROM 
                journal_article_impact_factor aimf 
                JOIN 
                impact_factor imf ON aimf.impact_factor_id =  imf.id
                WHERE 
                aimf.journal_article_id = 1

CREATE TABLE journal_article_impact_factor(
	id SERIAL PRIMARY KEY,
	journal_article_id INTEGER REFERENCES journal_paper_article(id),
	impact_factor_id INTEGER REFERENCES impact_factor(id),
	created_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP
);




-- Insert two records into jorunal_article_type
INSERT INTO jorunal_article_type (article_type) VALUES 
('National'),
('International');

-- Insert two records into journal_paper_article
INSERT INTO journal_paper_article (year, jorunal_article_type_id, all_authors, total_authors, nmims_authors_count, count_other_faculty, title_of_paper, journal_name, publisher, pages, issn_no, date_of_publishing, scs_cite_score, scs_indexed, wos_indexed, abdc_indexed, ugc_indexed, web_link_doi_number)
VALUES
    (2022, 1, 'Author A, Author B', 2, 2, 0, 'Paper Title 1', 'Journal of Science', 'Science Publisher', '100-120', '1234-5678', '2022-04-16', 50, 'Yes', 'Yes', 'A', 'Yes', 123456),
    (2023, 2, 'Author C, Author D', 2, 1, 1, 'Paper Title 2', 'Journal of Technology', 'Tech Publisher', '200-220', '9876-5432', '2023-05-20', 65, 'Yes', 'Yes', 'B', 'No', 654321);







-- Insert two records into journal_article_school
INSERT INTO journal_article_school (journal_article_id, school_id)
VALUES
    (1, 1),
    (2, 2);

-- Insert two records into journal_article_campus
INSERT INTO journal_article_campus (journal_article_id, campus_id)
VALUES
    (1, 1),
    (2, 2);

-- Insert two records into nmims_faculties
INSERT INTO nmims_faculties (journal_article_id, faculty_id)
VALUES
    (1, 1),
    (2, 10);

-- Insert two records into supporting_documents
INSERT INTO supporting_documents (documents_name)
VALUES
    ('Document.pdf'),
    ('Document.pdf');
select * from supporting_documents;

-- Insert two records into journal_article_documents
INSERT INTO journal_article_documents (journal_article_id, supporting_documents_id)
VALUES
    (1, 1),
    (2, 2);

-- Insert two records into policy_cadre
INSERT INTO policy_cadre (cadre_name)
VALUES
    ('Policy Analyst'),
    ('Senior Policy Advisor'),

-- Insert two records into journal_article_policy_cadre
INSERT INTO journal_article_policy_cadre (journal_article_id, policy_cadre_id)
VALUES
    (1, 1),
    (2, 2);

-- Insert two records into impact_factor
INSERT INTO impact_factor (impact_factor)
VALUES
    ('Educational Researcher'),
	('Journal of Educational Psychology'),
	('American Educational Research Journal'),
	('Educational Leadership'),
	('Journal of Teacher Education'),
	('Review of Educational Research'),
	('Teaching and Teacher Education'),
	('Journal of Educational Technology & Society');

-- Insert two records into journal_article_impact_factor
INSERT INTO journal_article_impact_factor (journal_article_id, impact_factor_id)
VALUES
    (1, 1),
    (1, 2),
	(1, 4),
    (2, 8),
	(2, 5),
    (2, 3);
SELECT
    jpa.id AS article_id,
    jpa.title_of_paper,
    jpa.all_authors,
    jpa.total_authors,
    jpa.nmims_authors_count,
    jpa.journal_name,
    jpa.publisher,
    jpa.pages,
    jpa.issn_no,
    jpa.year,
    jpa.article_type,
    jpa.date_of_publishing,
    jpa.scs_cite_score,
    jpa.scs_indexed,
    jpa.abdc_indexed,
    jpa.wos_indexed,
    jpa.ugc_indexed,
    jpa.web_link_doi_number,
    jaf.impact_factor,
    string_agg(DISTINCT sd.documents_name, ', ') AS supporting_documents,
    string_agg(DISTINCT pc.cadre_name, ', ') AS policy_cadre,
    string_agg(CASE WHEN ft.name = 'Internal' THEN f.faculty_name ELSE NULL END, ', ') AS internal_faculty_names,
    f.designation,
    f.address,
    f.employee_id,
    nf.id AS nmims_faculties_id,
    string_agg(DISTINCT ns.school_name, ', ') AS associated_schools,
    string_agg(DISTINCT ns.id::text, ', ') AS school_id,
    string_agg(DISTINCT nc.campus_name, ', ') AS associated_campuses,
    string_agg(DISTINCT nc.id::text, ', ') AS campus_id
FROM
    journal_paper_article jpa
LEFT JOIN
    journal_article_school jas ON jpa.id = jas.journal_article_id
LEFT JOIN
    nmims_school ns ON jas.school_id = ns.id
LEFT JOIN
    journal_article_campus jac ON jpa.id = jac.journal_article_id
LEFT JOIN
    nmims_campus nc ON jac.campus_id = nc.id
LEFT JOIN
    journal_article_impact_factor jaif ON jpa.id = jaif.journal_article_id
LEFT JOIN
    impact_factor jaf ON jaif.impact_factor_id = jaf.id
LEFT JOIN
    nmims_faculties nf ON jpa.id = nf.journal_article_id
LEFT JOIN
    faculties f ON nf.faculty_id = f.id
LEFT JOIN
    journal_article_documents jad ON jpa.id = jad.journal_article_id
LEFT JOIN
    supporting_documents sd ON jad.supporting_documents_id = sd.id
LEFT JOIN
    journal_article_policy_cadre japc ON jpa.id = japc.journal_article_id
LEFT JOIN
    policy_cadre pc ON japc.policy_cadre_id = pc.id
LEFT JOIN
    faculty_types ft ON f.faculty_type_id = ft.id
GROUP BY
    jpa.id,
    jpa.title_of_paper,
    jpa.all_authors,
    jpa.total_authors,
    jpa.nmims_authors_count,
    jpa.journal_name,
    jpa.publisher,
    jpa.pages,
    jpa.issn_no,
    jpa.year,
    jpa.article_type,
    jpa.date_of_publishing,
    jpa.scs_cite_score,
    jpa.scs_indexed,
    jpa.abdc_indexed,
    jpa.wos_indexed,
    jpa.ugc_indexed,
    jpa.web_link_doi_number,
    jaf.impact_factor,
    f.designation,
    f.address,
    f.employee_id,
    nf.id
ORDER BY
    jpa.id;
SELECT
    jpa.id AS article_id,
    jpa.title_of_paper,
    jpa.all_authors,
    jpa.total_authors,
    jpa.nmims_authors_count,
    jpa.journal_name,
    jpa.publisher,
    jpa.pages,
    jpa.issn_no,
    jpa.year,
    jpa.article_type,
    jpa.date_of_publishing,
    jpa.scs_cite_score,
    jpa.scs_indexed,
    jpa.abdc_indexed,
    jpa.wos_indexed,
    jpa.ugc_indexed,
    jpa.web_link_doi_number,
    jaf.impact_factor,
    string_agg(DISTINCT sd.documents_name, ', ') AS supporting_documents,
    string_agg(DISTINCT pc.cadre_name, ', ') AS policy_cadre,
    string_agg(DISTINCT f.faculty_name, ', ') AS internal_faculty_names,
    string_agg(DISTINCT a.faculty_name, ', ') AS all_article_authors_names
FROM
    journal_paper_article jpa
LEFT JOIN
    journal_article_school jas ON jpa.id = jas.journal_article_id
LEFT JOIN
    nmims_school ns ON jas.school_id = ns.id
LEFT JOIN
    journal_article_campus jac ON jpa.id = jac.journal_article_id
LEFT JOIN
    nmims_campus nc ON jac.campus_id = nc.id
LEFT JOIN
    journal_article_impact_factor jaif ON jpa.id = jaif.journal_article_id
LEFT JOIN
    impact_factor jaf ON jaif.impact_factor_id = jaf.id
LEFT JOIN
    nmims_faculties nf ON jpa.id = nf.journal_article_id
LEFT JOIN
    faculties f ON nf.faculty_id = f.id
LEFT JOIN
    all_article_authors aa ON jpa.id = aa.journal_article_id
LEFT JOIN
    faculties a ON aa.faculty_id = a.id
LEFT JOIN
    journal_article_documents jad ON jpa.id = jad.journal_article_id
LEFT JOIN
    supporting_documents sd ON jad.supporting_documents_id = sd.id
LEFT JOIN
    journal_article_policy_cadre japc ON jpa.id = japc.journal_article_id
LEFT JOIN
    policy_cadre pc ON japc.policy_cadre_id = pc.id
GROUP BY
    jpa.id,
    jpa.title_of_paper,
    jpa.all_authors,
    jpa.total_authors,
    jpa.nmims_authors_count,
    jpa.journal_name,
    jpa.publisher,
    jpa.pages,
    jpa.issn_no,
    jpa.year,
    jpa.article_type,
    jpa.date_of_publishing,
    jpa.scs_cite_score,
    jpa.scs_indexed,
    jpa.abdc_indexed,
    jpa.wos_indexed,
    jpa.ugc_indexed,
    jpa.web_link_doi_number,
    jaf.impact_factor
ORDER BY
    jpa.id;
	
	



